{
	"info": {
		"_postman_id": "eacd1540-b1b5-43da-8771-1634b2eea647",
		"name": "TabLab-Develop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Populate",
			"item": [
				{
					"name": "Populate DB",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/populate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Photo (irene)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/Imágenes/jelly.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Photo (daniel)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/Imágenes/squid.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Photo (pedro)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/Imágenes/palm-tree.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Photo (sandra)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/Imágenes/beans.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Photo (walo)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/Imágenes/duck.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Content (Datafile 1)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/ficheros/fulls_dmf_full_v1_20200504_short_10_werrs.csv"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Content (Esquema 1)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/ficheros/populate_schema.json"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Content (Esquema 2)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/ficheros/populate_schema_2.json"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/populate/uploadFile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"populate",
								"uploadFile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const userId = pm.response.json().user._id;\r",
									"pm.collectionVariables.set(\"userId\", userId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test001\", \r\n    \"email\": \"test001@gmail.com\", \r\n    \"password\": \"test001\", \r\n    \"name\": \"test001\", \r\n    \"photo\": \"\",\r\n    \"role\":\"USER\",\r\n    \"status\": \"true\", \r\n    \"google\": \"false\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User (irene)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const token = pm.response.json().token;\r",
									"pm.globals.set(\"token\",\"Bearer \"+token)\r",
									"\r",
									"const userId = pm.response.json().user._id;\r",
									"pm.collectionVariables.set(\"userId\", userId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"irene\",\r\n    \"password\": \"IRene25*\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/60ad88d2a74d2e58cc611a31",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"60ad88d2a74d2e58cc611a31"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users By Workspace",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/workspace/60aeaf40d0e8477348250ac9?from=0&limit=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"workspace",
								"60aeaf40d0e8477348250ac9"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"User Test Update\", \r\n    \"username\": \"test\", \r\n    \"email\": null, \r\n    \"role\":\"USER\",\r\n    \"actualPass\": null,\r\n    \"newPass\": null,\r\n    \"repeatPass\": null\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users/{{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Photo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/Imágenes/duck.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/uploads/users/{{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"uploads",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/{{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Image",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/duck.png",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"duck.png"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Collections",
			"item": [
				{
					"name": "Get Collections",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/collections/60aeaf40d0e8477348250ac9",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"collections",
								"60aeaf40d0e8477348250ac9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const collectionId = pm.response.json().collection._id;\r",
									"pm.collectionVariables.set(\"collectionId\", collectionId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"title\": \"Collection Test\", \r\n    \"workspace\": \"60aeaf40d0e8477348250ac9\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/collections",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"collections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Collection",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"title\": \"Collection Test Update\", \r\n    \"workspace\": \"60aeaf40d0e8477348250ac9\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/collections/{{collectionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"collections",
								"{{collectionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Collection",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/collections/{{collectionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"collections",
								"{{collectionId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configurations",
			"item": [
				{
					"name": "Get Configurations By Datafile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/configurations/datafile/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configurations",
								"datafile",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const configurationId = pm.response.json().configuration._id;\r",
									"pm.collectionVariables.set(\"configurationId\", configurationId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Configuration Test\",\r\n    \"errorCode\":\"duplicate-row\",\r\n    \"extraParams\":{},\r\n    \"datafile\":\"60b634e98ab1a18d8850e49e\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/configurations",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/configurations/{{configurationId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configurations",
								"{{configurationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Configuration Test Update\",\r\n    \"errorCode\":\"duplicate-row\",\r\n    \"extraParams\":{},\r\n    \"datafile\":\"60b634e98ab1a18d8850e49e\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/configurations/{{configurationId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configurations",
								"{{configurationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete configuration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/configurations/{{configurationId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"configurations",
								"{{configurationId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Datafiles",
			"item": [
				{
					"name": "Get Datafiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/datafiles/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"datafiles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Datafile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const datafileId = pm.response.json().datafile._id;\r",
									"pm.collectionVariables.set(\"datafileId\", datafileId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Datafile Test\",\r\n    \"coleccion\":null,\r\n    \"workspace\":\"60aeaf40d0e8477348250ac9\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/datafiles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"datafiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Content",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"type": "text"
								},
								{
									"key": "datafileId",
									"value": "{{datafileId}}",
									"type": "text"
								},
								{
									"key": "operation",
									"value": "updateFile",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/D:/irene/Desktop/TFG/ficheros/fulls_dmf_full_v1_20200504_short_10_werrs.csv"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/uploads/datafiles/{{datafileId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"uploads",
								"datafiles",
								"{{datafileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datafile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/datafiles/{{datafileId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"datafiles",
								"{{datafileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Datafile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Datafile Test Update\",\r\n    \"coleccion\":null,\r\n    \"workspace\":\"60aeaf40d0e8477348250ac9\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/datafiles/{{datafileId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"datafiles",
								"{{datafileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Datafile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/datafiles/{{datafileId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"datafiles",
								"{{datafileId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Esquemas",
			"item": [
				{
					"name": "Get Esquemas By Datafile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/esquemas/datafile/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"esquemas",
								"datafile",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Esquema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const esquemaId = pm.response.json().esquema._id;\r",
									"pm.collectionVariables.set(\"esquemaId\", esquemaId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"title\":\"Esquema Test\",\r\n    \"datafile\":\"60b634e98ab1a18d8850e49e\",\r\n    \"fileName\":\"dmf_schema.json\",\r\n    \"esquemaContent\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/uploads/esquema/create",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"uploads",
								"esquema",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Esquema",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/esquemas/{{esquemaId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"esquemas",
								"{{esquemaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Esquema",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"title\":\"Esquema Test Update\",\r\n    \"datafile\":\"60b634e98ab1a18d8850e49e\",\r\n    \"esquemaContent\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/uploads/esquema/{{esquemaId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"uploads",
								"esquema",
								"{{esquemaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Esquema",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/esquemas/{{esquemaId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"esquemas",
								"{{esquemaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Infer Esquema",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/uploads/esquema/infer/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"uploads",
								"esquema",
								"infer",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Esquema Content",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"id\": null,\r\n      \"contentPath\": \"contentPath\", \r\n      \"esquemaContent\": \"esquemaContent\",\r\n      \"datafile\":\"datafileId\",\r\n      \"operation\": \"update\",\r\n      \"entity\":\"esquemas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/uploads/esquema",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"uploads",
								"esquema"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Frictionless Errors",
			"item": [
				{
					"name": "Get Frictionless Errors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/fricErrors/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"fricErrors",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invitations",
			"item": [
				{
					"name": "Get Invitations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/invitations",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"invitations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Invitation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const invitationId = pm.response.json().invitation._id;\r",
									"pm.collectionVariables.set(\"invitationId\", invitationId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"receiver\":\"walo@gmail.com\",\r\n    \"workspace\":\"60aeaf40d0e8477348250ac9\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/invitations",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"invitations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User (walo)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const token = pm.response.json().token;\r",
									"pm.globals.set(\"token\",\"Bearer \"+token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"walo\",\r\n    \"password\": \"walo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Invitation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\":\"accepted\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/invitations/{{invitationId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"invitations",
								"{{invitationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Invitation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/invitations/{{invitationId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"invitations",
								"{{invitationId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Delete Role",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/roles/60aebafbb83c905694cd191c",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"roles",
								"60aebafbb83c905694cd191c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Role",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"id\": \"60b36426894076503c4de402\",\r\n      \"role\": \"member\", \r\n      \"user\": null,\r\n      \"workspace\": \"60aebafbb83c905694cd191c\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/roles/60b36426894076503c4de402",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"roles",
								"60b36426894076503c4de402"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "Login User (irene)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const token = pm.response.json().token;\r",
									"pm.globals.set(\"token\",\"Bearer \"+token)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"irene\",\r\n    \"password\": \"IRene25*\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tests By Workspace",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/tests/workspace/60aeaf40d0e8477348250ac9",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tests",
								"workspace",
								"60aeaf40d0e8477348250ac9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tests By Datafile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/tests/workspace/60aeaf40d0e8477348250ac9/datafile/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tests",
								"workspace",
								"60aeaf40d0e8477348250ac9",
								"datafile",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const testId = pm.response.json().test._id;\r",
									"pm.collectionVariables.set(\"testId\", testId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Test Test\",\r\n    \"esquema\":null,\r\n    \"delimiter\":\"|\",\r\n    \"configurations\":[],\r\n    \"datafile\": \"60b634e98ab1a18d8850e49e\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/tests",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/tests/{{testId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tests",
								"{{testId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Test",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{testId}}\",\r\n    \"title\":\"Test Test Update\",\r\n    \"esquema\":null,\r\n    \"configurations\":[],\r\n    \"datafile\": \"60b634e98ab1a18d8850e49e\",\r\n    \"action\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/tests/{{testId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tests",
								"{{testId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute Test",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"testId\":\"{{testId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/reports/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"reports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/tests/{{testId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tests",
								"{{testId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Get Workspaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/workspaces",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const workspaceId = pm.response.json().workspace._id;\r",
									"pm.collectionVariables.set(\"workspaceId\", workspaceId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Workspace Test\", \r\n    \"description\": \"\",\r\n    \"creationMoment\": null,\r\n    \"mandatory\": false,\r\n    \"invitations\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/workspaces",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/workspaces/{{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"workspaces",
								"{{workspaceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Workspace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Workspace Test Update\", \r\n    \"description\": \"\", \r\n    \"mandatory\": false, \r\n    \"invitations\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/workspaces/{{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"workspaces",
								"{{workspaceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workspace",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/workspaces/{{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"workspaces",
								"{{workspaceId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Activities",
			"item": [
				{
					"name": "Get Activity By User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/user/60ad88d2a74d2e58cc611a31",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"user",
								"60ad88d2a74d2e58cc611a31"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity By Workspace",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/activities/workspace/60aebafbb83c905694cd191c",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"activities",
								"workspace",
								"60aebafbb83c905694cd191c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Global Configuration",
			"item": [
				{
					"name": "Get Global Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/gconfiguration",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"gconfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Global Configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"id\": \"619637dd5e471a3913647ea9\",\r\n    \"limitUsers\": 5, \r\n    \"limitWorkspaces\": 6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/gconfiguration",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"gconfiguration"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Suggestions",
			"item": [
				{
					"name": "Get Suggestions By Datafile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/suggestions/get/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"suggestions",
								"get",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Suggestion By Datafile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const suggestionId = pm.response.json().suggestion[0]._id;\r",
									"console.log(pm.response.json())\r",
									"console.log(suggestionId)\r",
									"pm.collectionVariables.set(\"suggestionId\", suggestionId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rawData\":[\r\n    \"constraint-error|[#table, #row, #cell]||MATCH_INTERNET|1|2|The cell \\\"\\\" in row at position \\\"2\\\" and field \\\"MATCH_INTERNET\\\" at position \\\"1\\\" does not conform to a constraint: constraint \\\"required\\\" is \\\"True\\\"|\"\r\n],\r\n    \"testDelimiter\":\"|\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/suggestions/add/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"suggestions",
								"add",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply Suggestion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"operation\":\"getRow\",\r\n    \"contentLines\":[\r\n        \"MATCH_INTERNET|MATCH_CAMPAGNE|MATCH_METHODE|MATCH_AVEC_COMMANDE|MATCH_AVEC_IMMATRICULATION|EST_DOUBLON|EST_DUPLICATA|DELAI_TRANSFO_MOYEN|DELAI_TRANSFO_MEDIAN|JOURS_ECOULES_DEPUIS_DEMANDE|MATCH_TIMING_30|MATCH_TIMING_60|MATCH_TIMING_90|MATCH_TIMING_180|TYPE_LEAD|METHODE_LEVIER|METHODE_BUSINESS|JOURS_ECOULES_DEPUIS_ROUTAGE|MARQUE_LEAD|SOUS_TYPE_LEAD|CMDMID|L_I_APPOINTMENT_DATE|L_I_ASSIGNMENT_COUNTER|BRAND__C|L_I_BRAND_OF_INTEREST|L_I_CALL_CMDM|L_I_CALLOUTMAXENDDATE|L_I_CAMPAIGN|L_I_CONTEXTE|L_I_CONVERTEDDATE|L_I_COTATION|CREATED_DATE_BY_CUSTOMER__C|L_I_CREATEDBYID|L_I_CREATIONORIGIN|L_I_CURRENT_TIMING|L_I_CURRENT_VEHICLE_MODEL|L_I_CURRENTMILAGE|L_I_DATE_DENVOI|L_I_DATE_ECHEANCE|L_I_DATEOFPURCHASEINTENT|L_I_DEVICE|L_I_FINALDEALER|L_I_FIRST_ACTION_DATE|L_I_ISCONVERTED|L_I_LAST_ACTIVITY_DATE|L_I_LASTMODIFIEDDATE|L_I_LASTREFERENCEDDATE|L_I_LASTVIEWEDDATE|L_I_LATE_DATE|L_I_LEAD_F6_ID|L_I_LEADFORM_NAME|LEADSOURCE|L_I_MAEVA_URL|L_I_ORIGINE|L_I_OWNED_BRAND|L_I_OWNED_REGISTRATION_NBR|L_I_OWNED_VEHICLE_FIRST_REG|L_I_PARENT_LEAD|L_I_PLATFORM|L_I_PLATFORM_NAME|L_I_PLATFORM_NAME_2|L_I_PROCESSED_BY_PLATFORM|L_I_QUALIFICATION|L_I_QUALIFICATION_SALESMAN|L_I_QUALIFIED_LEAD_REASSIG_D|L_I_QUALIFIED_LEAD_REASSIG_U|L_I_QUOTE_INTERVENTION_DURA|L_I_QUOTE_PRICE|L_I_QUOTE_URI|L_I_REMINDERDATE|L_I_REMINDERDATE_SALESMAN|L_I_SECOND_ACTION_DATE|L_I_SECOND_LATE_DATE|L_I_SECOND_STATE|L_I_SECOND_WARNING_DATE|L_I_SELLERCODE|L_I_SEMI_CLAIR_CODE|L_I_STATUS|L_I_SUBQUALIFICATION|L_I_SUBQUALIFICATION_SALESMAN|SUBTYPE_OF_INTEREST__C|L_I_TECH_LEADID|L_I_TIME_PROCESSING_TO_FIRST_C|L_I_TIME_PROCESSING_TO_SECOND|TYPEOFINTEREST__C|VEHICLEOFINTEREST__C|L_I_WARNING_DATE|DS_DATE_ENVOI_ROUTAGE_DESCENTE|DS_ID_CAMPAGNE|DS_CRM_PRM|DS_LIBELLE_DE_LA_CAMPAGNE|DS_CATEGORIE_CAMPAGNE|DS_VERSION_CREA|DS_CANAL|DS_COMBIN_CANAL|DS_COHERENCE_DE_COM|DS_NUMERO_DE_COMMANDE|DS_CODE_DR|DS_LIBELLE_DR|DS_CODE_RRF|DS_LIBELLE_AFFAIRE|DS_COMPTE_AFFAIRE_VN|DS_TMR|DS_RMR|DS_RATTACHEMENT_GROUPE|DS_IDENTIFIANT_MDM|DS_EMLAP|DS_PROVENANCE_DE_L_EMLAP|DS_CODE_BROCKERS|DS_MARQUE|DS_MODELE|DS_SEGMENT_EUR|DS_VN_VO|DS_AGE_A_L_ACHAT_EN_MOIS|DS_DATE_D_ACHAT|DS_SEGMENTATION|DS_SCORE_DE_RENOUVELLEMENT|DS_VALEUR_CLIENT|DS_PARTICIPANT|DS_OUVERTURE|DS_CLIC|DS_DESABONNEMENT|DS_BOUNCE_PLAINTE|DS_MARQUE_CAMPAGNE|DS_MODELE_CAMPAGNE|CMD_EV_IDPERS|CMD_EV_AFF_VENTE_COM|CMD_EV_MARQUE_COM|CMD_EV_MODELE_COM|CMD_EV_DT_ANNUL_COM|CMD_EV_DT_CRE_EVENT_COM|SIGNALETIQUE_AFFAIRE_ID|SIGNALETIQUE_GROUPE_NOM|SIGNALETIQUE_PLAQUE_NOM|SIGNALETIQUE_DR_LIBELLE|SIGNALETIQUE_MRS|SIGNALETIQUE_ME|SIGNALETIQUE_BMR|SIGNALETIQUE_NOM_USUEL|VE_MARQUE|VE_MODELE|VE_DT_MAJ_REL_CLI_VEH\\r\",\r\n        \"|0|REGLE_1|0|1|0|0||||0|0|0|1||0|1|453|RENAULT|Trade-In 2 Store|3701472|||RENAULT||||marque_renault_bi_def-large|cotation-en-ligne|||2019-02-04|||||||||desktop|||||||||||||Commercial links|||||||||||||||||||||||||||Listing Argus||||VO|||||||||||||||||||||||||||||||||||||||||||||||00000029|RRG|-|MARSEILLE|Anne-Valerie DELATTRE|Jean MEZZASALMA|Philippe NAZARIE|TOULON|RENAULT|FEH|2019-07-26\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||0|0|0|1||0|1|453|RENAULT|||||RENAULT|||||devis-en-ligne|||2019-02-04|||||||||desktop|||||||||||||No-cookie|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00000401|RRG|-|NANCY|Régis FIOCCA|PATRICK DELARBRE| |NANCY|RENAULT|SCENIC III GD|2019-05-24\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||0|0|0|1||0|1|453|RENAULT|||||RENAULT||||apv_revision_go_pro_ord_def-large|devis-en-ligne|||2019-02-04|||||||||desktop|||||||||||||Commercial links|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00020343|RRG|-|LYON|Yann LEMENN|Damien DELAITTRE|CHRISTOPHE BOURDEAU|PARET J. P. & ANNE|RENAULT|87J|2019-06-28\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||0|0|0|1||0|1|478|RENAULT|Demande d'entretien (APV)|1211590|||RENAULT|||||site-national|||2019-01-10|||||||||desktop|||||||||||||Natural Referencement|||||||||||||||||||||||||||Maintenance request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00000255|EMIL FREY|EMIL FREY CHAMPAGNE|NANCY|Francisco MARTIN|Jessim GRUNBERG|Dominique LACZNY|REIMS|RENAULT||2019-05-22\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||1|1|1|1||0|1|478|RENAULT|Trade-In 2 Store|155253636|||RENAULT|||||devis-en-ligne|||2019-01-10|||||||||mobile|||||||||||||Natural Referencement|||||||||||||||||||||||||||Quote request with RDV||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00000555|RRG|-|LYON|Yann LEMENN|Damien DELAITTRE|CHRISTOPHE BOURDEAU|LYON SUD|RENAULT|CL4|2019-01-10\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||1|1|1|1||0|1|480|RENAULT|||||RENAULT|||||devis-en-ligne|||2019-01-08|||||||||desktop|||||||||||||No-cookie|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00000258|EMIL FREY|E.FREY PAS DE CALAIS NORD|LILLE|Philippe BLOUZET|Bruno PONCIN|Jean-Michel DROMERT|BETHUNE|RENAULT|ZOE|2019-01-10\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||0|0|1|1||0|1|480|RENAULT|||||RENAULT|||||devis-en-ligne|||2019-01-08|||||||||desktop|||||||||||||No-cookie|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00000258|EMIL FREY|E.FREY PAS DE CALAIS NORD|LILLE|Philippe BLOUZET|Bruno PONCIN|Jean-Michel DROMERT|BETHUNE|RENAULT|ZOE|2019-03-31\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||1|1|1|1||0|1|480|DACIA|||||DACIA|||||devis-en-ligne|||2019-01-08|||||||||desktop|||||||||||||Direct|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00001288|EMIL FREY|EMIL FREY PARIS|PARIS ILE DE FRANCE|ARNAUD DELABROYE|Marc MASSON|Philippe GRIVEAU|MEAUX|DACIA|52B|2019-01-19\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||1|1|1|1||0|1|480|RENAULT|||||RENAULT|||||devis-en-ligne|||2019-01-08|||||||||desktop|||||||||||||Natural Referencement|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00000952|RRG|-|BORDEAUX|Jean-Marc BERNOU|Frédéric PONTILLE|Pierre-Marie SARRUS|TOUL. ROCADE OUEST|RENAULT|CLI|2019-01-08\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||0|0|0|1||0|1|480|RENAULT|||||RENAULT|||||devis-en-ligne|||2019-01-08|||||||||desktop|||||||||||||Direct|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00017008|ARATTO|-|BORDEAUX|Jean-Marc STADNIKOFF|Pascal FOUCHER|NATHALIE LEDRICH|TEIXEIRA JOSE MANUEL|RENAULT|MB4|2019-06-23\\r\",\r\n        \"1|0|REGLE_1|0|1|0|0||||0|0|0|1||0|1|480|RENAULT|||||RENAULT|||||devis-en-ligne|||2019-01-08|||||||||desktop|||||||||||||Direct|||||||||||||||||||||||||||After Sales Request||||APV-A|||||||||||||||||||||||||||||||||||||||||||||||00017008|ARATTO|-|BORDEAUX|Jean-Marc STADNIKOFF|Pascal FOUCHER|NATHALIE LEDRICH|TEIXEIRA JOSE MANUEL|RENAULT|MB4|2019-06-23\\r\",\r\n        \"\"],\r\n    \"testDelimiter\":\"|\",\r\n    \"newRowContent\":null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/suggestions/apply/{{suggestionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"suggestions",
								"apply",
								"{{suggestionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Suggestions By Datafile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/suggestions/deleteAll/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"suggestions",
								"deleteAll",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Suggestion By Datafile 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const suggestionId = pm.response.json().suggestion[0]._id;\r",
									"pm.collectionVariables.set(\"suggestionId\", suggestionId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rawData\":[\r\n    \"constraint-error|[#table, #row, #cell]||MATCH_INTERNET|1|2|The cell \\\"\\\" in row at position \\\"2\\\" and field \\\"MATCH_INTERNET\\\" at position \\\"1\\\" does not conform to a constraint: constraint \\\"required\\\" is \\\"True\\\"|\"\r\n],\r\n    \"testDelimiter\":\"|\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/suggestions/add/60b634e98ab1a18d8850e49e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"suggestions",
								"add",
								"60b634e98ab1a18d8850e49e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Suggestion",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/suggestions/{{suggestionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"suggestions",
								"{{suggestionId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Terminals",
			"item": [
				{
					"name": "Login User (irene)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const token = pm.response.json().token;\r",
									"pm.globals.set(\"token\",\"Bearer \"+token)\r",
									"\r",
									"const userId = pm.response.json().user._id;\r",
									"pm.collectionVariables.set(\"userId\", userId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"irene\",\r\n    \"password\": \"IRene25*\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Terminal",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/terminals/{{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"terminals",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Terminal",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"61952bed9136713cda9b4f6b\",\r\n    \"content\": [],\r\n    \"user\": \"60ad88d2a74d2e58cc611a31\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/terminals/61952bed9136713cda9b4f6b",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"terminals",
								"61952bed9136713cda9b4f6b"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get User Default Photo",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/assets/default-user-little.png",
					"host": [
						"{{url}}"
					],
					"path": [
						"assets",
						"default-user-little.png"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Photo",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users/duck.png",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"duck.png"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Default User Photo",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/assets/default-user-little.png",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"assets",
						"default-user-little.png"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "collectionId",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "configurationId",
			"value": ""
		},
		{
			"key": "datafileId",
			"value": ""
		},
		{
			"key": "esquemaId",
			"value": ""
		},
		{
			"key": "invitationId",
			"value": ""
		},
		{
			"key": "testId",
			"value": ""
		},
		{
			"key": "workspaceId",
			"value": ""
		},
		{
			"key": "suggestionId",
			"value": ""
		}
	]
}
{"version":3,"sources":["./src/app/components/collection/collection-list/collection-list.component.html","./src/app/components/collection/collection-list/collection-list.component.ts","./src/app/services/roles.service.ts","fs (ignored)","./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","crypto (ignored)","./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","stream (ignored)","./src/app/pages/auth/auth-interceptor.ts","./src/app/services/users.service.ts","./src/app/services/workspaces.service.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/pages/workspaces/workspace-create/workspace-create.component.ts","./src/app/pages/workspaces/workspace-create/workspace-create.component.html","./src/app/models/fricError.model.ts","./src/app/pages/configuration/configuration.component.html","./src/app/pages/configuration/configuration.component.ts","./src/app/services/configuration.service.ts","./src/app/services/reports.service.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/invitation/invitation-create/invitation-create.component.ts","./src/app/components/invitation/invitation-create/invitation-create.component.html","./src/app/components/configuration/configuration-create/configuration-create.component.ts","./src/app/components/configuration/configuration-create/configuration-create.component.html","./src/app/pages/profile/profile-details/profile-details.component.html","./src/app/pages/profile/profile-details/profile-details.component.ts","./src/app/error-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/uploads.service.ts","./src/app/services/activities.service.ts","./src/app/pages/tests/test-details/test-details.component.ts","./src/app/pages/tests/test-details/test-details.component.html","./src/app/components/test/test-list/test-list.component.html","./src/app/components/test/test-list/test-list.component.ts","./src/app/pages/workspaces/workspace-list/workspace-list.component.ts","./src/app/pages/workspaces/workspace-list/workspace-list.component.html","./src/app/app.module.ts","./src/app/pages/tests/test-execute/test-execute.component.html","./src/app/pages/tests/test-execute/test-execute.component.ts","./src/app/pages/profile/profile-account-edit/profile-account-edit.component.ts","./src/app/pages/profile/profile-account-edit/profile-account-edit.component.html","./src/app/components/activity/activity-list/activity-list.component.html","./src/app/components/activity/activity-list/activity-list.component.ts","./src/app/services/esquemas.service.ts","./src/app/pages/pages.module.ts","./src/app/services/datafiles.service.ts","./src/app/components/collection/collection-create/collection-create.component.ts","./src/app/components/collection/collection-create/collection-create.component.html","./src/app/components/esquemas/esquema-create/esquema-create.component.ts","./src/app/components/esquemas/esquema-create/esquema-create.component.html","./src/app/components/configuration/configuration-list/configuration-list.component.ts","./src/app/components/configuration/configuration-list/configuration-list.component.html","./src/app/components/components.module.ts","./src/app/services/collections.service.ts","./src/app/pages/invitations/invitation-list/invitation-list.component.ts","./src/app/pages/invitations/invitation-list/invitation-list.component.html","./src/app/services/auth.service.ts","./src/app/pages/profile/profile-edit/mime-type.validator.ts","./src/app/components/test/test-create/test-create.component.ts","./src/app/components/test/test-create/test-create.component.html","./src/app/components/esquemas/esquema-list/esquema-list.component.ts","./src/app/components/esquemas/esquema-list/esquema-list.component.html","./src/app/components/workspace/workspace-edit/workspace-edit.component.ts","./src/app/components/workspace/workspace-edit/workspace-edit.component.html","./src/app/services/invitations.service.ts","./src/app/angular-material.module.ts","./src/app/components/datafile/datafile-edit/datafile-edit.component.ts","./src/app/components/datafile/datafile-edit/datafile-edit.component.html","./src/app/services/tests.service.ts","./src/app/pages/profile/profile-edit/profile-edit.component.ts","./src/app/pages/profile/profile-edit/profile-edit.component.html","./src/app/pages/workspaces/workspace-details/workspace-details.component.html","./src/app/pages/workspaces/workspace-details/workspace-details.component.ts","./src/app/app-routing.module.ts","./src/app/pages/auth/auth.guard.ts","./src/app/pages/datafiles/datafile-details/datafile-details.component.ts","./src/app/pages/datafiles/datafile-details/datafile-details.component.html","./src/main.ts","./src/app/components/datafile/datafile-create/datafile-create.component.ts","./src/app/components/datafile/datafile-create/datafile-create.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"row mt-4 ps-4 pe-3\">\r\n    <div class=\"col-8\">\r\n        <h2 class=\"mb-2\">Collections</h2>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-0\">\r\n    <div class=\"accordion accordion-flush pb-5\" id=\"accordionFlushExample\">\r\n        <div *ngFor=\"let collection of collections; let i=index;\">\r\n            <div class=\"row mt-2 ps-3 pe-2\" *ngIf=\"editMode && collectionIndex===i\">\r\n                <app-collection-create [(collectionIndex)]=\"collectionIndex\" [(editMode)]=\"editMode\" [editCollection]=\"collection\"></app-collection-create>\r\n            </div>\r\n            <div class=\"accordion-item\" *ngIf=\"collectionIndex!==i\">\r\n                <h4 class=\"row accordion-header m-0 pt-1 pb-1\" id=\"flush-headingOne\">\r\n                    <div class=\"col-10 ps-4 pe-2 pt-1 collapsed\" data-bs-toggle=\"collapse\" [attr.data-bs-target]=\"'#collapse'+i\" aria-expanded=\"false\" [aria-controls]=\"collection.name\">\r\n                        {{collection.title}}\r\n                    </div>\r\n                    <div class=\"col-2 d-flex justify-content-end\">\r\n                        <div class=\"dropdown\">\r\n                            <button class=\"btn btn-outline-secondary btn-sm expand-files\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                              <i class=\"fas fa-ellipsis-h \"></i>\r\n                            </button>\r\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                <li><a class=\"dropdown-item\" (click)=\"onUpdateCollection(i)\">Editar</a></li>\r\n                                <li><a class=\"dropdown-item danger\" (click)=\"onDeleteCollection(collection.id)\">Eliminar</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </h4>\r\n                <div [attr.id]=\"'collapse'+i\" class=\"accordion-collapse collapse \" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\" *ngFor=\"let datafile of collection.datafiles\">\r\n                    <div class=\"accordion-body pt-2 pb-2 ps-5 pe-2\" routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafile._id}}\">{{datafile.title}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"accordion-collapse collapse show linebreak pt-2 mt-2\" *ngFor=\"let datafile of orphanedDatafiles\">\r\n            <div class=\"accordion-body pt-2 pb-2 ps-5 pe-2\" routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafile.id}}\">{{datafile.title}}</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2 ps-4 pe-3\">\r\n    <app-collection-create [(close)]=\"close\" *ngIf=\"!close\"></app-collection-create>\r\n</div>\r\n<div class=\"row mt-2 ps-4 pe-3\">\r\n    <div class=\"col\">\r\n        <div class=\"d-grid gap-2\">\r\n            <button class=\"btn btn-outline-primary btn-sm\" type=\"button\" [disabled]=\"\" (click)=\"onAddCollection()\">\r\n              <i class=\"fas fa-plus\"></i> Añadir Colección\r\n              </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Collection } from 'src/app/models/collection.model';\r\nimport { Datafile } from 'src/app/models/datafile.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CollectionsService } from 'src/app/services/collections.service';\r\nimport { WorkspacesService } from 'src/app/services/workspaces.service';\r\n\r\n@Component({\r\n  selector: 'app-collection-list',\r\n  templateUrl: './collection-list.component.html',\r\n  styleUrls: ['./collection-list.component.css']\r\n\r\n})\r\nexport class CollectionListComponent implements OnInit, OnDestroy{\r\n  isLoading              : boolean = false;\r\n  userIsAuthenticated    : boolean = false;\r\n  userId                 : string;\r\n  close                  : boolean = true;\r\n  collectionIndex        : number;\r\n  editMode               : boolean = false;\r\n  collections            : Collection[];\r\n  orphanedDatafiles      : Datafile[];\r\n  private collectionsSub : Subscription;\r\n  private authStatusSub  : Subscription;\r\n  \r\n  @Input() workspaceId   : string;\r\n\r\n  constructor(public collectionsService: CollectionsService, public authService: AuthService,\r\n              public workspacesService: WorkspacesService,) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n    \r\n    // Orphaned Datafiles\r\n    this.isLoading = true;\r\n    this.workspacesService.getWorkspace(this.workspaceId).subscribe(workspaceData => {\r\n      this.isLoading = false;\r\n      this.orphanedDatafiles = workspaceData.orphanedDatafiles;\r\n    });\r\n\r\n    // Collections\r\n    this.collectionsService.getCollectionsByWorkspace(this.workspaceId);\r\n    this.collectionsSub = this.collectionsService.getCollectionUpdateListener()\r\n    .subscribe( (collectionData: {collections: Collection[]}) => {\r\n      this.collections = collectionData.collections;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n    this.collectionsSub.unsubscribe();\r\n  }\r\n\r\n  onAddCollection() {\r\n    this.close = false;\r\n  }\r\n\r\n  async onUpdateCollection(index: number) {\r\n    this.isLoading = true;\r\n    this.editMode = true;\r\n    this.collectionIndex = index;\r\n    this.isLoading = false;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Role } from '../models/role.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/roles/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class RolesService {\r\n  \r\n  constructor(private http: HttpClient) {}\r\n\r\n  addRole(workspaceId: string, userId: string){\r\n    let res: any;\r\n    const role: Role = {\r\n      'id': null,\r\n      'role': null, \r\n      'workspace': workspaceId, \r\n      'user': userId\r\n    };\r\n    this.http.post<{message: string, role: any}>(BACKEND_URL, role).subscribe( responseData => {\r\n      res = responseData;  \r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Creating a role failed!');\r\n        } else {\r\n          resolve('Role added successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n  \r\n  updateRole(roleId: string, roleName: string){\r\n    let res: any;\r\n    const role: Role = {\r\n      'id': roleId,\r\n      'role': roleName, \r\n      'workspace': null, \r\n      'user': null\r\n    };\r\n    this.http.put<{message: string, role: any}>(BACKEND_URL + roleId, role).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating a role failed!');\r\n        } else {\r\n          resolve('Role updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  deleteRole(workspaceId: string){\r\n    let res: any;\r\n    this.http.delete<{message: string}>(BACKEND_URL + workspaceId).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting a role failed!');\r\n        } else {\r\n          resolve('Role deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n  \r\n}\r\n","/* (ignored) */","<div class=\"m-5\">\r\n    <div *ngIf=\"!userIsAuthenticated\">\r\n        <div class=\"m-3\">\r\n            <h1>Prueba tus tablas!</h1>\r\n            <p class=\"text-align-left\">Ahorra tiempo validando tus tablas de forma rápida y sencilla mediante el uso de TabLab.</p>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"userIsAuthenticated\" class=\"row ps-2 pe-2 complete-height\">\r\n        <div class=\"col-3 p-0\"></div>\r\n        <div class=\"col-6\">\r\n            <h1>Prueba tus tablas!</h1>\r\n            <p class=\"text-align-left\">Ahorra tiempo validando tus tablas de forma rápida y sencilla mediante el uso de TabLab.</p>\r\n            <app-activity-list></app-activity-list>\r\n        </div>\r\n        <div class=\"col-3\"></div>\r\n    </div>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivitiesService } from 'src/app/services/activities.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  userIsAuthenticated      : boolean = false;\r\n  userId                   : string;\r\n  private authStatusSub    : Subscription;\r\n\r\n  constructor( private authService: AuthService, public activitiesService: ActivitiesService) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n\r\n}\r\n","/* (ignored) */","<nav class=\"navbar navbar-expand-lg navbar-light bg-light p-3\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">TabLab</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li *ngIf=\"userIsAuthenticated\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['workspaces']\">Espacios de Trabajo</a>\r\n            </li>\r\n            <li *ngIf=\"userIsAuthenticated\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['invitations']\">\r\n                    Invitaciones\r\n                    <i *ngIf=\"userIsAuthenticated && pendingInvitation\" class=\"ms-1 fas fa-envelope\" style=\"width: 40px; color: rgb(169, 85, 248);\"></i>\r\n                </a>\r\n            </li>\r\n            <li *ngIf=\"userIsAuthenticated && user.role==='ADMIN'\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['configuration']\">\r\n                    Configuración Global\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        User is authenticated: {{userIsAuthenticated}}\r\n        <form class=\"form-inline\" *ngIf=\"!userIsAuthenticated\">\r\n            <a class=\"btn btn-outline-primary me-2\" routerLinkActive=\"active\" [routerLink]=\"['auth/login']\">Iniciar Sesión</a>\r\n            <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" [routerLink]=\"['auth/signup']\">Registro</a>\r\n        </form>\r\n        <form *ngIf=\"userIsAuthenticated\">\r\n            <!-- <a class=\"btn btn-outline-danger me-2\" routerLinkActive=\"active\" (click)=\"onLogout()\">Cerrar Sesión</a> -->\r\n            <div class=\"dropdown\">\r\n                <button class=\"btn btn-light btn-sm\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n                            <img *ngIf=\"!isLoading\" src=\"/backend/assets/default-user-little.png\" class=\"border rounded-circle\" style=\"width: 40px;\" alt=\"\">\r\n                        </div>\r\n                        <img *ngIf=\"!isLoading\" src=\"{{user.photo}}\" class=\"border rounded-circle\" style=\"width: 40px;\" alt=\"\">\r\n                    </button>\r\n                <ul *ngIf=\"!isLoading\" class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\">\r\n                    <li><a class=\"dropdown-item\" routerLink=\"/profile/{{userId}}\">Logueado/a como {{user.username}}</a></li>\r\n                    <li><a class=\"dropdown-item\" routerLink=\"/account/{{userId}}/edit\">Configuración de la cuenta</a></li>\r\n                    <li><a class=\"dropdown-item\" routerLinkActive=\"active\" (click)=\"onLogout()\">Cerrar Sesión</a></li>\r\n                </ul>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</nav>","import { AfterViewChecked, AfterViewInit, Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { User } from '../../models/user.model';\r\nimport { InvitationService } from '../../services/invitations.service';\r\nimport { Invitation } from 'src/app/models/invitation.model';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  isLoading           : boolean = false;\r\n  pendingInvitation   : boolean = false;\r\n  userId              : string;\r\n  userIsAuthenticated : boolean = false;\r\n  user                : User;\r\n  invitationsSub      : Subscription;\r\n  invitations         : Invitation[] = [];\r\n  private authListenerSubs : Subscription;\r\n\r\n\r\n  constructor( public authService: AuthService, public usersService: UsersService, public invitationsService: InvitationService ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        console.log(this.userIsAuthenticated);\r\n    });\r\n    \r\n    const data = this.authService.getUserData();\r\n    if (data) {\r\n      this.userId = data.userId;\r\n      this.usersService.getUser(this.userId).subscribe(userData => {\r\n        this.user = {\r\n          id: userData.user.id,\r\n          username: userData.user.username,\r\n          email: userData.user.email,\r\n          password: userData.user.password,\r\n          photo: userData.user.photo,\r\n          name: userData.user.name,\r\n          role: userData.user.role,\r\n          status: userData.user.status,\r\n          google: userData.user.google\r\n        };\r\n        this.isLoading = false;\r\n\r\n      });\r\n    }\r\n    this.isLoading = true;\r\n    this.userId = this.authService.getUserId();\r\n    if(this.userId){\r\n      this.invitationsService.getInvitationsHeader().subscribe( (invitationData: {invitations: Invitation[]}) => {\r\n        this.isLoading = false;\r\n        this.invitations = invitationData.invitations;\r\n        for (var invitation of this.invitations) {\r\n            if(invitation.status==='pending'){\r\n              this.pendingInvitation = true;\r\n              break;\r\n            }\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  \r\n\r\n}\r\n","/* (ignored) */","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../models/user.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/users/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UsersService {\r\n  private users: User[] = [];\r\n  private usersUpdated = new Subject<{users: User[]}>();\r\n  \r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getUserUpdateListener() {\r\n    return this.usersUpdated.asObservable();\r\n  }\r\n  \r\n  getUsersByWorkspace(workspaceId: string) {\r\n    return this.http.get<{message: string, users: any}>(BACKEND_URL + 'workspace/'+workspaceId)\r\n    .pipe(map( (userData) => {\r\n      return { \r\n        users: userData.users.map(user => {\r\n        return {\r\n          id:user._id,\r\n          username: user.username,\r\n          email:user.email,\r\n          password:user.password,\r\n          photo: user.photo,\r\n          name:user.name,\r\n          role:user.role,\r\n          status:user.status,\r\n          google:user.google,\r\n        };\r\n      }),\r\n    };\r\n    }))\r\n    .subscribe((transformedUserData) => {\r\n      this.users = transformedUserData.users;\r\n      this.usersUpdated.next({\r\n        users: [...this.users]\r\n      });\r\n    });\r\n  }\r\n  \r\n  getUser(userId: string) {\r\n    return this.http.get<{message:string, user: any}>(BACKEND_URL + userId);\r\n  }\r\n\r\n  addUser(username: string, email: string, password: string) {\r\n    let res: any;\r\n    const authData: User = { \r\n      'id':null, \r\n      'username':username, \r\n      'name':null, \r\n      'email':email, \r\n      'password':password, \r\n      'photo': null, \r\n      'role':'USER', \r\n      'status':null, \r\n      'google':null \r\n    };\r\n    this.http.post<{message: string, user: any}>(BACKEND_URL, authData).subscribe( response => {\r\n      res = response;\r\n    });\r\n   \r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Creating an user failed!');\r\n        } else {\r\n          resolve('User created successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  updateUser(userId: string, name: string, username: string, email: string, role: string, actualPass: string, newPass: string, repeatPass: string){\r\n    let res;\r\n    const userData = {\r\n      'id': userId, \r\n      'name': name, \r\n      'username': username, \r\n      'email': email, \r\n      'role': role, \r\n      'actualPass': actualPass,      \r\n      'newPass': newPass, \r\n      'repeatPass': repeatPass\r\n    };\r\n    this.http.put<{message: string, user: any}>(BACKEND_URL + userId, userData).subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating an user failed!');\r\n        } else {\r\n          resolve('User updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  deleteAccount(userId: string) {\r\n    let res: any;\r\n    this.http.delete<{message: string}>(BACKEND_URL + userId).subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting an user failed!');\r\n        } else {\r\n          resolve('User deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/workspaces/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class WorkspacesService {\r\n  private workspaces: Workspace[] = [];\r\n  private workspacesUpdated = new Subject<{workspaces: Workspace[], workspaceCount: number, totalWorkspaces: number}>();\r\n  \r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getWorkspaceUpdateListener() {\r\n    return this.workspacesUpdated.asObservable();\r\n  }\r\n  \r\n  getWorkspaces(workspacesPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${workspacesPerPage}&page=${currentPage}`;\r\n    this.http.get<{message: string, workspaces: any, maxWorkspaces: number, totalWorkspaces: number }>(BACKEND_URL + queryParams)\r\n      .pipe(map( (workspaceData) => {\r\n        return { workspaces: workspaceData.workspaces.map(workspace => {\r\n          return {\r\n            id: workspace._id,\r\n            title: workspace.title,\r\n            description: workspace.description,\r\n            creationMoment: workspace.creationMoment,\r\n            mandatory: workspace.mandatory,\r\n            users: workspace.users\r\n          };\r\n        }),\r\n        maxWorkspaces: workspaceData.maxWorkspaces,\r\n        totalWorkspaces: workspaceData.totalWorkspaces\r\n      };\r\n      }))\r\n      .subscribe((transformedWorkspaceData) => {\r\n        this.workspaces = transformedWorkspaceData.workspaces;\r\n        this.workspacesUpdated.next({\r\n          workspaces: [...this.workspaces], // para hacer una verdadera copia y no afectar al original\r\n          workspaceCount: transformedWorkspaceData.maxWorkspaces,\r\n          totalWorkspaces: transformedWorkspaceData.totalWorkspaces});\r\n    });\r\n  }\r\n  \r\n  getWorkspace(workspaceId: string) {\r\n    return this.http.get<{message: string, workspace: any, orphanedDatafiles: any[], datafilesWTests: any[], tests: any[]}>(BACKEND_URL + workspaceId)\r\n    .pipe(map( (workspaceData) => {\r\n      return { \r\n        workspace: workspaceData.workspace,\r\n        orphanedDatafiles: workspaceData.orphanedDatafiles\r\n          .map(datafile => {\r\n            return {\r\n              id: datafile._id,\r\n              title: datafile.title,\r\n              description: datafile.description,\r\n              contentPath: datafile.contentPath,\r\n              errLimit: datafile.errLimit,\r\n              delimiter: datafile.delimiter,\r\n              coleccion: datafile.coleccion,\r\n              workspace: datafile.workspace\r\n            };\r\n          })  \r\n      };\r\n    }));\r\n  }\r\n\r\n  addWorkspace(title: string, description: string, mandatory: boolean, invitations: string[]) {\r\n    let res: any;\r\n    const workspaceData = {\r\n      'title': title, \r\n      'description': description, \r\n      'creationMoment': null,\r\n      'mandatory': mandatory,\r\n      'invitations': invitations\r\n    };\r\n    this.http.post<{message: string, workspace: any}>(BACKEND_URL, workspaceData).subscribe( responseData => {\r\n      res = responseData;  \r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Creating a workspace failed!');\r\n        } else {\r\n          resolve('Workspace added successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n\r\n  }\r\n\r\n  updateWorkspace(workspaceId: string, title: string, description: string){\r\n    let res: any;\r\n    const workspace: Workspace = {\r\n      'id': workspaceId,\r\n      'title': title, \r\n      'description': description, \r\n      'creationMoment': null,\r\n      'mandatory': null\r\n    };\r\n    this.http.put<{message: string, workspace: any}>(BACKEND_URL + workspaceId, workspace).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating a workspace failed!');\r\n        } else {\r\n          resolve('Workspace updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  deleteWorkspace(workspaceId: string) {\r\n    let res: any;\r\n    this.http.delete<{message: string}>(BACKEND_URL +  workspaceId).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting a workspace failed!');\r\n        } else {\r\n          resolve('Workspace deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { FricError } from 'src/app/models/fricError.model';\r\n\r\nconst average = [\r\n  'mean',\r\n  'median',\r\n  'mode'\r\n];\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api',\r\n  SOCKET_ENDPOINT: 'http://localhost:3000',\r\n  errors: [\r\n    new FricError('duplicate-row', null),\r\n    new FricError('deviated-value', new DeviatedValueParams('', average, 0))\r\n  ]\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\nimport { DeviatedValueParams } from '../app/models/fricError.model';\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}){\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>An Error ocurred</h1>\r\n<div mat-dialog-content>\r\n    <p class=\"mat-body-1\">{{ data.message }}</p>\r\n</div>\r\n<div maat-dialog-actions>\r\n    <button mat-button mat-dialog-close>Okay</button>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { WorkspacesService } from 'src/app/services/workspaces.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-workspace-create',\r\n  templateUrl: './workspace-create.component.html',\r\n  styleUrls: ['./workspace-create.component.css']\r\n})\r\nexport class WorkspaceCreateComponent implements OnInit, OnDestroy{\r\n  isLoading             : boolean = false;\r\n  userId                : string;\r\n  userIsAuthenticated   : boolean = false;\r\n  create                : boolean = true;\r\n  invitations           : string[] = [];\r\n  workspaceForm         : FormGroup;\r\n  private authStatusSub : Subscription;\r\n\r\n  constructor( public workspacesService: WorkspacesService, private formBuilder: FormBuilder, private authService: AuthService,\r\n               private router: Router ) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.workspaceForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n      invitations : ['', ],\r\n    });\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.workspaceForm.get('title').invalid && this.workspaceForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.workspaceForm.get('description').invalid && this.workspaceForm.get('description').touched;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.create = false;\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onSave() {\r\n    if (this.workspaceForm.invalid){\r\n      return Object.values(this.workspaceForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.isLoading = true;\r\n    const values = this.workspaceForm.getRawValue();\r\n    this.workspacesService.addWorkspace(values.title, values.description, false, this.invitations)\r\n    .then(()=>{\r\n      this.router.navigate(['/workspaces']);\r\n    })\r\n    .catch(err=>{\r\n      console.log(\"Error on onSave() method: \"+err)\r\n    });\r\n    this.isLoading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.workspaceForm.reset();\r\n    this.router.navigate(['/workspaces']);\r\n  }\r\n}\r\n\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<div class=\"row justify-content-sm-center mt-5\" *ngIf=\"!isLoading\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card animate__animated animate__fadeIn animate__faster\">\r\n            <div class=\"card-body\">\r\n                <form class=\"card-body\" [formGroup]=\"workspaceForm\" (ngSubmit)=\"onSave()\">\r\n                    <h2 class=\"card-title\">Nuevo Espacio de Trabajo</h2>\r\n                    <mat-form-field>\r\n                        <input matInput type=\"text\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input matInput type=\"description\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n                              Ingrese una descripción adecuada\r\n                            </small>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <app-invitation-create [(invitations)]=\"invitations\" [create]=\"create\"></app-invitation-create>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col d-flex justify-content-end\">\r\n                            <a class=\"mt-3 me-1 btn btn-outline-secondary btn-block\" *ngIf=\"!isLoading\" (click)=\"onCancel()\">Cancelar</a>\r\n\r\n                            <button type=\"submit\" class=\"mt-3 btn btn-primary btn-block\" *ngIf=\"!isLoading\">Crear</button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","// export interface FricError {\r\n//   errorCode: string;\r\n//   extraParams: Map<any, any>;\r\n// }\r\n\r\nexport class FricError {\r\n  errorCode: string;\r\n  extraParams: object;\r\n  constructor(errorCode: string, extraParams: object){\r\n    this.errorCode = errorCode;\r\n    this.extraParams = extraParams;\r\n  }\r\n}\r\n\r\nexport class DeviatedValueParams {\r\n  fieldName: string;\r\n  average: string[];\r\n  interval: number;\r\n  hints: object;\r\n  constructor(fieldName: string, average: string[], interval: number){\r\n    this.fieldName = fieldName;\r\n    this.average = average;\r\n    this.interval = interval;\r\n    this.hints = {'fieldName': 'Debe ingresar el nombre de uno de los campos del contenido del fichero.',\r\n                  'average': '',\r\n                  'interval': 'Este parámetro es numérico y superior o igual a 0.'};\r\n  }\r\n  invalid(paramName: any, value: any){\r\n    if (paramName === 'fieldName') {\r\n      return false;\r\n    }else if (paramName === 'average') {\r\n      return false;\r\n    }else if (paramName === 'interval' && value < 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getHint(paramName: string){\r\n    if (paramName === 'fieldName') {\r\n      return 'Debe ingresar el nombre de uno de los campos del contenido del fichero.';\r\n    }else if (paramName === 'average') {\r\n      return '';\r\n    }else if (paramName === 'interval') {\r\n      return 'Este parámetro es numérico y superior o igual a 0.';\r\n    }else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","<div class=\"m-5\">\r\n    <div *ngIf=\"userIsAuthenticated && user.role === 'ADMIN'\" class=\"row ps-2 pe-2 complete-height\">\r\n        <div class=\"col-3 p-0\"></div>\r\n        <div class=\"col-6\">\r\n            <h1>Configuración Global</h1>\r\n        </div>\r\n        <div class=\"col-3\"></div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { ActivitiesService } from 'src/app/services/activities.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { Activity } from '../../models/activity.model';\r\n\r\n@Component({\r\n  selector: 'app-configuration',\r\n  templateUrl: './configuration.component.html'\r\n})\r\nexport class ConfigurationComponent implements OnInit {\r\n  isLoading           : boolean = false;\r\n  userIsAuthenticated : boolean = false;\r\n  userId              : string;\r\n  user                : User;\r\n\r\n  //private authListenerSubs: Subscription;\r\n\r\n  constructor( private authService: AuthService, public activitiesService: ActivitiesService,\r\n                public usersService: UsersService, ) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    const data = this.authService.getUserData();\r\n    if (data) {\r\n      this.userId = data.userId;\r\n      this.usersService.getUser(this.userId).subscribe(userData => {\r\n        this.user = {\r\n          id: userData.user.id,\r\n          username: userData.user.username,\r\n          email: userData.user.email,\r\n          password: userData.user.password,\r\n          photo: userData.user.photo,\r\n          name: userData.user.name,\r\n          role: userData.user.role,\r\n          status: userData.user.status,\r\n          google: userData.user.google\r\n        };\r\n        this.isLoading = false;\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Configuration } from '../models/configuration.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/configurations/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ConfigurationService {\r\n  \r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getConfiguration(configurationId: string) {\r\n    // \r\n    return this.http.get<{message:string, configuration: any}>(BACKEND_URL + configurationId);\r\n  }\r\n  \r\n  addConfiguration(values: any, datafileId: string){\r\n    let res: any;\r\n    //const configuration = {...values};\r\n    const {title, errorCode, ...extraParams} = values;\r\n    const configuration: Configuration = {\r\n      'id':null,\r\n      'title': title, \r\n      'creationMoment': null, \r\n      'errorCode': errorCode, \r\n      'extraParams': extraParams, \r\n      'datafile': datafileId\r\n    };\r\n\r\n    this.http.post<{message: string, configuration: any}>(BACKEND_URL, configuration).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n    \r\n    return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            if (res === undefined) {\r\n              reject('Creating a configuration failed!');\r\n            } else {\r\n              resolve('Configuration added successfully!');\r\n            }\r\n          }, 1000);\r\n        });\r\n  }\r\n \r\n  updateConfiguration(configurationId: string, values: any, datafileId: string) {\r\n    let res: any;\r\n    //const configuration = {...values};\r\n    const {title, errorCode, ...extraParams} = values;\r\n    const configuration: Configuration = {\r\n      'id': configurationId,\r\n      'title': title, \r\n      'creationMoment': null, \r\n      'errorCode': errorCode, \r\n      'extraParams': extraParams, \r\n      'datafile': datafileId\r\n    };\r\n    \r\n    this.http.put<{message: string, configuration: any}>(\r\n      BACKEND_URL + configurationId,\r\n      configuration\r\n    ).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating a configuration failed!');\r\n        } else {\r\n          resolve('Configuration updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n  \r\n  deleteConfiguration(configurationId: string){\r\n    let res: any;\r\n    this.http.delete<{message: string}>(BACKEND_URL + configurationId).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting a configuration failed!');\r\n        } else {\r\n          resolve('Configuration deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nconst BACKEND_URL = environment.apiUrl + '/reports/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ReportsService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addReport(testId: string){\r\n    let res: any;\r\n    const executionData: any = { \r\n      'testId':testId\r\n    };\r\n    return this.http.put<{message: any, testUpdates: any}>(BACKEND_URL, executionData);\r\n    // .pipe(map( (testData) => {\r\n    //   return { \r\n    //     testsUpdates: testData.testsUpdates.map(test => {\r\n    //         return {\r\n    //           id: test._id,\r\n    //           title: test.title,\r\n    //           reportPath: test.reportPath,\r\n    //           status: test.status,\r\n    //           esquema: test.esquema,\r\n    //           configurations: test.configurations,\r\n    //           creationMoment: test.creationMoment,\r\n    //           updateMoment:test .updateMoment,\r\n    //           executionMoment: test.executionMoment,\r\n    //           totalErrors: test.totalErrors,\r\n    //           executable: test.executable,\r\n    //           datafile: test.datafile,\r\n    //         };\r\n    //       })  \r\n    //   };\r\n    // }));\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n\r\n  anio: number;\r\n\r\n  constructor() {\r\n    this.anio = new Date().getFullYear();\r\n  }\r\n\r\n}\r\n","<footer class=\"footer bg-dark text-center\">\r\n    <div class=\"row justify-content-sm-center\">\r\n        <p class=\"col-sm-1\">\r\n            &copy; TabLab {{anio}}\r\n        </p>\r\n        <p class=\"col-sm-1\">\r\n            Términos de Uso\r\n        </p>\r\n        <p class=\"col-sm-1\">\r\n            Privacidad\r\n        </p>\r\n\r\n    </div>\r\n</footer>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Invitation } from 'src/app/models/invitation.model';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { InvitationService } from '../../../services/invitations.service';\r\n\r\n@Component({\r\n  selector: 'app-invitation-create',\r\n  templateUrl: './invitation-create.component.html',\r\n})\r\nexport class InvitationCreateComponent implements OnInit, OnDestroy{\r\n  isLoading                   : boolean = false;\r\n  workspaceId                 : string;\r\n  invalidEmail                : boolean = false;\r\n  @Input() create             : any;\r\n  @Input()  invitations       : Invitation[];\r\n  @Output() invitationsChange : any = new EventEmitter();\r\n  invitationForm              : FormGroup;\r\n  private authStatusSub       : Subscription;\r\n\r\n\r\n  constructor(public invitationsService: InvitationService, public authService: AuthService, private formBuilder: FormBuilder,\r\n              private activatedRoute: ActivatedRoute,  private router: Router) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.invitationForm = this.formBuilder.group({\r\n      email : ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9._]+\\.[a-z]{2,3}$')]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe( authStatus => {\r\n      // this.isLoading = false;\r\n    });\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.workspaceId = params.get('workspaceId');\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onInvite() {\r\n    if (this.invitationForm.invalid){\r\n    this.invalidEmail = true;\r\n    return Object.values(this.invitationForm.controls).forEach(control => {\r\n      if (control instanceof FormGroup) {\r\n        \r\n        Object.values(control.controls).forEach( control => control.markAsTouched());\r\n      } else {\r\n        control.markAsTouched();\r\n      }\r\n    });\r\n    }\r\n    // this.isLoading = true;\r\n    const values = this.invitationForm.getRawValue();\r\n    if ( this.create ) {\r\n\r\n      this.invitations.push(values.email);\r\n      this.invitationsChange.emit(this.invitations);\r\n    }  else {\r\n      this.invitationsService.addInvitation(values.email, this.workspaceId)\r\n        .then(response=>{\r\n          this.router.navigate(['/']);\r\n        })\r\n        .catch(err=>{\r\n          console.log(\"Error on onInvite method: \"+err);\r\n        });\r\n    }\r\n    this.invitationForm.reset();\r\n    // this.isLoading = false;\r\n  }\r\n\r\nonReset() {\r\n    this.invitationForm.reset();\r\n  }\r\n\r\n\r\n}\r\n","<form class=\"row mt-2\" [formGroup]=\"invitationForm\" (ngSubmit)=\"onInvite()\">\r\n    <div class=\"row m-0 p-0\" *ngIf=\"!create\">\r\n        <div class=\"col input-group input-group-sm\">\r\n            <input type=\"email\" class=\"form-control\" placeholder=\"Introduce un email...\" formControlName=\"email\" [class.is-invalid]=\"invalidEmail\">\r\n        </div>\r\n    </div>\r\n    <div class=\"input-group\" *ngIf=\"create\">\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Introduce un email...\" formControlName=\"email\" [class.is-invalid]=\"invalidEmail\">\r\n        <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\" type=\"submit\" id=\"button-addon2\">Añadir</button>\r\n    </div>\r\n    <div class=\"row ms-0 mb-2 p-0\">\r\n        <div class=\"col d-flex justify-content-start\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidEmail\" class=\"text-danger\">\r\n                  Ingrese un correo adecuado\r\n                </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 p-0\" *ngIf=\"create\">\r\n        <div class=\"col\">\r\n            <ul class=\"list-group\">\r\n                <div *ngFor=\"let item of invitations\">\r\n                    <li class=\"list-group-item container p-1\">\r\n                        <div class=\"row ps-2 pe-3\">\r\n                            <div class=\"col-10 mt-1\">\r\n                                {{item}}\r\n                            </div>\r\n                            <div class=\"col-2 m-0 p-0 d-flex justify-content-end\">\r\n                                <div>\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">\r\n                                      <i class=\"fas fa-times\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-1 m-0 p-0\" *ngIf=\"!create\">\r\n        <div class=\"col  d-flex justify-content-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\">Invitar</button>\r\n            <a class=\"btn btn-sm btn-secondary\" (click)=\"onReset()\">Cancelar</a>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Configuration } from 'src/app/models/configuration.model';\r\nimport { FricError } from 'src/app/models/fricError.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ConfigurationService } from 'src/app/services/configuration.service';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'app-configuration-create',\r\n  templateUrl: './configuration-create.component.html',\r\n  styleUrls: ['./configuration-create.component.css']\r\n})\r\nexport class ConfigurationCreateComponent implements OnInit, OnDestroy{\r\n  userId                        : string;\r\n  userIsAuthenticated           : boolean = false;\r\n  @Input() configurationForm    : FormGroup;\r\n  @Input() datafileId           : string;\r\n  @Input() workspaceId          : string;\r\n  @Input() configurationId        : string;\r\n  @Input() savefile             : string;\r\n  @Input() extraControls        : object[] = [];\r\n  @Output() configurationChange : EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() configuration        : Configuration;\r\n  pickedError                   : any;\r\n  fricErrors                    : any;\r\n  private authStatusSub         : Subscription;\r\n  // private fricErrorsSub         : Subscription;\r\n\r\n  constructor(public configurationService: ConfigurationService, public route: ActivatedRoute,\r\n              private usersService: AuthService, private router: Router) {\r\n  }\r\n//\r\n  ngOnInit() {\r\n    this.fricErrors = environment.errors;\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.configurationForm.get('title').invalid && this.configurationForm.get('title').touched;\r\n  }\r\n\r\n  get invalidErrorCode() {\r\n    return this.configurationForm.get('errorCode').invalid && this.configurationForm.get('errorCode').touched;\r\n  }\r\n\r\n  invalidParam(param: any, value: any) {\r\n    let invalid = false;\r\n    if (this.pickedError.extraParams && this.configurationForm.get(param)) {\r\n      invalid = this.pickedError.extraParams.invalid(param, this.configurationForm.get(param).value);\r\n      return (invalid || this.configurationForm.get(param).invalid) && this.configurationForm.get(param).touched;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onErrorPicked(event: Event) {\r\n    const errorCode = (event.target as HTMLInputElement).value;\r\n    const fricError: any = this.fricErrors.find(element => element.errorCode === errorCode);\r\n    this.pickedError = fricError;\r\n    if (fricError.extraParams) {\r\n      Object.keys(fricError.extraParams).forEach(extraParam => {\r\n        let tipo = '';\r\n        let extraControl = {};\r\n        if ( fricError.extraParams[extraParam].length > 0 ) {\r\n          tipo = 'enum';\r\n          extraControl = {\r\n                          'extraParam': extraParam,\r\n                          'tipo'      : tipo,\r\n                          'enum'      : fricError.extraParams[extraParam],\r\n                          'hint'      : fricError.extraParams.getHint(extraParam)\r\n                         };\r\n        } else if (extraParam !== 'hints') {\r\n          tipo = typeof fricError.extraParams[extraParam];\r\n          extraControl = {\r\n                          'extraParam': extraParam,\r\n                          'tipo'      : tipo,\r\n                          'hint'      : fricError.extraParams.getHint(extraParam)\r\n                         };\r\n        }\r\n\r\n        this.configurationForm.addControl(extraParam, new FormControl('', {validators: [Validators.required]}));\r\n        this.extraControls.push(extraControl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.configurationForm.reset();\r\n    this.extraControls.forEach(newControl => {\r\n      this.configurationForm.removeControl(newControl[0]);\r\n    });\r\n    this.configurationChange.emit([]);\r\n  }\r\n\r\n  async onSave() {\r\n    // if (this.configuration) { // Modo edición\r\n    //   if (this.configurationForm.get('title').invalid) {\r\n    //     this.configurationForm.get('title').markAsTouched();\r\n    //     return;\r\n    //   }\r\n    // } else {\r\n    if (this.configurationForm.invalid){\r\n      return Object.values(this.configurationForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          \r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    // }\r\n    const values = this.configurationForm.getRawValue();\r\n    if (this.configuration) {\r\n      await this.configurationService.updateConfiguration(this.configurationId, values, this.datafileId);\r\n    } else {\r\n      await this.configurationService.addConfiguration(values, this.datafileId);\r\n      // (document.getElementById('esquemaContent') as HTMLInputElement).value = '';\r\n    }\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n    }).catch( err => {\r\n      console.log(\"Error on onSave method: \"+err);\r\n    });\r\n\r\n    // Resets\r\n    this.configurationForm.reset();\r\n    this.extraControls.forEach(newControl => {\r\n        this.configurationForm.removeControl(newControl[0]);\r\n      });\r\n    this.configurationChange.emit([]);\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"modal fade\" id=\"configuratioModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title mb-0\" id=\"exampleModalLabel\">Añadir Configuración</h2>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"onCancel()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"configurationForm\" (ngSubmit)=\"onSave()\" novalidate>\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <select class=\"form-select form-select-sm\" formControlName=\"errorCode\" (change)=\"onErrorPicked($event)\" [class.is-invalid]=\"invalidErrorCode\">\r\n                          <option value=\"\" disabled> Código de Error </option>\r\n                          <option *ngFor=\"let fricError of fricErrors\" value=\"{{fricError.errorCode}}\">{{fricError.errorCode}}</option>\r\n                        </select>\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidErrorCode\" class=\"text-danger \">\r\n                            Seleccione un código de error.\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\" *ngFor=\"let extraControl of extraControls\">\r\n                        {{extraControl.extraParam}}\r\n                        <div *ngIf=\"extraControl.tipo === 'string'\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"{{extraControl.extraParam}}\" formControlName=\"{{extraControl.extraParam}}\" [class.is-invalid]=\"invalidParam(extraControl.extraParam)\">\r\n                        </div>\r\n                        <div *ngIf=\"extraControl.tipo === 'enum'\">\r\n                            <select class=\"form-select form-select-sm\" formControlName=\"{{extraControl.extraParam}}\" [class.is-invalid]=\"invalidParam(extraControl.extraParam)\">\r\n                              <option value=\"\" selected> {{extraControl.extraParam}} </option>\r\n                              <option *ngFor=\"let enumVal of extraControl.enum\" value=\"{{enumVal}}\">{{enumVal}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div *ngIf=\"extraControl.tipo === 'number'\">\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"{{extraControl.extraParam}}\" [class.is-invalid]=\"invalidParam(extraControl.extraParam)\">\r\n                        </div>\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidParam(extraControl.extraParam)\" class=\"text-danger\">\r\n                          {{extraControl.hint}}\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"onCancel()\">Cancelar</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"configuration\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Guardar cambios</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!configuration && configurationForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear configuración</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!configuration && !configurationForm.valid\" (click)=\"onSave()\">Crear configuración</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<div class=\"container mt-5\" *ngIf=\"!isLoading\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-9 col-auto \">\r\n            <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                    <img src=\"{{user.photo}}\" class=\"border rounded-circle me-2\" style=\"width: 100px;\" alt=\"\">\r\n                    <div class=\"mt-2\">\r\n                        <p class=\"\">{{user.name}}</p>\r\n                        <p class=\"\">{{user.username}}</p>\r\n                        <p class=\"\">{{user.email}}</p>\r\n                        <a class=\"btn btn-primary me-1\" routerLink=\"/profile/{{userId}}/edit\">Editar Perfil</a>\r\n                        <a class=\"btn btn-primary\" routerLink=\"/account/{{userId}}/edit\">Configuración</a>\r\n                    </div>\r\n                </div>\r\n                    <div class=\"col-8 card text-center p-0\">\r\n                        <div class=\"card-header\">\r\n                          <ul class=\"nav nav-tabs card-header-tabs\">\r\n                            <li class=\"nav-item\">\r\n                              <a class=\"nav-link active\" aria-current=\"true\" href=\"#\">Active</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                              <a class=\"nav-link\" href=\"#\">Link</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                              <a class=\"nav-link\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                          <h5 class=\"card-title\">Special title treatment</h5>\r\n                          <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                          <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\r\n                        </div>\r\n                      </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, ParamMap, Router } from \"@angular/router\";\r\nimport { User } from \"src/app/models/user.model\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { UsersService } from \"src/app/services/users.service\";\r\nimport { WorkspacesService } from \"src/app/services/workspaces.service\";\r\n\r\n@Component({\r\n    selector: 'app-profile-details',\r\n    templateUrl: './profile-details.component.html',\r\n    styleUrls: ['./profile-details.component.css']\r\n  })\r\n  export class ProfileDetailsComponent implements OnInit{\r\n    user: User;\r\n    userId: string;\r\n    isLoading: boolean = false;\r\n    constructor(public authService: AuthService, public usersService: UsersService,\r\n                public route: ActivatedRoute, public workspacesService: WorkspacesService) {}\r\n\r\n    ngOnInit() {\r\n        this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n            this.userId = paramMap.get('userId');\r\n            this.isLoading = true;\r\n            this.usersService.getUser(this.userId).subscribe(userData => {\r\n                this.user = {\r\n                    id: userData.user.id,\r\n                    username: userData.user.username,\r\n                    email: userData.user.email,\r\n                    password: userData.user.password,\r\n                    photo: userData.user.photo,\r\n                    name: userData.user.name,\r\n                    role: userData.user.role,\r\n                    status: userData.user.status,\r\n                    google: userData.user.google\r\n                };\r\n                this.isLoading = false;\r\n            });\r\n        });    \r\n    }\r\n}","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'An unknown error ocurred!';\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from './services/auth.service';\r\n// import { SocketioService } from './services/socketio.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  user: any;\r\n  constructor(private authService: AuthService) {}\r\n    //private socketService: SocketioService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.autoAuthUser();\r\n    //this.socketService.setupSocketConnection();\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<main class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</main>\r\n<app-footer></app-footer>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/uploads/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UploadsService {\r\n  \r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  updatePhoto(userId: string, photo: string | File){\r\n    let res;\r\n    let userData: any | FormData;\r\n    if (typeof(photo) === 'object') { \r\n        userData = new FormData();\r\n        userData.append('userId',userId);\r\n        userData.append('entity','users');\r\n        userData.append('file', photo);\r\n    } else { \r\n        userData = {'userId':userId,'entity':'users','filePath': photo}; \r\n    } \r\n    this.http\r\n      .put(BACKEND_URL + userId, userData)\r\n      .subscribe( response => {\r\n        res = response;\r\n    });\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  updateFile(userId: string, datafileId: string, operation: string, file: string | File){\r\n    let res: any;\r\n    let datafileData: any | FormData;\r\n    if (typeof(file) === 'object') { \r\n      datafileData = new FormData();\r\n      datafileData.append('userId',userId);\r\n      datafileData.append('datafileId',datafileId);\r\n      datafileData.append('entity','datafiles');\r\n      datafileData.append('operation',operation);\r\n      datafileData.append('file', file);\r\n    } else { \r\n      datafileData = {'userId':userId, 'datafileId':datafileId,'entity':'datafiles','operation':operation,'filePath': file}; \r\n    } \r\n    this.http\r\n      .put(BACKEND_URL + datafileId, datafileData)\r\n      .subscribe( response => {\r\n        res = response;\r\n    });\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Activity } from '../models/activity.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/activities/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ActivitiesService {\r\n  private activities: Activity[] = [];\r\n  private activitiesUpdated = new Subject<{activities: Activity[]}>();\r\n  \r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getActivityUpdateListener() {\r\n    return this.activitiesUpdated.asObservable();\r\n  }\r\n  \r\n  getActivities(userId: String) {\r\n    //const queryParams = `?pagesize=${workspacesPerPage}&page=${currentPage}`;\r\n    this.http.get<{message: string, activities: any[]}>(BACKEND_URL + userId)\r\n      .pipe(map( (activityData) => {\r\n        return { \r\n            workspaces: activityData.activities.map(activity => {\r\n              return {\r\n                id: activity._id,\r\n                message: activity.message,\r\n                workspace: activity.workspace,\r\n                author: activity.author,\r\n                coleccion: activity.coleccion,\r\n                datafile: activity.datafile,\r\n                creationMoment: activity.creationMoment\r\n              };\r\n        }),\r\n      };\r\n      }))\r\n      .subscribe((transformedWorkspaceData) => {\r\n        this.activities = transformedWorkspaceData.workspaces;\r\n        this.activitiesUpdated.next({\r\n          activities: [...this.activities], // para hacer una verdadera copia y no afectar al original\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { TestsService } from 'src/app/services/tests.service';\r\nimport { Datafile } from 'src/app/models/datafile.model';\r\nimport { UploadsService } from 'src/app/services/uploads.service';\r\nimport { Configuration } from 'src/app/models/configuration.model';\r\nimport { Test } from 'src/app/models/test.model';\r\nimport { Esquema } from '../../../models/esquema.model';\r\n\r\n@Component({\r\n  selector: 'app-test-details',\r\n  templateUrl: './test-details.component.html',\r\n  styleUrls: ['./test-details.component.css']\r\n})\r\nexport class TestDetailsComponent implements OnInit {\r\n  isLoading                : boolean = false;\r\n  \r\n  testId                   : string;\r\n  test                     : Test;\r\n  selectedEsquema          : Esquema;\r\n  selectedConfigurationIDs : string[] = [];\r\n  \r\n  workspaceId              : string;\r\n  datafileId               : string;\r\n  datafile                 : Datafile;\r\n  esquemas                 : Esquema[];\r\n  configurations           : Configuration[];\r\n  formattedConfigs         : any[] = [];\r\n  \r\n  extension                : string = null;\r\n  fileName                 : string = null;\r\n  isSavingTest             : boolean = false;\r\n  edit                     : boolean;\r\n  \r\n  fileContentForm          : FormGroup;\r\n  testForm                 : FormGroup;\r\n\r\n  constructor(public testsService: TestsService, public datafilesService: DatafileService, public uploadsService: UploadsService, public route: ActivatedRoute,\r\n              public usersService: AuthService, private router: Router){\r\n                this.testForm = new FormGroup({\r\n                  'title': new FormControl(null, {validators: [Validators.required]})\r\n                });\r\n                this.fileContentForm = new FormGroup({\r\n                  'fileContent': new FormControl({value: '', disabled: true}),\r\n                });\r\n  }\r\n  \r\n  get invalidTitle() {\r\n    return this.testForm.get('title').invalid && this.testForm.get('title').touched;\r\n  }\r\n  \r\n  ngOnInit(){\r\n    this.isLoading = true;\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.datafileId = paramMap.get('datafileId');\r\n      this.workspaceId = paramMap.get('workspaceId');\r\n      this.testId = paramMap.get('testId');\r\n      console.log(this.testId)\r\n      this.testsService.getTest(this.testId).subscribe( testData => {\r\n        this.test = {\r\n          id: testData.test._id,\r\n          title: testData.test.title,\r\n          reportPath: testData.test.reportPath,\r\n          status: testData.test.status,\r\n          esquema: testData.test.esquema,\r\n          configurations: testData.test.configurations,\r\n          creationMoment: testData.test.creationMoment,\r\n          updateMoment: testData.test.updateMoment,\r\n          executionMoment: testData.test.executionMoment,\r\n          totalErrors: testData.test.totalErrors,\r\n          executable: testData.test.executable,\r\n          datafile: testData.test.datafile,\r\n        };\r\n        this.testForm.reset({title: this.test.title});\r\n        this.selectedEsquema = {\r\n          id: testData.esquema._id,\r\n          title: testData.esquema.title,\r\n          contentPath: testData.esquema.contentPath,\r\n          creationMoment: testData.esquema.creationMoment,\r\n          datafile: testData.esquema.datafile,\r\n        }\r\n        this.selectedConfigurationIDs = testData.configurationIDs;\r\n      });\r\n      this.datafilesService.getDatafile(this.datafileId).subscribe( datafileData => {\r\n        this.fileContentForm.patchValue({fileContent: datafileData.content});\r\n\r\n        this.datafile = {\r\n          id: datafileData.datafile.id,\r\n          title: datafileData.datafile.title,\r\n          description: datafileData.datafile.description,\r\n          contentPath: datafileData.datafile.contentPath,\r\n          errLimit: datafileData.datafile.errLimit,\r\n          delimiter: datafileData.datafile.delimiter,\r\n          coleccion: datafileData.datafile.coleccion,\r\n          workspace: datafileData.datafile.workspace,\r\n        };\r\n        this.esquemas = datafileData.esquemas;\r\n        this.configurations = datafileData.configurations;\r\n\r\n        if (this.datafile.contentPath) {\r\n          const nameWExtension = datafileData.datafile.contentPath.split('/');\r\n          const splitNameWExtension = nameWExtension[3].split('.');\r\n          this.extension = splitNameWExtension[1];\r\n\r\n          const nameWDate = splitNameWExtension[0].split('-');\r\n          const name = nameWDate[0];\r\n          this.fileName = name + '.' + this.extension;\r\n        }\r\n        this.configurations.forEach(config => {\r\n          const extraParamsJSON = JSON.stringify(config.extraParams).toString();\r\n          const extraParamsStr1 = extraParamsJSON.replace(/{/g, '');\r\n          const extraParamsStr2 = extraParamsStr1.replace(/}/g, '');\r\n          const extraParamsStr = extraParamsStr2.replace(/,/g, ',\\n');      \r\n          this.formattedConfigs.push({...config, extraParamsStr});\r\n        });\r\n\r\n        this.isLoading = false;\r\n        this.edit = false;\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  async onDelete(){\r\n    this.isLoading = true;\r\n    await this.testsService.deleteTest(this.testId);\r\n    this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n  }\r\n\r\n  onEdit() {\r\n    this.edit = true;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.testForm.invalid){\r\n      return Object.values(this.testForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.isSavingTest = true;\r\n    const values = this.testForm.getRawValue();\r\n    this.test.title =  values.title;\r\n    this.test.executable = true;\r\n    // this.testsService.updateTest(this.test).subscribe( responseData => {\r\n    //   this.testForm.reset({});\r\n    //   this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    //   .then(() => {\r\n    //     this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}/test/${this.testId}`]);\r\n    //   }).catch( err => {\r\n    //     console.log(\"Error on onSave method: \"+err);\r\n    //   });\r\n    //   this.isSavingTest = false;\r\n    // });\r\n  }\r\n\r\n  async onSaveContent() {\r\n    let file: any;\r\n    const content = this.fileContentForm.value.fileContent;\r\n    if (this.extension === 'csv') {\r\n      const blob = new Blob([content], {type: 'text/csv' });\r\n      file = new File([blob], this.fileName, {type: 'text/csv'});\r\n    } else if (this.extension === 'xlsx') {\r\n      const rows = content.split('\\n').map(row => {\r\n        return row.split(',');\r\n      });\r\n      const worksheetName = this.fileName;\r\n      const wsorksheetContent = XLSX.utils.aoa_to_sheet(rows);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n      const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n      // \r\n      const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n      // \r\n      file = new File([data], this.fileName, { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n    } else {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    //await this.uploadsService.updateFile(this.userId, this.datafileId, 'updateContent', file);\r\n    await this.datafilesService.updateDatafile( this.datafileId, this.datafile.title, this.datafile.description);\r\n    this.fileContentForm.get('fileContent').disable();\r\n    this.isLoading = false;\r\n  }\r\n\r\n  async onEsquemaPicked(event: Event) {\r\n    const esquemaId = (event.target as HTMLInputElement).value;\r\n    if (esquemaId){\r\n      this.test.esquema =  esquemaId;\r\n      this.test.executable = true;\r\n      // this.testsService.updateTest(this.test).subscribe( responseData => {\r\n      //   this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      //   .then(() => {\r\n      //     this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}/test/${this.testId}`]);\r\n      //   }).catch( err => {\r\n      //     console.log(\"Error on onEsquemaPicked method: \"+err);\r\n      //   });\r\n      // });\r\n    }\r\n  }\r\n\r\n  checkConfig(configId: string){\r\n    return this.selectedConfigurationIDs.includes(configId);\r\n  }\r\n\r\n  async onConfigurationPicked(event: Event) {\r\n    const configurationId: string = (event.target as HTMLInputElement).value;\r\n    const checked: boolean = (event.target as HTMLInputElement).checked;\r\n    const index: number = this.selectedConfigurationIDs.indexOf(configurationId);\r\n    if (checked && index < 0) {\r\n      this.selectedConfigurationIDs.push(configurationId);\r\n      this.test.configurations = this.selectedConfigurationIDs;\r\n      this.test.executable = true;\r\n      // this.testsService.updateTest(this.test).subscribe( responseData => {\r\n      //   console.log(\"Added!\")\r\n      // });\r\n    } else if (!checked && index >= 0) {\r\n      this.selectedConfigurationIDs.splice(index, 1);\r\n      this.test.configurations = this.selectedConfigurationIDs;\r\n      this.test.executable = true;\r\n      // this.testsService.updateTest(this.test).subscribe( responseData => {\r\n      //   console.log(\"Added!\")\r\n      // });\r\n    }\r\n  }\r\n\r\n  onEditContent() {\r\n    if (this.fileContentForm.get('fileContent').disabled) {\r\n      this.fileContentForm.get('fileContent').enable();\r\n    } else {\r\n      this.fileContentForm.get('fileContent').disable();\r\n    }\r\n  }\r\n\r\n  onDownload() {\r\n    if (this.extension === 'xlsx') {\r\n      const worksheetName = this.fileName;\r\n      const wsorksheetContent = XLSX.utils.aoa_to_sheet(this.fileContentForm.value.fileContent);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n      XLSX.writeFile(workbook, this.fileName); // downloads it\r\n      const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n      // \r\n      const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n      const file: File = new File([data], 'out.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n    } else if (this.extension === 'csv') {\r\n      const blob = new Blob([this.fileContentForm.value.fileContent], {type: 'text/csv' })\r\n      saveAs(blob, this.fileName);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  onCancelTestForm(){\r\n    this.edit = false;\r\n    this.testForm.reset({title: this.test.title});\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row complete-height\">\r\n    <div class=\"col-2\">\r\n    </div>\r\n    <div class=\"col-7\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n        <!-- <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" *ngIf=\"!isSavingTest && infer\" (click)=\"onInfer()\">\r\n          Inferir Esquema\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" disabled *ngIf=\"isSavingTest\">\r\n          Inferir Esquema\r\n          <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        </button> -->\r\n        <div class=\"container mt-4\">\r\n            <div class=\"row ms-0 me-0 mb-1 p-0\" *ngIf=\"edit && !isLoading\">\r\n                <form [formGroup]=\"testForm\" class=\"p-0\" (ngSubmit)=\"onSave()\">\r\n                    <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"row ms-0 me-0 mt-1 mb-1 p-0\">\r\n                        <div class=\"col ps-0 pe-0 d-flex justify-content-end\">\r\n                            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\" *ngIf=\"!isSavingTest\">Guardar</button>\r\n                            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\" *ngIf=\"isSavingTest\" disabled>\r\n                              Guardar\r\n                              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n\r\n                            <a class=\"btn btn-sm btn-secondary\" (click)=\"onCancelTestForm()\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"row mt-4\" *ngIf=\"!isLoading && !edit\">\r\n                <div class=\"col-10\">\r\n                    <h2>{{ test.title }} (from <a routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafileId}}\">\r\n                      {{datafile.title}}</a>)</h2>\r\n                </div>\r\n                <div class=\"col-2 d-flex justify-content-end\">\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEdit()\">\r\n                          <i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"dropdown\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                            <li><a class=\"dropdown-item\" routerLink=\"/workspace/{{workspaceId}}/runner/{{test.id}}\">Ejecutar Prueba</a></li>\r\n                            <li><a class=\"dropdown-item danger\" (click)=\"onDelete()\">Eliminar Prueba</a></li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col-9\">\r\n                    <h2 class=\"mb-0\">Contenido del fichero</h2>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\" *ngIf=\"datafile.contentPath\">\r\n                    <div>\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onDownload()\">\r\n                          <i class=\"fas fa-download\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"ms-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEditContent()\">\r\n                        <i class=\"fas fa-pen\"></i>\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-floating\">\r\n                    <form [formGroup]=\"fileContentForm\">\r\n                        <textarea formControlName=\"fileContent\" class=\"form-control mt-2 pt-1\" id=\"floatingTextarea2\" style=\"height: 400px\"></textarea>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <div *ngIf=\"fileName\">\r\n                        Nombre del archivo: {{fileName}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6 mt-2 d-flex justify-content-end\">\r\n                    <div *ngIf=\"datafile.contentPath\">\r\n                        <button class=\"btn btn-outline-primary btn-sm me-1\" routerLink=\"/workspace/{{workspaceId}}/runner/{{test.id}}\">Ejecutar Prueba</button>\r\n                        <button class=\"btn btn-outline-primary btn-sm\" type=\"submit\" (click)=\"onSaveContent()\">Guardar cambios</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <div class=\"container mt-4 ps-0\">\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                    <h2>Stats</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col-4 pe-0\">\r\n                    <h2>Esquema</h2>\r\n                </div>\r\n                <div class=\"col-8\">\r\n                    <select class=\"form-select form-select-sm\" (change)=\"onEsquemaPicked($event)\">\r\n                      <option value=\"None\" selected *ngIf=\"!selectedEsquema\"> ----- </option>\r\n                      <option *ngFor=\"let esquema of esquemas\" [selected]=\"selectedEsquema && esquema.id == selectedEsquema.id\" value=\"{{esquema.id}}\">{{esquema.title}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col-4 pe-0\">\r\n                    <h2>Configuraciones</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1 pe-2\">\r\n                <div class=\"col p-0\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row p-2 border-header\">\r\n                            <div class=\"col-3 d-flex justify-content-start\">\r\n                                <div>Título</div>\r\n                            </div>\r\n                            <div class=\"col-4 d-flex justify-content-center\">\r\n                                <div>Código de Error</div>\r\n                            </div>\r\n                            <div class=\"col-4 d-flex justify-content-center\">\r\n                                <div>Parámetros</div>\r\n                            </div>\r\n                            <div class=\"col-1\">\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-0 p-2 border-content\">\r\n                            <div class=\"col\">\r\n                                <div class=\"row mt-1 mb-1\" *ngFor=\"let configuration of formattedConfigs\">\r\n                                    <div class=\"col-3 d-flex justify-content-start\">\r\n                                        <div>{{configuration.title}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-4 d-flex justify-content-center\">\r\n                                        <div>{{configuration.errorCode}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-4 d-flex justify-content-center\">\r\n                                        <div>\r\n                                            <button class=\"btn btn-outline-light btn-sm\" type=\"button\" matTooltip=\"{{configuration.extraParamsStr || '-'}}\">\r\n                                                <i class=\"far fa-eye\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-1 d-flex justify-content-center\">\r\n                                        <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" value=\"{{configuration.id}}\" id=\"flexCheckDefault\" (change)=\"onConfigurationPicked($event)\" [checked]=\"checkConfig(configuration.id)\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"row mt-4\">\r\n    <div class=\"col-5\">\r\n        <h2>Pruebas</h2>\r\n    </div>\r\n    <div class=\"col-7 d-flex justify-content-end\">\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#testCreateModal\" *ngIf=\"!savefileChange\">\r\n              Añadir prueba\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" disabled *ngIf=\"savefileChange\">\r\n              Añadir prueba\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n            <!-- [esquemaForm]=\"esquemaForm\" (savefileChange)=\"setSaveMode($event)\" (esquemaChange)=\"setEsquema($event)\"-->\r\n            <app-test-create [workspaceId]=\"workspaceId\" [datafileId]=\"datafileId\" [esquemas]=\"esquemas\" [configurations]=\"configurations\"></app-test-create>\r\n            <!-- [test]=\"test\" -->\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2 mb-4\">\r\n    <div class=\"col p-0\">\r\n        <div class=\"container\">\r\n            <div class=\"row border-header p-2\">\r\n                <div class=\"col-3 d-flex justify-content-start\">\r\n                    <div>Título</div>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-center\">\r\n                    <div>Última modificación</div>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\">\r\n                    <div>Opciones</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-0 p-2 border-content\">\r\n                <div class=\"col\">\r\n                    <div class=\"row mt-1 mb-1\" *ngFor=\"let test of tests\">\r\n                        <div class=\"col-3 d-flex justify-content-start pt-2 pe-0\">\r\n                            <div>{{test.title}}</div>\r\n                        </div>\r\n                        <div class=\"col-6 d-flex justify-content-center pt-2\">\r\n                            <div>{{test.updateMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-end pe-4\">\r\n                            <div class=\"dropdown\">\r\n                                <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                              <i class=\"fas fa-ellipsis-h\"></i>\r\n                                            </button>\r\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    <li><a class=\"dropdown-item\" data-bs-toggle=\"modal\" routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafileId}}/test/{{test.id}}\">Editar Prueba</a></li>\r\n                                    <li><a class=\"dropdown-item danger\" (click)=\"onDelete(test.id)\">Eliminar Prueba</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FormGroup} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { TestsService } from '../../../services/tests.service';\r\nimport { Test } from '../../../models/test.model';\r\n\r\n@Component({\r\n  selector: 'app-test-list',\r\n  templateUrl: './test-list.component.html',\r\n  styleUrls: ['./test-list.component.css']\r\n})\r\nexport class TestListComponent implements OnInit, OnDestroy{\r\n  userId                  : string;\r\n  userIsAuthenticated     : boolean = false;\r\n  isDeleting              : boolean = false;\r\n  \r\n  testForm                : FormGroup;\r\n  savefileChange          : boolean = false;\r\n  \r\n  @Input() datafileId     : string;\r\n  @Input() workspaceId    : string;\r\n  @Input() tests          : Test[];\r\n  //@Input() test           : Test;\r\n  @Input() esquemas       : any[];\r\n  @Input() configurations : any[];\r\n\r\n  constructor(public datafilesService: DatafileService, public route: ActivatedRoute, public usersService: AuthService,\r\n              private router: Router, public testsService: TestsService){\r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    // this.testsSub.unsubscribe();\r\n    // this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onDelete( testId: string ){\r\n    await this.testsService.deleteTest(testId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      })\r\n      .catch( err => {\r\n        console.log(\"Error on onDelete method: \"+err)\r\n      });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\nimport { WorkspacesService } from '../../../services/workspaces.service';\r\n\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-workspace-list',\r\n  templateUrl: './workspace-list.component.html',\r\n  styleUrls: ['./workspace-list.component.css']\r\n})\r\nexport class WorkspaceListComponent implements OnInit, OnDestroy{\r\n  userId                   : string;\r\n  userIsAuthenticated      : boolean = false;\r\n  isLoading                : boolean = false;\r\n  displayedColumns         : string[] = ['title', 'description', 'creationMoment', 'users'];\r\n  //clickedRows              : Set<Workspace> = new Set<Workspace>();\r\n  workspaces               : Workspace[] = [];\r\n  totalWorkspaces          : number = 0;\r\n  workspacesPerPage        : number = 2;\r\n  currentPage              : number = 1;\r\n  dataSource               : any = null;\r\n  pageSizeOptions          : number[] = [1, 2, 5, 10];\r\n  private workspacesSub    : Subscription;\r\n  private authStatusSub    : Subscription;\r\n\r\n  @ViewChild(MatSort) sort : MatSort;\r\n\r\n  constructor( public workspacesService: WorkspacesService, private authService: AuthService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.workspacesService.getWorkspaces(this.workspacesPerPage, this.currentPage);\r\n    this.userId = this.authService.getUserId();\r\n    this.workspacesSub = this.workspacesService.getWorkspaceUpdateListener()\r\n    .subscribe( (workspaceData: {workspaces: Workspace[], workspaceCount: number, totalWorkspaces:number}) => {\r\n      this.isLoading = false;\r\n      this.totalWorkspaces = workspaceData.totalWorkspaces;\r\n      this.workspaces = workspaceData.workspaces;\r\n      this.dataSource = new MatTableDataSource(this.workspaces);\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.workspaces.map(function(workspace) {\r\n      this.authService.getUsersById(workspace.id).subscribe((usersData: {users: any[]}) => {\r\n        this.isLoading = false;\r\n        workspace['users'] = usersData.users;\r\n      });\r\n    });\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n  }\r\n\r\n  onChangedPage( pageData: PageEvent ) {\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.workspacesPerPage = pageData.pageSize;\r\n    this.workspacesService.getWorkspaces(this.workspacesPerPage, this.currentPage);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.workspacesSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-9 col-auto \">\r\n            <div class=\"row\">\r\n                <div class=\"col-8\">\r\n                    <h2>Espacios de trabajo</h2>\r\n                </div>\r\n                <div class=\"col-4 d-flex justify-content-end\">\r\n                    <div>\r\n                        <a class=\"btn btn-outline-primary btn-sm\" [routerLink]=\"['/workspace/create']\">\r\n                          Nuevo Espacio de Trabajo\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row justify-content-center\">\r\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z1\">\r\n                    <ng-container matColumnDef=\"title\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Título </th>\r\n                        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"description\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripción </th>\r\n                        <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"creationMoment\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de creación </th>\r\n                        <td mat-cell *matCellDef=\"let element\"> {{element.creationMoment | date:'medium'}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"users\">\r\n\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Miembros </th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"d-flex flex-row bd-highlight\">\r\n                            <div *ngFor=\"let user of element.users;\">\r\n                                <div class=\"p-2 bd-highlight\">\r\n                                    <img src=\"{{user.photo}}\" class=\"border rounded-circle\" style=\"width: 40px;\" alt=\"\">\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row [routerLink]=\"['/workspace', row.id]\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                </table>\r\n            </div>\r\n            <div class=\"row justify-content-center\">\r\n                <mat-paginator class=\"col-auto\" [length]=\"totalWorkspaces\" [pageSize]=\"workspacesPerPage\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"onChangedPage($event)\" *ngIf=\"workspaces.length > 0\"></mat-paginator>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\" info-text mat-body-1 \" *ngIf=\"workspaces.length <=0 && !isLoading \">No se han añadido espacios de trabajo aún!</p>","import { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n// import { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ErrorInterceptor } from './error-interceptor';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthInterceptor } from './pages/auth/auth-interceptor';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localEs from '@angular/common/locales/es';\r\n\r\n// import { SocketioService } from './services/socketio.service';\r\nregisterLocaleData(localEs);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ErrorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    PagesModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    {\r\n      provide: LOCALE_ID,\r\n      useValue: 'es'\r\n    },\r\n\r\n    ],\r\n    //SocketioService\r\n\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"row complete-height\">\r\n    <div class=\"col-3\">\r\n    </div>\r\n    <div class=\"col-5\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n\r\n        <div class=\"container mt-4\">\r\n            <div class=\"row mt-4\" *ngIf=\"!isLoading\">\r\n                <div class=\"col-6\">\r\n                    <h2>Runner</h2>{{selectedTestIDs}}\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-end\">\r\n                    <div *ngIf=\"selectedTestIDs.size>0\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" *ngIf=\"!inExecution\" (click)=\"onExecute()\">\r\n                          <i class=\"fas fa-play\"></i> Ejecutar\r\n                        </button>\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" *ngIf=\"inExecution\">\r\n                          <!-- <i class=\"fas fa-play\"></i> -->\r\n                          Stop<i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col-6\">\r\n                    <h2 class=\"mb-0\">Orden de Ejecución</h2>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-end\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"selectAllTests\" (change)=\"onSelectAll($event)\" [checked]=\"selectedTestIDs.size === tests.length\">\r\n                        <label class=\"form-check-label\" for=\"selectAllTests\">\r\n                                Seleccionar Todos\r\n                            </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"container overflow-auto my-scrollbar\">\r\n                        <div class=\"row pt-2\" *ngFor=\"let test of tests\">\r\n                            <div class=\"col-8 pt-2 pb-1\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"datafileCheck\" value=\"{{test.id}}\" (change)=\"onTestPicked($event)\" [checked]=\"checkTest(test.id)\">\r\n                                    <label class=\"form-check-label\" for=\"datafileCheck\">\r\n                                        {{test.title}} ({{test.datafileTitle}})\r\n                                    </label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col d-flex justify-content-start\">\r\n                    <h2 class=\"mb-0\">Terminal</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"container overflow-auto my-scrollbar-terminal\">\r\n                        <div *ngFor=\"let line of terminal\">\r\n                            {{line}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"container mt-4 ps-0\">\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                    <h2>Stats</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col-4 pe-0\">\r\n                    <h2>Pruebas</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1 pe-2\">\r\n                <div class=\"col p-0\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row p-2 border-header\">\r\n                            <div class=\"col-3 d-flex justify-content-start\">\r\n                                <div>Título</div>\r\n                            </div>\r\n                            <div class=\"col-2 d-flex justify-content-center\">\r\n                                <div>Estado</div>\r\n                            </div>\r\n                            <div class=\"col-2 d-flex justify-content-center\">\r\n                                <div>Errores</div>\r\n                            </div>\r\n                            <div class=\"col-3 d-flex justify-content-center\">\r\n                                <div>Fecha</div>\r\n                            </div>\r\n                            <div class=\"col-2 d-flex justify-content-center\">\r\n                                <div>Acciones</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-0 p-2 border-content\">\r\n                            <div class=\"col\">\r\n                                <div class=\"row mt-1 mb-1\" *ngFor=\"let test of tests\">\r\n                                    <div class=\"col-3 d-flex justify-content-start\">\r\n                                        <p>{{test.title}}</p>\r\n                                    </div>\r\n                                    <div class=\"col-2 d-flex justify-content-center\">\r\n                                        <div>{{test.status}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-2 d-flex justify-content-center\">\r\n                                        <div *ngIf=\"test.totalErrors\">{{test.totalErrors}}</div>\r\n                                        <div *ngIf=\"!test.totalErrors\">NA</div>\r\n                                    </div>\r\n                                    <div class=\"col-3 d-flex justify-content-center\">\r\n                                        <div>{{test.executionMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-2 d-flex justify-content-center\">\r\n                                        <div *ngIf=\"test.totalErrors && test.totalErrors>0\">\r\n                                            <button class=\"btn btn-outline-light btn-sm\" type=\"button\">\r\n                                              <i class=\"fas fa-download\" (click)=\"onDownload(test.id)\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { TestsService } from 'src/app/services/tests.service';\r\nimport { ReportsService } from '../../../services/reports.service';\r\nimport { CollectionsService } from '../../../services/collections.service';\r\nimport { WorkspacesService } from '../../../services/workspaces.service';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\nimport { Test } from 'src/app/models/test.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-test-execute',\r\n  templateUrl: './test-execute.component.html',\r\n  styleUrls: ['./test-execute.component.css']\r\n})\r\nexport class TestExecuteComponent implements OnInit, OnDestroy {\r\n  userIsAuthenticated    : boolean = false;\r\n  userId                 : string;\r\n  isLoading              : boolean = false;\r\n  workspaceId            : string;\r\n  workspace              : Workspace;\r\n  testId                 : string;\r\n  selectedTest           : Test;\r\n  selectedTestIDs        : Set<string> = new Set();\r\n  tests                  : any[];\r\n  inExecution            : boolean = false;\r\n  terminal               : any[] = [];\r\n  private authStatusSub  : Subscription;\r\n  private testsSub       : Subscription;\r\n\r\n  constructor(private authService: AuthService, public testsService: TestsService, public collectionsService: CollectionsService, \r\n              public route: ActivatedRoute, public workspacesService: WorkspacesService, public reportsService: ReportsService){\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.isLoading = true;\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.workspaceId = paramMap.get('workspaceId');\r\n      if (paramMap.get('testId')) {\r\n        this.testId = paramMap.get('testId');\r\n        this.selectedTestIDs.add(this.testId);     \r\n      }\r\n      // Tests\r\n      this.testsService.getTests(this.workspaceId);\r\n      this.testsSub = this.testsService.getTestUpdateListener()\r\n        .subscribe( (testData: {tests: any[]}) => {\r\n          this.isLoading = false;\r\n          this.tests = testData.tests;\r\n        });\r\n    });\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n    this.testsSub.unsubscribe();\r\n  }\r\n\r\n  onTestPicked(event: Event) {\r\n    const testId: string = (event.target as HTMLInputElement).value;\r\n    const checked: boolean = (event.target as HTMLInputElement).checked;\r\n    // const index: number = this.selectedTestIDs.indexOf(testId);\r\n    if (checked) {\r\n    // if (checked && index < 0) {\r\n      this.selectedTestIDs.add(testId);\r\n    } else if (!checked) {\r\n    //} else if (!checked && index >= 0) {\r\n      this.selectedTestIDs.delete(testId);\r\n    }\r\n    console.log(this.selectedTestIDs)\r\n  }\r\n\r\n  onSelectAll(event: Event) {\r\n    const checked: boolean = (event.target as HTMLInputElement).checked;\r\n    if (checked) {\r\n      console.log(\"Select All\")\r\n      for (var test of this.tests){\r\n        this.selectedTestIDs.add(test.id);\r\n      }\r\n      console.log(this.selectedTestIDs)\r\n    }\r\n    if (!checked) {\r\n      console.log(\"Deselect All\")\r\n      this.selectedTestIDs = new Set();\r\n      console.log(this.selectedTestIDs)\r\n    }\r\n    console.log(this.selectedTestIDs)\r\n\r\n  }\r\n\r\n  checkTest(testId: string){\r\n    return this.selectedTestIDs.has(testId);\r\n  }\r\n  \r\n  onDownload(testId: string) {\r\n    this.testsService.getTest(testId).subscribe( testData => {\r\n      \r\n      var reportPath: string = testData.test.reportPath;\r\n      var fileNameSplits = reportPath.split(\"/\");\r\n      var fileName = fileNameSplits[2].split(\".\");\r\n      const blob = new Blob([testData.reportContent], {type: 'text/csv' })\r\n      saveAs(blob, fileName[0]);\r\n\r\n    })\r\n  }\r\n\r\n  onExecute(){\r\n    if(this.selectedTestIDs.size===0){\r\n      return;\r\n    }\r\n      this.inExecution = true;\r\n      for (var selectedTestId of this.selectedTestIDs){\r\n        console.log(selectedTestId)\r\n        this.reportsService.addReport(selectedTestId).subscribe(async responseData => {\r\n          console.log(responseData)\r\n          const testUpdate: Test = {\r\n            id: responseData.testUpdates._id,\r\n            title: responseData.testUpdates.title,\r\n            reportPath: responseData.testUpdates.reportPath,\r\n            status: responseData.testUpdates.status,\r\n            esquema: responseData.testUpdates.esquema,\r\n            configurations: responseData.testUpdates.configurations,\r\n            creationMoment: responseData.testUpdates.creationMoment,\r\n            updateMoment: responseData.testUpdates.updateMoment,\r\n            executionMoment: responseData.testUpdates.executionMoment,\r\n            totalErrors: responseData.testUpdates.totalErrors,\r\n            executable: responseData.testUpdates.executable,\r\n            datafile: responseData.testUpdates.datafile,\r\n          };\r\n          this.testsService.updateTest(testUpdate).then(data=>{\r\n            console.log(data);\r\n            this.inExecution = false;\r\n          })\r\n          .catch(err=>{\r\n            console.log(err)\r\n            this.inExecution = false;\r\n          });\r\n     \r\n        });\r\n      }\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from \"@angular/router\";\r\nimport { User } from \"src/app/models/user.model\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { WorkspacesService } from \"src/app/services/workspaces.service\";\r\nimport { UsersService } from '../../../services/users.service';\r\n\r\n@Component({\r\n    selector: 'app-profile-account--edit',\r\n    templateUrl: './profile-account-edit.component.html',\r\n    styleUrls: ['./profile-account-edit.component.css']\r\n  })\r\n  export class ProfileAccountEditComponent implements OnInit{\r\n    isLoading : boolean = false;\r\n    user      : User;\r\n    emailForm : FormGroup;\r\n    passForm  : FormGroup;\r\n\r\n    constructor(public authService: AuthService, public usersService: UsersService, public route: ActivatedRoute, \r\n                public workspacesService: WorkspacesService, private router: Router, private formBuilder: FormBuilder) {\r\n                  this.createEmailForm();\r\n                  this.createPassForm();\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.isLoading = true;\r\n      this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n        const userId = paramMap.get('userId');\r\n        this.isLoading = true;\r\n        this.usersService.getUser(userId).subscribe(userData => {\r\n          this.user = {\r\n            id: userData.user._id,\r\n            username: userData.user.username,\r\n            email: userData.user.email,\r\n            password: userData.user.password,\r\n            photo: userData.user.photo,\r\n            name: userData.user.name,\r\n            role: userData.user.role,\r\n            status: userData.user.status,\r\n            google: userData.user.google\r\n          };\r\n          this.emailForm.reset({\r\n            email: this.user.email\r\n          });\r\n          this.isLoading = false;\r\n        });\r\n\r\n    });    \r\n  }\r\n\r\n  createEmailForm() {\r\n    this.emailForm = this.formBuilder.group({\r\n      email : ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9._]+\\.[a-z]{2,3}$')]],\r\n    });\r\n  }\r\n\r\n  createPassForm() {\r\n    this.passForm = this.formBuilder.group({\r\n    actualPass : ['', [Validators.required, Validators.minLength(4)]],\r\n    newPass : ['', [Validators.required, Validators.minLength(4)]],\r\n    repeatPass : ['', [Validators.required, Validators.minLength(4)]]\r\n    });\r\n  }\r\n\r\n  get pristineEmail() {\r\n    return this.emailForm.get('email').pristine;\r\n  }\r\n\r\n  get invalidEmail() {\r\n    return this.emailForm.get('email').invalid && this.emailForm.get('email').touched;\r\n  }\r\n\r\n  get pristinePass() {\r\n    return this.passForm.get('actualPass').pristine && this.passForm.get('actualPass').pristine && this.passForm.get('actualPass').pristine;\r\n  }\r\n\r\n  get invalidActualPass() {\r\n    return this.passForm.get('actualPass').invalid && this.passForm.get('actualPass').touched;\r\n  }\r\n\r\n  get invalidNewPass() {\r\n    return this.passForm.get('newPass').invalid && this.passForm.get('newPass').touched;\r\n  }\r\n\r\n  get invalidRepeatPass() {\r\n    return this.passForm.get('repeatPass').invalid && this.passForm.get('repeatPass').touched;\r\n  }\r\n\r\n  onCancelEmailForm() {\r\n    this.emailForm.reset({\r\n      email: this.user.email\r\n    });\r\n  }\r\n\r\n  onCancelPassForm() {\r\n    this.passForm.reset();\r\n  }\r\n\r\n  onSaveEmail() {\r\n    if (this.emailForm.invalid){\r\n      return Object.values(this.emailForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.isLoading = true;\r\n    const values = this.emailForm.getRawValue();\r\n    this.usersService.updateUser(this.user.id, null, null,  values.email, this.user.role, null, null, null);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/account/${this.user.id}/edit`]);\r\n    }).catch( err => {\r\n      console.log(\"Error on onSaveEmail method: \"+err);\r\n    });\r\n    this.isLoading = false;\r\n  }\r\n\r\n  async onSavePass() {\r\n    if (this.passForm.invalid){\r\n      return Object.values(this.passForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.isLoading = true;\r\n    const values = this.passForm.getRawValue();\r\n    await this.usersService.updateUser(this.user.id, null, null, null, this.user.role, values.actualPass, values.newPass, values.repeatPass);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/account/${this.user.id}/edit`]);\r\n    }).catch( err => {\r\n      console.log(\"Error on onSavePass method: \"+err);\r\n    });\r\n    this.isLoading = false;\r\n  }\r\n\r\n  onDeleteAccount(userId: string) {\r\n    this.usersService.deleteAccount(userId)\r\n    .then(res => {\r\n      this.authService.logout();\r\n      window.location.reload();\r\n\r\n    }).catch( err => {\r\n      console.log(\"Error on onDeleteAccount method: \"+err);\r\n    });\r\n    \r\n  }\r\n\r\n}","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<div class=\"container mt-5\" *ngIf=\"!isLoading\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-9 col-auto \">\r\n            <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                    <div class=\"row d-grid gap-2\">\r\n                        <a type=\"button\" class=\"btn btn-outline-secondary\" routerLink=\"/profile/{{user.id}}/edit\">Editar Perfil</a>\r\n                        <a type=\"button\" class=\"btn btn-outline-secondary active\" routerLink=\"/account/{{user.id}}/edit\">Configuración de la cuenta</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-8 ps-4\">\r\n                    <h1>Editar Cuenta</h1>\r\n\r\n                    <form [formGroup]=\"emailForm\" (ngSubmit)=\"onSaveEmail()\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"FormEmail\" class=\"form-label\">Correo</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"FormEmail\" formControlName=\"email\" [class.is-invalid]=\"invalidEmail\" placeholder=\"Correo\">\r\n                            <mat-error>\r\n                                <small *ngIf=\"invalidEmail\" class=\"text-danger\">\r\n                          Ingrese un correo válido.\r\n                        </small>\r\n                            </mat-error>\r\n                        </div>\r\n\r\n                        <button class=\"btn btn-primary me-1 mt-2\" type=\"submit\">Actualizar Correo</button>\r\n                        <button class=\"btn btn-secondary me-1 mt-2\" (click)=\"onCancelEmailForm()\" [disabled]=\"pristineEmail\">Cancelar</button>\r\n                    </form>\r\n\r\n                    <form [formGroup]=\"passForm\" (ngSubmit)=\"onSavePass()\">\r\n                        <div class=\"mb-3 mt-4\">\r\n                            <label for=\"FormPassword\" class=\"form-label\">Contraseña Actual</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"FormPassword\" formControlName=\"actualPass\" [class.is-invalid]=\"invalidActualPass\" placeholder=\"Contraseña Actual\">\r\n                            <mat-error>\r\n                                <small *ngIf=\"invalidActualPass\" class=\"text-danger\">\r\n                          Ingrese una contraseña válida.\r\n                        </small>\r\n                            </mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"FormPasswordNew\" class=\"form-label\">Nueva Contraseña</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"FormPasswordNew\" formControlName=\"newPass\" [class.is-invalid]=\"invalidNewPass\" placeholder=\"Nueva Contraseña\">\r\n                            <mat-error>\r\n                                <small *ngIf=\"invalidNewPass\" class=\"text-danger\">\r\n                          Ingrese una contraseña válida.\r\n                        </small>\r\n                            </mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"FormPasswordRepeat\" class=\"form-label\">Repetir Contraseña</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"FormPasswordRepeat\" formControlName=\"repeatPass\" [class.is-invalid]=\"invalidRepeatPass\" placeholder=\"Repetir Contraseña\">\r\n                            <mat-error>\r\n                                <small *ngIf=\"invalidRepeatPass\" class=\"text-danger\">\r\n                          Ingrese una contraseña válida.\r\n                        </small>\r\n                            </mat-error>\r\n                        </div>\r\n\r\n                        <button class=\"btn btn-primary me-1 mt-2\" type=\"submit\">Actualizar Contraseña</button>\r\n                        <button class=\"btn btn-secondary me-1 mt-2\" (click)=\"onCancelPassForm()\" [disabled]=\"pristinePass\">Cancelar</button>\r\n\r\n                    </form>\r\n                    <button type=\"button\" class=\"btn btn-outline-danger mt-4\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteAccountModal\">Eliminar cuenta</button>\r\n\r\n                    <div class=\"modal fade\" id=\"deleteAccountModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog modal-dialog-centered\">\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n                                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    ¿Estás seguro de que deseas eliminar tu cuenta?\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"onDeleteAccount(user.id)\">Sí, seguro.</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"row mt-2\">\r\n    <div class=\"col\">\r\n        <h2>Actividad</h2>\r\n        <div class=\"my-custom-scrollbar\">\r\n            <div class=\"list-group\" *ngFor=\"let activity of activities\">\r\n                <div class=\"list-group-item\" aria-current=\"true\">\r\n                    <div class=\"d-flex w-100 justify-content-end\">\r\n                        <small>{{activity.creationMoment | date }}</small>\r\n                    </div>\r\n                    <p class=\"mb-1\" [innerHTML]=\"activity.message\"></p>\r\n                    <small>{{activity.creationMoment | date:'mediumTime'}}</small>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Activity } from 'src/app/models/activity.model';\r\nimport { ActivitiesService } from 'src/app/services/activities.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-activity-list',\r\n  templateUrl: './activity-list.component.html',\r\n  styleUrls: ['./activity-list.component.css']\r\n})\r\nexport class ActivityListComponent implements OnInit, OnDestroy{\r\n  userId                : string;\r\n  userIsAuthenticated   : boolean = false;\r\n  activities            : Activity[];\r\n  private activitiesSub : Subscription;                                    \r\n  \r\n  constructor(private authService: AuthService, public activitiesService: ActivitiesService){\r\n                \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.userId = this.authService.getUserId();\r\n    this.activitiesService.getActivities(this.userId);\r\n    this.activitiesSub = this.activitiesService.getActivityUpdateListener()\r\n    .subscribe((activityData: {activities: Activity[]}) => {\r\n      this.activities = activityData.activities;\r\n      for (var activity of this.activities){\r\n        var workspaceLink :string = '<a href=\"/workspace/'+activity.workspace['id']+'\">'+activity.workspace['title']+'</a>'\r\n        activity.message = activity.message.replace(\"{{workspace}}\",workspaceLink);\r\n        \r\n        activity.message = activity.message.replace(\"{{author}}\",activity.author['name']);\r\n        if (activity.coleccion){\r\n          var coleccionLink :string = '<a href=\"/workspace/'+activity.workspace['id']+'\">'+activity.coleccion['title']+'</a>'\r\n          activity.message = activity.message.replace(\"{{coleccion}}\",coleccionLink);\r\n        } \r\n        if (activity.datafile) {\r\n          var datafileLink :string = '<a href=\"/workspace/'+activity.workspace['id']+'/datafile/'+activity.datafile['id']+'\">'+activity.datafile['title']+'</a>'\r\n          activity.message = activity.message.replace(\"{{datafile}}\",datafileLink);\r\n        \r\n        }       \r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.activitiesSub.unsubscribe();\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EsquemaForm } from '../models/esquemaForm.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/esquemas/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EsquemaService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getEsquema(esquemaId: string) {\r\n    // \r\n    return this.http.get<{message:string, esquema: any, content: any}>(BACKEND_URL + esquemaId);\r\n  }\r\n\r\n  addEsquema(title: string, esquemaContent: string, fileName: string, datafileId: string, workspaceId:string){\r\n    let res: any;\r\n    let newFileName: string;\r\n    let esquemaData: EsquemaForm = {\r\n      'id': null,\r\n      'title': title, \r\n      'contentPath': null, \r\n      'creationMoment':null,\r\n      'datafile':datafileId,\r\n      'esquemaContent': esquemaContent\r\n    };\r\n    \r\n    if (fileName){//Manual creation\r\n      const split = fileName.split('.');\r\n      const extension = '.' + split[1].toLowerCase();\r\n      newFileName = split[0].toLowerCase().split(' ').join('_') + \"-\" + Date.now() + extension;\r\n      const localPath = 'backend/uploads/esquemas/' + newFileName;            \r\n      esquemaData.contentPath = localPath;\r\n    } else {//Inferring\r\n      esquemaData.title = \"Inferred esquema - \" + title;\r\n    }\r\n\r\n    this.http.post<{message: string, esquema: any}>(\r\n        BACKEND_URL,\r\n        esquemaData\r\n      )\r\n      .subscribe( responseData => {\r\n          res = responseData;\r\n      });\r\n\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          if (res === undefined) {\r\n            reject('Creating an esquema failed!');\r\n          } else {\r\n            resolve('Esquema added successfully!');\r\n          }\r\n        }, 2000);\r\n      });\r\n    }\r\n\r\n  updateEsquema(esquemaId: string, title: string, contentPath: string, esquemaContent: string, datafileId: string) {\r\n    let res;\r\n    const esquemaData: EsquemaForm = {\r\n      'id': esquemaId,\r\n      'title': title, \r\n      'contentPath': contentPath, \r\n      'creationMoment': null,\r\n      'datafile': datafileId,\r\n      'esquemaContent': esquemaContent\r\n    };\r\n    \r\n    this.http.put<{message: string, esquema: any}>(BACKEND_URL + esquemaId, esquemaData).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating an esquema failed!');\r\n        } else {\r\n          resolve('Esquema updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  deleteEsquema(id: string){\r\n    let res;\r\n    this.http.delete<{message: string}>(BACKEND_URL +  id).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting an esquema failed!');\r\n        } else {\r\n          resolve('Esquema deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { WorkspaceListComponent } from './workspaces/workspace-list/workspace-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { InvitationListComponent } from './invitations/invitation-list/invitation-list.component';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { WorkspaceCreateComponent } from './workspaces/workspace-create/workspace-create.component';\r\nimport { WorkspaceDetailsComponent } from './workspaces/workspace-details/workspace-details.component';\r\nimport { DatafileDetailsComponent } from './datafiles/datafile-details/datafile-details.component';\r\nimport { TestDetailsComponent } from './tests/test-details/test-details.component';\r\nimport { TestExecuteComponent } from './tests/test-execute/test-execute.component';\r\nimport { ProfileDetailsComponent } from './profile/profile-details/profile-details.component';\r\nimport { ProfileEditComponent } from './profile/profile-edit/profile-edit.component';\r\nimport { ProfileAccountEditComponent } from './profile/profile-account-edit/profile-account-edit.component';\r\nimport { ConfigurationComponent } from './configuration/configuration.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    WorkspaceDetailsComponent,\r\n    WorkspaceListComponent,\r\n    WorkspaceCreateComponent,\r\n    InvitationListComponent,\r\n    DatafileDetailsComponent,\r\n    TestDetailsComponent,\r\n    TestExecuteComponent,\r\n    ProfileDetailsComponent,\r\n    ProfileEditComponent,\r\n    ProfileAccountEditComponent,\r\n    ConfigurationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule,\r\n    ComponentsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Datafile } from '../models/datafile.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/datafiles/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DatafileService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getDatafile(datafileId: string) {\r\n    // \r\n    return this.http.get<{message: string, datafile: any, content: string, esquemas: any[], configurations: any[], tests: any[]}>(BACKEND_URL + datafileId)\r\n    .pipe(map( (datafileData) => {\r\n      return { \r\n        datafile: datafileData.datafile,         \r\n        content: datafileData.content,\r\n        esquemas: datafileData.esquemas.map( esquema => {\r\n          return {\r\n            id: esquema._id,\r\n            title: esquema.title,\r\n            contentPath: esquema.contentPath,\r\n            creationMoment: esquema.creationMoment,\r\n            datafile: esquema.datafile,\r\n          };\r\n        }),\r\n        configurations: datafileData.configurations.map( configuration => {\r\n          return {\r\n            id: configuration._id,\r\n            title: configuration.title,\r\n            creationMoment: configuration.creationMoment,\r\n            errorCode: configuration.errorCode,\r\n            extraParams: configuration.extraParams,\r\n            datafile: configuration.datafile,\r\n          };\r\n        }),\r\n        tests: datafileData.tests.map( test => {\r\n          return {\r\n            id: test._id,\r\n            title: test.title,\r\n            reportPath: test.reportPath,\r\n            status: test.status,\r\n            esquema: test.esquema,\r\n            configurations: test.configurations,\r\n            creationMoment: test.creationMoment,\r\n            updateMoment: test.updateMoment,\r\n            executionMoment: test.executionMoment,\r\n            totalErrors: test.totalErrors,\r\n            executable: test.executable,\r\n            datafile: test.datafile\r\n          };\r\n        })\r\n      };\r\n    }));\r\n  }\r\n\r\n  addDatafile( title: string, description: string, collectionId: string, workspaceId: string) {\r\n    let res;\r\n    const datafileData: Datafile = {\r\n      'id': null,\r\n      'title': title, \r\n      'description': description, \r\n      'contentPath': null, \r\n      'errLimit': null,\r\n      'delimiter': null,\r\n      'coleccion': collectionId, \r\n      'workspace': workspaceId\r\n    };\r\n    this.http.post<{message: string, datafile: any}>(\r\n        BACKEND_URL,\r\n        datafileData\r\n      )\r\n      .subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Creating a datafile failed!');\r\n        } else {\r\n          resolve('Datafile added successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n      \r\n  updateDatafile(datafileId: string, title: string, description: string) {\r\n    let res;\r\n    const datafileData: Datafile = {\r\n      'id':datafileId,\r\n      'title': title, \r\n      'description': description, \r\n      'contentPath': null, \r\n      'errLimit': null,\r\n      'delimiter': null,\r\n      'coleccion': null, \r\n      'workspace': null\r\n    };\r\n\r\n    this.http.put<{message: string, datafile: any}>(BACKEND_URL + datafileId, datafileData).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating a datafile failed!');\r\n        } else {\r\n          resolve('Datafile updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n  \r\n  deleteDatafile(datafileId: string) {\r\n    let res;\r\n    this.http.delete<{message: string}>(BACKEND_URL +  datafileId).subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting a datafile failed!');\r\n        } else {\r\n          resolve('Datafile deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CollectionsService } from 'src/app/services/collections.service';\r\n\r\n@Component({\r\n  selector: 'app-collection-create',\r\n  templateUrl: './collection-create.component.html',\r\n})\r\nexport class CollectionCreateComponent implements OnInit, OnDestroy{\r\n  collectionForm: FormGroup;\r\n  isLoading = false;\r\n  invalidTitle = false;\r\n  workspaceId;\r\n  @Input() editMode;\r\n  @Output() editModeChange = new EventEmitter();\r\n  @Input()  close;\r\n  @Output() closeChange = new EventEmitter();\r\n  @Input()  collectionIndex;\r\n  @Output() collectionIndexChange = new EventEmitter();\r\n\r\n  @Input()  editCollection;\r\n\r\n\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public collectionsService: CollectionsService, public authService: AuthService, private formBuilder: FormBuilder,\r\n              private router: Router, private activatedRoute: ActivatedRoute) {\r\n      this.createForm();\r\n}\r\n\r\n  createForm() {\r\n    this.collectionForm = this.formBuilder.group({\r\n    title : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe( authStatus => {\r\n    // this.isLoading = false;\r\n    });\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n    this.workspaceId = params.get('workspaceId');\r\n\r\n    });\r\n    if (this.editCollection) {\r\n      this.editMode = true;\r\n      this.collectionForm.reset({\r\n        title: this.editCollection.title\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.collectionForm.invalid){\r\n      this.invalidTitle = true;\r\n      return Object.values(this.collectionForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n  }\r\n    this.isLoading = true;\r\n    const values = this.collectionForm.getRawValue();\r\n\r\n    if (this.editMode) {\r\n      await this.collectionsService.updateCollection(this.editCollection.id, values.title, this.workspaceId);\r\n    } else {\r\n      await this.collectionsService.addCollection(values.title, this.workspaceId);\r\n    }\r\n    this.collectionForm.reset();\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}`]);\r\n      }).catch( err => {});\r\n    this.isLoading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.collectionForm.reset();\r\n    if (this.editMode) {\r\n      this.editModeChange.emit(false);\r\n      this.collectionIndexChange.emit(undefined);\r\n    } else {\r\n        this.closeChange.emit(true);\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"collectionForm\" (ngSubmit)=\"onSave()\" class=\"col mb-2\">\r\n    <div class=\"row\">\r\n        <mat-error>\r\n            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n              Ingrese un título adecuado\r\n            </small>\r\n        </mat-error>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"input-group input-group-sm\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Introduce un título...\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n            <a class=\"btn btn-outline-secondary btn-sm\" (click)=\"onCancel()\" *ngIf=\"!isLoading\">\r\n                <i class=\"fas fa-times\"></i>\r\n            </a>\r\n            <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\" disabled *ngIf=\"isLoading\">\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n</form>\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { EsquemaService } from 'src/app/services/esquemas.service';\r\nimport { Esquema } from '../../../models/esquema.model';\r\n\r\n@Component({\r\n  selector: 'app-esquema-create',\r\n  templateUrl: './esquema-create.component.html',\r\n  styleUrls: ['./esquema-create.component.css']\r\n})\r\nexport class EsquemaCreateComponent implements OnInit, OnDestroy{\r\n  userId                   : string;\r\n  userIsAuthenticated      : boolean = false;\r\n  invalidFile              : boolean = false;\r\n  invalidExtension         : boolean = false;\r\n  file                     : any = null;\r\n  chain                    : string = '';\r\n  @Input() esquemaForm     : FormGroup;\r\n  @Input() workspaceId     : string;\r\n  @Input() datafileId      : string;\r\n  @Input() savefile        : any;\r\n  @Input() esquema         : Esquema;\r\n  @Output() savefileChange : EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() esquemaChange  : EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n  private authStatusSub    : Subscription;\r\n\r\n  constructor(public esquemaService: EsquemaService, public route: ActivatedRoute, private papa: Papa,\r\n              private usersService: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.esquemaForm.get('title').invalid && this.esquemaForm.get('title').touched;\r\n  }\r\n\r\n  get invalidEsquemaPath() {\r\n    return this.esquemaForm.get('esquemaPath').invalid && this.esquemaForm.get('esquemaPath').dirty;\r\n  }\r\n\r\n\r\n// File upload function\r\nasync onFilePicked(event: Event) {\r\n  const files = (event.target as HTMLInputElement).files;\r\n  if (files && files.length > 0) {\r\n    const uploadedFile = (event.target as HTMLInputElement).files[0];\r\n    const split = uploadedFile.name.split('.');\r\n    const extension = split[1].toLowerCase();\r\n    if (extension !== 'json' && extension !== 'yaml') {\r\n      this.invalidExtension = true;\r\n      return;\r\n    } else {\r\n      this.esquemaForm.get('esquemaContent').enable();\r\n      this.invalidExtension = false;\r\n    }\r\n    this.file = uploadedFile;\r\n\r\n    this.papa.parse(uploadedFile, {\r\n      complete(results) {\r\n        let chain = '';\r\n        for (const data of results.data){\r\n            chain = chain + data + '\\n';\r\n        }\r\n        (document.getElementById('esquemaContent') as HTMLInputElement).value = chain;\r\n        // this.esquemaForm.updateValueAndValidity();\r\n      }\r\n    });\r\n  }}\r\n\r\n  async onSave() {\r\n    if (this.esquema) {\r\n      if (this.esquemaForm.get('title').invalid) {\r\n        this.esquemaForm.get('title').markAsTouched();\r\n        return;\r\n      }\r\n    } else {\r\n      const content = (document.getElementById('esquemaContent') as HTMLInputElement).value;\r\n      this.esquemaForm.patchValue({esquemaContent: content});\r\n      if (this.esquemaForm.invalid){\r\n        if (this.esquemaForm.get('esquemaPath').invalid) {\r\n          this.invalidFile = true;\r\n          this.esquemaForm.get('esquemaPath').markAsDirty();\r\n        }\r\n        return Object.values(this.esquemaForm.controls).forEach(control => {\r\n          if (control instanceof FormGroup) {\r\n            \r\n            Object.values(control.controls).forEach( control => control.markAsTouched());\r\n          } else {\r\n            control.markAsTouched();\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.savefileChange.emit(true);\r\n    const values = this.esquemaForm.getRawValue();\r\n    if (this.esquema) {\r\n      await this.esquemaService.updateEsquema(this.esquema.id, values.title, this.esquema.contentPath, values.esquemaContent, this.datafileId);\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n        .then(() => {\r\n          this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n        }).catch( err => {});\r\n    } else {\r\n      this.esquemaService.addEsquema(values.title, values.esquemaContent, this.file.name, this.datafileId, this.workspaceId)\r\n      .then(response => {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true})\r\n        .then(() => {\r\n          this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n        })\r\n        .catch( err => {\r\n         console.log(\"Error on onSave method: \"+ err);\r\n        });\r\n      })\r\n      .catch(error => {\r\n         console.log(\"Error on onSave method: \"+error);\r\n      });\r\n    }\r\n    (document.getElementById('esquemaContent') as HTMLInputElement).value = '';\r\n    this.esquemaForm.reset();\r\n    this.esquemaChange.emit(null);\r\n    this.savefileChange.emit(false);\r\n\r\n  }\r\n\r\n  onCancel() {\r\n    this.esquemaForm.reset();\r\n    this.esquemaChange.emit(null);\r\n    if (!this.esquema) {\r\n      (document.getElementById('esquemaContent') as HTMLInputElement).value = '';\r\n    }\r\n    this.esquemaForm.patchValue({esquemaPath: null});\r\n    this.invalidFile = false;\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title mb-0\" id=\"exampleModalLabel\">Añadir Esquema</h2>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"onCancel()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"esquemaForm\" (ngSubmit)=\"onSave()\">\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"file\" class=\"form-control form-control-sm mb-2\" formControlName=\"esquemaPath\" [class.is-invalid]=\"invalidEsquemaPath\" (change)=\"onFilePicked($event)\" *ngIf=\"!esquema\">\r\n                        <div class=\"form-floating\">\r\n                            <textarea *ngIf=\"!esquema\" id=\"esquemaContent\" class=\"form-control pt-0\" style=\"height: 400px\" [class.is-invalid]=\"invalidEsquemaPath\"></textarea>\r\n\r\n                            <textarea *ngIf=\"esquema\" formControlName=\"esquemaContent\" class=\"form-control pt-0\" style=\"height: 400px\" [class.is-invalid]=\"invalidEsquemaPath\"></textarea>\r\n\r\n                            <label class=\"pt-1\" for=\"floatingTextarea2\"></label>\r\n                            <mat-error>\r\n                                <small *ngIf=\"invalidFile\" class=\"text-danger\">\r\n                                  Ingrese un esquema.\r\n                                </small>\r\n                                <small *ngIf=\"invalidExtension\" class=\"text-danger\">\r\n                                  Ingrese un esquema con el formato adecuado (.json o .yaml).\r\n                                </small>\r\n                            </mat-error>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"onCancel()\">Cancelar</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"(!esquemaForm.valid || invalidExtension) && !esquema\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"esquema\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Guardar cambios</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"esquemaForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { ConfigurationService } from 'src/app/services/configuration.service';\r\nimport { Configuration } from '../../../models/configuration.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-configuration-list',\r\n  templateUrl: './configuration-list.component.html',\r\n  styleUrls: ['./configuration-list.component.css']\r\n})\r\nexport class ConfigurationListComponent implements OnInit, OnDestroy{\r\n  userId                  : string;\r\n  userIsAuthenticated     : boolean = false;\r\n  isDeleting              : boolean = false;\r\n  @Input() datafileId     : string;\r\n  @Input() workspaceId    : string;\r\n  @Input() configurations : Configuration[];\r\n  \r\n  // Para editar\r\n  configurationForm       : FormGroup;\r\n  saveconfigChange        : boolean = false;\r\n  configurationId         : string;\r\n  configuration           : Configuration = null;\r\n  inferring               : boolean = false;\r\n  extraControls           : string[] = [];\r\n  private authStatusSub   : Subscription;\r\n\r\n  constructor(public datafilesService: DatafileService, public route: ActivatedRoute, public usersService: AuthService,\r\n              private router: Router, private configurationsService: ConfigurationService){\r\n    this.configurationForm = new FormGroup({\r\n      'title': new FormControl('', {validators: [Validators.required, Validators.minLength(1), Validators.maxLength(100)]}),\r\n      'errorCode': new FormControl('', {validators: [Validators.required]}),\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    // this.configurationsSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onDelete( configurationId: string ){\r\n    await this.configurationsService.deleteConfiguration(configurationId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {});\r\n  }\r\n\r\n  setExtraParams(newvalue: any) {\r\n    this.extraControls = newvalue;\r\n  }\r\n\r\n  onEdit(configurationId: string) {\r\n    this.configurationsService.getConfiguration(configurationId).subscribe(configurationData => {\r\n      this.configurationId = configurationData.configuration._id;\r\n      this.configuration = {\r\n        id: configurationData.configuration._id,\r\n        title: configurationData.configuration.title,\r\n        creationMoment: configurationData.configuration.creationMoment,\r\n        errorCode: configurationData.configuration.errorCode,\r\n        extraParams: configurationData.configuration.extraParams,\r\n        datafile: configurationData.configuration.datafile,\r\n      }\r\n      // this.configurationForm.get('esquemaContent').enable();\r\n      this.configurationForm.patchValue({title: configurationData.configuration.title,\r\n                                         errorCode: configurationData.configuration.errorCode});\r\n      const extraParamsObj = configurationData.configuration.extraParams;\r\n      Object.keys(extraParamsObj).forEach(extraParam => {\r\n        this.configurationForm.addControl(extraParam, new FormControl('', {validators: [Validators.required]}));\r\n        this.extraControls.push(extraParam);\r\n        this.configurationForm.patchValue(extraParamsObj);\r\n      });\r\n    });\r\n  }\r\n\r\n  // setEsquema(newvalue: any) {\r\n  //   this.esquema = newvalue;\r\n  // }\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row mt-4\">\r\n    <div class=\"col-5\">\r\n        <h2>Configuraciones</h2>\r\n    </div>\r\n    <div class=\"col-7 d-flex justify-content-end\">\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#configuratioModal\" *ngIf=\"!saveconfigChange\">\r\n              Añadir configuración\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" disabled *ngIf=\"saveconfigChange\">\r\n              Añadir configuración\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n            <app-configuration-create [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [configurationId]=\"configurationId\" [configuration]=\"configuration\" [extraControls]=\"extraControls\" [configurationForm]=\"configurationForm\" (configurationChange)=\"setExtraParams($event)\"></app-configuration-create>\r\n        </div>\r\n        <!-- (savefileChange)=\"setSaveMode($event)\" (esquemaChange)=\"setEsquema($event)\"-->\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2 mb-4\">\r\n    <div class=\"col p-0\">\r\n        <div class=\"container\">\r\n            <div class=\"row border-header p-2\">\r\n                <div class=\"col-3 d-flex justify-content-start\">\r\n                    <div>Título</div>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-center\">\r\n                    <div>Fecha de Creación</div>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\">\r\n                    <div>Opciones</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-0 p-2 border-content\">\r\n                <div class=\"col\">\r\n                    <div class=\"row mt-1 mb-1\" *ngFor=\"let configuration of configurations\">\r\n                        <div class=\"col-3 d-flex justify-content-start pt-2 pe-0\">\r\n                            <div>{{configuration.title}}</div>\r\n                        </div>\r\n                        <div class=\"col-6 d-flex justify-content-center pt-2\">\r\n                            <div>{{configuration.creationMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-end pe-4\">\r\n                            <div class=\"dropdown\">\r\n                                <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                              <i class=\"fas fa-ellipsis-h\"></i>\r\n                                            </button>\r\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    <li><a class=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#configuratioModal\" (click)=onEdit(configuration.id)>Editar Configuración</a></li>\r\n                                    <!--  -->\r\n                                    <li><a class=\"dropdown-item danger\" (click)=onDelete(configuration.id)>Eliminar Configuración</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { InvitationCreateComponent } from './invitation/invitation-create/invitation-create.component';\r\nimport { InvitationListComponent } from '../pages/invitations/invitation-list/invitation-list.component';\r\nimport { WorkspaceEditComponent } from './workspace/workspace-edit/workspace-edit.component';\r\nimport { CollectionCreateComponent } from './collection/collection-create/collection-create.component';\r\nimport { DatafileCreateComponent } from './datafile/datafile-create/datafile-create.component';\r\nimport { DatafileEditComponent } from './datafile/datafile-edit/datafile-edit.component';\r\nimport { EsquemaListComponent } from './esquemas/esquema-list/esquema-list.component';\r\nimport { EsquemaCreateComponent } from './esquemas/esquema-create/esquema-create.component';\r\nimport { ConfigurationListComponent } from './configuration/configuration-list/configuration-list.component';\r\nimport { TestListComponent } from './test/test-list/test-list.component';\r\nimport { ConfigurationCreateComponent } from './configuration/configuration-create/configuration-create.component';\r\nimport { TestCreateComponent } from './test/test-create/test-create.component';\r\nimport { ActivityListComponent } from './activity/activity-list/activity-list.component';\r\nimport { CollectionListComponent } from './collection/collection-list/collection-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    InvitationCreateComponent,\r\n    WorkspaceEditComponent,\r\n    CollectionCreateComponent,\r\n    DatafileCreateComponent,\r\n    DatafileEditComponent,\r\n    CollectionListComponent,\r\n    EsquemaListComponent,\r\n    EsquemaCreateComponent,\r\n    ConfigurationListComponent,\r\n    TestListComponent,\r\n    ConfigurationCreateComponent,\r\n    TestCreateComponent,\r\n    ActivityListComponent\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    InvitationCreateComponent,\r\n    WorkspaceEditComponent,\r\n    CollectionCreateComponent,\r\n    DatafileCreateComponent,\r\n    DatafileEditComponent,\r\n    CollectionListComponent,\r\n    EsquemaListComponent,\r\n    EsquemaCreateComponent,\r\n    ConfigurationListComponent,\r\n    TestListComponent,\r\n    ConfigurationCreateComponent,\r\n    TestCreateComponent, \r\n    ActivityListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Collection } from '../models/collection.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/collections/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CollectionsService {\r\n  private collections: any[] = [];\r\n  private collectionsUpdated = new Subject<{collections: any[]}>();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCollectionUpdateListener() {\r\n    return this.collectionsUpdated.asObservable();\r\n  }\r\n\r\n  getCollectionsByWorkspace(workspaceId: string) {\r\n    return this.http.get<{message: string, collections: any[], orphanedDatafiles: any[]}>(BACKEND_URL + workspaceId)\r\n    .pipe(map( (collectionData) => {\r\n      return { \r\n        collections: collectionData.collections\r\n        .map(collection => {\r\n          return {\r\n            id: collection._id,\r\n            title: collection.title,\r\n            datafiles: collection.datafiles\r\n          };\r\n      }),\r\n    };\r\n    }))\r\n    .subscribe((transformedCollectionData) => {\r\n      this.collections = transformedCollectionData.collections;\r\n      this.collectionsUpdated.next({\r\n        collections: [...this.collections]\r\n      });\r\n    });\r\n  }\r\n\r\n  addCollection(title: string, workspaceId: string) {\r\n    let res: any;\r\n    const collection: Collection = { \r\n      'id': null,\r\n      'title': title, \r\n      'workspace': workspaceId \r\n    };\r\n    this.http.post<{message: string, collection: any}>(BACKEND_URL, collection).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Creating a collection failed!');\r\n        } else {\r\n          resolve('Collection added successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  updateCollection(collectionId: string, title: string, workspaceId: string){\r\n    let res: any;\r\n    const collection: Collection = { \r\n      'id': collectionId,\r\n      'title': title, \r\n      'workspace': workspaceId \r\n    };\r\n    this.http.put<{message: string, collection: any}>(BACKEND_URL + collectionId, collection).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating a collection failed!');\r\n        } else {\r\n          resolve('Collection updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n  \r\n  deleteCollection(collectionId: string) {\r\n    let res: any;\r\n    this.http.delete<{message: string}>(BACKEND_URL + collectionId).subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting a collection failed!');\r\n        } else {\r\n          resolve('Collection deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Invitation } from 'src/app/models/invitation.model';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { InvitationService } from '../../../services/invitations.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-invitation-list',\r\n  templateUrl: './invitation-list.component.html',\r\n  styleUrls: ['./invitation-list.component.css']\r\n})\r\nexport class InvitationListComponent implements OnInit, OnDestroy{\r\n  userId                   : string;\r\n  userIsAuthenticated      : boolean = false;\r\n  isLoading                : boolean = false;\r\n  workspaceId              : string;\r\n  invalidEmail             : boolean = false;\r\n  \r\n  displayedColumns         : string[] = ['sender', 'workspace', 'status'];\r\n \r\n  invitations              : Invitation[] = [];\r\n  totalInvitations         : number = 0;\r\n  invitationsPerPage       : number = 2;\r\n  currentPage              : number = 1;\r\n  dataSource               : any = null;\r\n  pageSizeOptions          : number[] = [1, 2, 5, 10];\r\n  private invitationsSub   : Subscription;\r\n  private authStatusSub    : Subscription;\r\n  invitationForm           : FormGroup;\r\n\r\n  @ViewChild(MatSort) sort : MatSort;\r\n\r\n  constructor(public invitationsService: InvitationService, public authService: AuthService, private formBuilder: FormBuilder,\r\n              private activatedRoute: ActivatedRoute, private router: Router) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.invitationForm = this.formBuilder.group({\r\n      email : ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9._]+\\.[a-z]{2,3}$')]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.invitationsService.getInvitations(this.invitationsPerPage, this.currentPage);\r\n    this.userId = this.authService.getUserId();\r\n    \r\n    this.invitationsSub = this.invitationsService.getInvitationUpdateListener()\r\n    .subscribe( (invitationData: {invitations: Invitation[], invitationCount: number, totalInvitations: number}) => {\r\n      this.isLoading = false;\r\n      this.totalInvitations = invitationData.totalInvitations;\r\n      this.invitations = invitationData.invitations;\r\n      this.dataSource = new MatTableDataSource(this.invitations);\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.workspaceId = params.workspaceId;\r\n    });\r\n  }\r\n\r\n  onChangedPage( pageData: PageEvent ) {\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.invitationsPerPage = pageData.pageSize;\r\n    this.invitationsService.getInvitations(this.invitationsPerPage, this.currentPage);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.invitationsSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onInvite() {\r\n    if (this.invitationForm.invalid){\r\n      this.invalidEmail = true;\r\n      return Object.values(this.invitationForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          \r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n\r\n    // this.isLoading = true;\r\n    const values = this.invitationForm.getRawValue();\r\n    this.invitationsService.addInvitation(values.email, this.workspaceId)\r\n    .then(response=>{\r\n      this.router.navigate(['/']);\r\n    })\r\n    .catch(err=>{\r\n      console.log(\"Error on onInvite method: \"+err);\r\n    });\r\n    this.invitationForm.reset();\r\n    // this.isLoading = false;\r\n  }\r\n\r\n  onEditStatus(object, newStatus) {\r\n    this.invitationsService.updateInvitation(object.id, newStatus)\r\n      .then(response=>{\r\n        // this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\r\n        // this.router.navigate(['/invitations']));\r\n        window.location.reload();\r\n\r\n      })\r\n      .catch(err=>{\r\n        console.log(\"Error on onInvite method: \"+err);\r\n      });\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"row d-flex justify-content-center\">\r\n        <div class=\"col-9 col-auto \">\r\n            <div class=\"row\">\r\n                <div class=\"col-8\">\r\n                    <h2>Invitaciones</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row justify-content-center\">\r\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z1\">\r\n\r\n                    <ng-container matColumnDef=\"sender\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Remitente </th>\r\n                        <td mat-cell *matCellDef=\"let element\"> {{element.sender}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"workspace\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Espacio de Trabajo </th>\r\n                        <td mat-cell *matCellDef=\"let element\"> {{element.workspace}} </td>\r\n                    </ng-container>\r\n\r\n                    <!-- <ng-container matColumnDef=\"creationMoment\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de creación </th>\r\n                        <td mat-cell *matCellDef=\"let element\"> Fecha de creación </td>\r\n                    </ng-container> -->\r\n\r\n                    <ng-container matColumnDef=\"status\">\r\n                        <th mat-header-cell *matHeaderCellDef> Estado </th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                            <div *ngIf=\"element.status === 'pending' || element.status === 'seen'\">\r\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-success me-1\" (click)=\"onEditStatus(element,'accepted')\">Aceptar</button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-danger me-1\" (click)=\"onEditStatus(element,'rejected')\">Rechazar</button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" *ngIf=\"element.status === 'pending'\" (click)=\"onEditStatus(element,'seen')\">\r\n                              <i class=\"fas fa-eye\"></i>\r\n                            </button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-light\" *ngIf=\"element.status === 'seen'\" (click)=\"onEditStatus(element,'pending')\">\r\n                              <i class=\"fas fa-eye\"></i>\r\n                            </button>\r\n                            </div>\r\n                            <div *ngIf=\"element.status === 'accepted'\">\r\n                                Aceptada\r\n                            </div>\r\n                            <div *ngIf=\"element.status === 'rejected'\">\r\n                                Rechazada\r\n                            </div>\r\n\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                </table>\r\n            </div>\r\n            <div class=\"row justify-content-center mt-2\" *ngIf=\"invitations.length >0 && !isLoading \">\r\n                <mat-paginator class=\"col-auto\" [length]=\"totalInvitations\" [pageSize]=\"invitationsPerPage\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"onChangedPage($event)\" *ngIf=\"invitations.length > 0\"></mat-paginator>\r\n            </div>\r\n            <div class=\"row justify-content-center mt-3\" *ngIf=\"invitations.length <=0 && !isLoading \">\r\n                <div class=\"col-4\">\r\n                    <p class=\" info-text mat-body-1 \">No se han añadido invitaciones aún!</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/auth/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  private authStatusListener = new Subject<boolean>();\r\n  private auth2: gapi.auth2.GoogleAuth;\r\n  private username: string = \"\";\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n  \r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  getUserData() {\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    const username = localStorage.getItem('username');\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {userId, username};\r\n  }\r\n\r\n  login(username: string, password: string) {\r\n    const authData = { username, password };\r\n    this.http.post<{ token: string; expiresIn: number, user: any}>(BACKEND_URL + '/login', authData)\r\n      .subscribe(response => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        if (token) {\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.isAuthenticated = true;\r\n          this.userId = response.user._id;\r\n          this.username = response.user.username;\r\n          \r\n          this.authStatusListener.next(true);\r\n          const now = new Date();\r\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\r\n          this.saveAuthData(token, expirationDate, this.userId, this.username);\r\n          this.router.navigate(['/']);\r\n        }\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n    }\r\n    \r\n  googleLogin(tokenId: string) {\r\n    const authData = { tokenId };\r\n    this.http\r\n    .post<{ token: string; expiresIn: number, user: any }>(\r\n      BACKEND_URL + 'google',\r\n      authData\r\n      )\r\n      .subscribe(response => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        if (token) {\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.isAuthenticated = true;\r\n          this.userId = response.user._id;\r\n          this.authStatusListener.next(true);\r\n          const now = new Date();\r\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\r\n          this.saveAuthData(token, expirationDate, this.userId, this.username);\r\n          this.router.navigate(['/']);\r\n      }\r\n    }, error => {\r\n      this.authStatusListener.next(false);\r\n    });\r\n  }\r\n  \r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authInformation.userId;\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n  \r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.userId = null;\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate(['/']);\r\n    if (gapi.auth2){\r\n      this.auth2 = gapi.auth2.getAuthInstance();\r\n      this.auth2.signOut().then(() => {\r\n      });\r\n    }\r\n  }\r\n      \r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string, username) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expirationDate.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n    localStorage.setItem('username', username);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('username');\r\n    \r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    const username = localStorage.getItem('username');\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId,\r\n      username\r\n    };\r\n  }\r\n  \r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = ( control: AbstractControl ): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof(control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = new Observable( (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener('loadend', () => { // leer comentario de la línea 41\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = '';\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        // csv: 69642c6e\r\n\r\n        switch (header) {\r\n          case '89504e47':\r\n            isValid = true;\r\n            break;\r\n          case 'ffd8ffe0':\r\n          case 'ffd8ffe1':\r\n          case 'ffd8ffe2':\r\n          case 'ffd8ffe3':\r\n          case 'ffd8ffe8':\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file); // esto se llama primero y luego la línea 11\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TestsService } from 'src/app/services/tests.service';\r\n\r\n@Component({\r\n  selector: 'app-test-create',\r\n  templateUrl: './test-create.component.html',\r\n  styleUrls: ['./test-create.component.css']\r\n})\r\nexport class TestCreateComponent implements OnInit, OnDestroy{\r\n  userId                   : string;\r\n  userIsAuthenticated      : boolean = false;\r\n  selectedConfigurations   : string[];\r\n  @Input() testForm        : FormGroup;\r\n  @Input() workspaceId     : string;\r\n  @Input() datafileId      : string;\r\n  //@Input() testSave        : boolean;\r\n  @Output() testSaveChange : EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() esquemas        : any[];\r\n  @Input() configurations  : any[];\r\n  //@Input() test            : any;\r\n  private authStatusSub    : Subscription;\r\n\r\n  constructor(public testService: TestsService, public route: ActivatedRoute,\r\n              private formBuilder: FormBuilder, private router: Router, private usersService: AuthService) {\r\n                this.createForm();\r\n                this.testForm.reset({\r\n                  title: '',\r\n                  esquema: '',\r\n                  consfigurations: []\r\n                });\r\n                this.selectedConfigurations = [];\r\n  }\r\n\r\n  createForm() {\r\n    this.testForm = this.formBuilder.group({\r\n      title          : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      esquema        : [''],\r\n      configurations : [[]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.testForm.get('title').invalid && this.testForm.get('title').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.testForm.invalid){\r\n      return Object.values(this.testForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          \r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n     }\r\n    const values = this.testForm.getRawValue();\r\n    await this.testService.addTest(values.title, values.esquema, values.configurations, this.datafileId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {\r\n        console.log(\"Error on onSave method: \"+err);\r\n      });\r\n    this.testForm.reset({});\r\n    this.selectedConfigurations = [];\r\n  }\r\n\r\n  onConfigurationPicked(event: Event) {\r\n    const configurationId = (event.target as HTMLInputElement).value;\r\n    const checked: boolean = (event.target as HTMLInputElement).checked;\r\n    const index: number = this.selectedConfigurations.indexOf(configurationId);\r\n    if (checked && index < 0) {\r\n      this.selectedConfigurations.push(configurationId);\r\n    } else if (!checked && index >= 0) {\r\n      this.selectedConfigurations.pop();\r\n    }\r\n    this.testForm.patchValue({configurations: this.selectedConfigurations});\r\n  }\r\n\r\n  onEsquemaPicked(event: Event) {\r\n    const esquemaId = (event.target as HTMLInputElement).value;\r\n    if (esquemaId){\r\n      this.testForm.patchValue({esquema: esquemaId});\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.testForm.reset({});\r\n    this.selectedConfigurations = [];\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"modal fade\" id=\"testCreateModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\" modal-content \" style=\"width:auto;display: inline-block; \">\r\n            <div class=\"modal-header \">\r\n                <h2 class=\"modal-title mb-0 \" id=\"exampleModalLabel \">Añadir Esquema</h2>\r\n                <button type=\"button \" class=\"btn-close \" data-bs-dismiss=\"modal\" aria-label=\"Close \" (click)=\"onCancel()\"></button>\r\n            </div>\r\n            <div class=\"modal-body \" style=\"display: inline-block \">\r\n                <form [formGroup]=\"testForm \" (ngSubmit)=\"onSave() \" style=\"display: inline-block \">\r\n                    <div class=\"mb-3 \">\r\n                        <input type=\"text \" class=\"form-control \" placeholder=\"Título \" formControlName=\"title\" [class.is-invalid]=\"invalidTitle \">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle \" class=\"text-danger \">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3 \">\r\n                        <label class=\"col-form-label\">Esquema:</label>\r\n                        <select class=\"form-select form-select-sm\" (change)=\"onEsquemaPicked($event)\">\r\n                              <option selected >Ninguna</option>\r\n                              <option *ngFor=\"let esquema of esquemas\" value=\"{{esquema.id}}\">{{esquema.title}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"mb-3 \" style=\"display: inline-block \">\r\n                        <div class=\"container\">\r\n                            <div class=\"row border-header p-2\">\r\n                                <div class=\"col-3 d-flex justify-content-start\">\r\n                                    <div>Título</div>\r\n                                </div>\r\n                                <div class=\"col-4 d-flex justify-content-center\">\r\n                                    <div>Código de Error</div>\r\n                                </div>\r\n                                <div class=\"col-4 d-flex justify-content-center\">\r\n                                    <div>Parámetros</div>\r\n                                </div>\r\n                                <div class=\"col-1\">\r\n                                    <div></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt-0 p-2 border-content\">\r\n                                <div class=\"col\">\r\n                                    <div class=\"row mt-1 mb-1\" *ngFor=\"let configuration of configurations\">\r\n                                        <td class=\"col-3 d-flex justify-content-start\">\r\n                                            <div>{{configuration.title}}</div>\r\n                                        </td>\r\n                                        <td class=\"col-4 d-flex justify-content-center\">\r\n                                            <div>{{configuration.errorCode}}</div>\r\n                                        </td>\r\n                                        <td class=\"col-4 d-flex justify-content-center\">\r\n                                            <div>{{configuration.extraParamsStr}}</div>\r\n                                        </td>\r\n                                        <td class=\"col-1 d-flex justify-content-center\">\r\n                                            <div class=\"form-check\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"{{configuration.id}}\" id=\"flexCheckDefault\" (change)=\"onConfigurationPicked($event)\">\r\n                                            </div>\r\n                                        </td>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer \">\r\n                <button type=\"button \" class=\"btn btn-secondary \" data-bs-dismiss=\"modal\" (click)=\"onCancel()\">Cancelar</button>\r\n                <button type=\"submit \" class=\"btn btn-primary \" *ngIf=\"!testForm.valid\" (click)=\"onSave()\">Crear prueba</button>\r\n                <button type=\"submit \" class=\"btn btn-primary \" *ngIf=\"testForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear prueba</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { EsquemaService } from 'src/app/services/esquemas.service';\r\nimport { Esquema } from '../../../models/esquema.model';\r\n\r\n@Component({\r\n  selector: 'app-esquema-list',\r\n  templateUrl: './esquema-list.component.html',\r\n  styleUrls: ['./esquema-list.component.css']\r\n})\r\nexport class EsquemaListComponent implements OnInit, OnDestroy{\r\n  userId               : string;\r\n  userIsAuthenticated  : boolean = false;\r\n  isDeleting           : boolean = false;\r\n  @Input() datafileId  : string;\r\n  @Input() workspaceId : string;\r\n  @Input() esquemas    : Esquema[];\r\n  @Input() infer       : boolean;\r\n  // Para editar\r\n  savefileChange       : boolean = false;\r\n  esquema              : Esquema = null;\r\n  inferring            : boolean = false;\r\n  esquemaForm          : FormGroup;\r\n  \r\n  constructor(public datafilesService: DatafileService, public route: ActivatedRoute, public usersService: AuthService,\r\n              private router: Router, private esquemasService: EsquemaService){\r\n                this.esquemaForm = new FormGroup({\r\n                  'title': new FormControl('', {validators: [Validators.required,Validators.minLength(1), Validators.maxLength(100)]}),\r\n                  'esquemaContent': new FormControl({value: '', disabled: true}),\r\n                  'esquemaPath': new FormControl(null, {validators: [Validators.required]})\r\n                });\r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n\r\n  }\r\n\r\n  async onDelete( esquemaId: string ){\r\n    await this.esquemasService.deleteEsquema(esquemaId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {});\r\n  }\r\n\r\n  setSaveMode(newvalue: boolean) {\r\n    this.savefileChange = newvalue;\r\n  }\r\n\r\n  onEdit(esquemaId: string) {\r\n    this.esquemasService.getEsquema(esquemaId).subscribe(esquemaData => {\r\n      this.esquema = {\r\n        id: esquemaData.esquema._id,\r\n        title: esquemaData.esquema.title,\r\n        contentPath: esquemaData.esquema.contentPath,\r\n        creationMoment: esquemaData.esquema.creationMoment,\r\n        datafile: esquemaData.esquema.datafile,\r\n      };\r\n      this.esquemaForm.get('esquemaContent').enable();\r\n      this.esquemaForm.patchValue({\r\n        title: esquemaData.esquema.title, \r\n        esquemaContent: esquemaData.content\r\n      });\r\n      (document.getElementById('esquemaContent') as HTMLInputElement).value = this.esquemaForm.get('esquemaPath').value;\r\n   });\r\n  }\r\n\r\n\r\n  setEsquema(newvalue: any) {\r\n    this.esquema = newvalue;\r\n  }\r\n\r\n  onInfer() {\r\n    this.inferring = true;\r\n    this.esquemasService.addEsquema(null, null, null, this.datafileId, this.workspaceId)\r\n    .then(response => {\r\n       this.inferring = false;\r\n       this.router.navigateByUrl('/', {skipLocationChange: true})\r\n       .then(() => {\r\n         this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n       })\r\n       .catch( err => {\r\n        console.log(\"Error on onInfer method: \"+ err);\r\n       });\r\n     })\r\n     .catch(error => {\r\n        console.log(\"Error on onInfer method: \"+error);\r\n     });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row mt-4\">\r\n    <div class=\"col-5\">\r\n        <h2>Esquemas</h2>\r\n    </div>\r\n    <div class=\"col-7 d-flex justify-content-end\">\r\n        <div class=\"me-1\">\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" *ngIf=\"!inferring && infer\" (click)=\"onInfer()\">\r\n              Inferir Esquema\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" disabled *ngIf=\"inferring\">\r\n              Inferir Esquema\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal2\" *ngIf=\"!savefileChange\">\r\n              Añadir esquema\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" disabled *ngIf=\"savefileChange\">\r\n              Añadir esquema\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n            <app-esquema-create (savefileChange)=\"setSaveMode($event)\" [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [esquema]=\"esquema\" [esquemaForm]=\"esquemaForm\" (esquemaChange)=\"setEsquema($event)\"></app-esquema-create>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2 mb-4\">\r\n    <div class=\"col p-0\">\r\n        <div class=\"container\">\r\n            <div class=\"row border-header p-2\">\r\n                <div class=\"col-3 d-flex justify-content-start\">\r\n                    <div>Título</div>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-center\">\r\n                    <div>Fecha de Creación</div>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\">\r\n                    <div>Opciones</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-0 p-2 border-content\">\r\n                <div class=\"col\">\r\n                    <div class=\"row mt-1 mb-1\" *ngFor=\"let esquema of esquemas\">\r\n                        <div class=\"col-3 d-flex justify-content-start pt-2 pe-0\">\r\n                            <div>{{esquema.title}}</div>\r\n                        </div>\r\n                        <div class=\"col-6 d-flex justify-content-center pt-2\">\r\n                            <div>{{esquema.creationMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-end pe-4\">\r\n                            <div class=\"dropdown\">\r\n                                <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                              <i class=\"fas fa-ellipsis-h\"></i>\r\n                                            </button>\r\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    <li><a class=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal2\" (click)=onEdit(esquema.id)>Editar Esquema</a></li>\r\n                                    <li><a class=\"dropdown-item danger\" (click)=onDelete(esquema)>Eliminar Esquema</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { WorkspacesService } from 'src/app/services/workspaces.service';\r\nimport { Workspace } from '../../../models/workspace.model';\r\n\r\n@Component({\r\n  selector: 'app-workspace-edit',\r\n  templateUrl: './workspace-edit.component.html',\r\n})\r\nexport class WorkspaceEditComponent implements OnInit, OnDestroy{\r\n  userId               : string;\r\n  userIsAuthenticated  : boolean = false;\r\n  loading              : boolean = false;\r\n  workspaceEditForm    : FormGroup;\r\n  \r\n  @Input() edit        : boolean;\r\n  @Input() workspace   : Workspace;\r\n  @Input() workspaceId : string;\r\n  @Output() editChange : EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public workspaceService: WorkspacesService, public authService: AuthService,  private router: Router,\r\n              private formBuilder: FormBuilder) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.workspaceEditForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n    this.workspaceEditForm.reset({\r\n      title: this.workspace.title,\r\n      description: this.workspace.description,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.workspaceEditForm.get('title').invalid && this.workspaceEditForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.workspaceEditForm.get('description').invalid && this.workspaceEditForm.get('description').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.workspaceEditForm.invalid){\r\n      return Object.values(this.workspaceEditForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.loading = true;\r\n    const values = this.workspaceEditForm.getRawValue();\r\n\r\n    await this.workspaceService.updateWorkspace(this.workspaceId, values.title, values.description);\r\n    this.workspaceEditForm.reset();\r\n    this.editChange.emit(false);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/workspace/${this.workspaceId}`]);\r\n    }).catch( err => {});\r\n    this.loading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.workspaceEditForm.reset();\r\n    this.editChange.emit(false);\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-2\" *ngIf=\"loading\">\r\n    <div class=\"row m-0 p-1\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<form class=\"container mt-4\" [formGroup]=\"workspaceEditForm\" (ngSubmit)=\"onSave()\" *ngIf=\"!loading\">\r\n\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                Ingrese un título adecuado\r\n              </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n              Ingrese una descripción adecuada\r\n            </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\">Guardar</button>\r\n            <a class=\"btn btn-sm btn-secondary\" (click)=\"onCancel()\">Cancel</a>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Invitation } from 'src/app/models/invitation.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/invitations/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class InvitationService {\r\n  private invitations: Invitation[] = [];\r\n  private invitationsUpdated = new Subject<{invitations: Invitation[], invitationCount: number, totalInvitations: number}>();\r\n  \r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getInvitationUpdateListener() {\r\n    return this.invitationsUpdated.asObservable();\r\n  }\r\n  \r\n  getInvitations(invitationsPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${invitationsPerPage}&page=${currentPage}`;\r\n    this.http.get<{message: string, invitations: any, maxInvitations: number, totalInvitations: number }>(BACKEND_URL + queryParams)\r\n      .pipe(map( (invitationData) => {\r\n        return { \r\n          invitations: invitationData.invitations\r\n          .map( invitation => {\r\n            return {\r\n              id: invitation._id,\r\n              sender: invitation.sender,\r\n              receiver: invitation.receiver,\r\n              status: invitation.status,\r\n              workspace: invitation.workspace,\r\n            };\r\n          }),\r\n          maxInvitations: invitationData.maxInvitations,\r\n          totalInvitations: invitationData.totalInvitations\r\n        };\r\n      }))\r\n      .subscribe((transformedInvitationData) => {\r\n        this.invitations = transformedInvitationData.invitations;\r\n        this.invitationsUpdated.next({\r\n          invitations: [...this.invitations],\r\n          invitationCount: transformedInvitationData.maxInvitations,\r\n          totalInvitations: transformedInvitationData.totalInvitations});\r\n    });\r\n  }\r\n\r\n  getInvitationsHeader() {\r\n    return this.http.get<{message: string, invitations: any}>(BACKEND_URL)\r\n      .pipe(map( (invitationData) => {\r\n        return { \r\n          invitations: invitationData.invitations\r\n          .map( invitation => {\r\n            return {\r\n              id: invitation._id,\r\n              sender: invitation.sender,\r\n              receiver: invitation.receiver,\r\n              status: invitation.status,\r\n              workspace: invitation.workspace,\r\n            };\r\n          }),\r\n        };\r\n      }))\r\n  }\r\n\r\n  addInvitation( receiverEmail: string, workspaceId: string) {\r\n    let res: any;\r\n    const invitation: Invitation = { \r\n      'id':null, \r\n      'sender':null, \r\n      'receiver': receiverEmail, \r\n      'status':'pending', \r\n      'workspace': workspaceId \r\n    };\r\n\r\n    this.http.post<{message: string, invitation: any}>(BACKEND_URL, invitation).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Creating an invitation failed!');\r\n        } else {\r\n          resolve('Invitation added successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  updateInvitation(invitationId: string, status: string){\r\n    let res: any;\r\n    const invitationData: Invitation = { \r\n      'id':invitationId, \r\n      'sender':null, \r\n      'receiver': null, \r\n      'status':status, \r\n      'workspace': null \r\n    };\r\n    this.http.put<{message: string, invitation: any}>(BACKEND_URL + invitationId, invitationData)\r\n      .subscribe( responseData => {\r\n        res = responseData\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating an invitation failed!');\r\n        } else {\r\n          resolve('Invitation updated successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  deleteInvitation(invitationId: string){\r\n    let res: any;\r\n    this.http.delete<{message: string}>(BACKEND_URL +  invitationId).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting an invitation failed!');\r\n        } else {\r\n          resolve('Invitation deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n\r\n@NgModule({\r\n  imports: [ // se pueden obviar los imports, si existen exports\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule { }\r\n","import { Component, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from 'src/app/services/datafiles.service';\r\n\r\n@Component({\r\n  selector: 'app-datafile-edit',\r\n  templateUrl: './datafile-edit.component.html',\r\n})\r\nexport class DatafileEditComponent implements OnInit, OnDestroy{\r\n  @Input() edit;\r\n  @Input() datafile;\r\n  @Input() datafileId;\r\n  @Input() workspaceId;\r\n  @Output() editChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  datafileEditForm: FormGroup;\r\n  loading = false;\r\n\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public datafileService: DatafileService, public authService: AuthService,  private router: Router,\r\n              private formBuilder: FormBuilder) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.datafileEditForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n    this.datafileEditForm.reset({\r\n      title: this.datafile.title,\r\n      description: this.datafile.description,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.datafileEditForm.get('title').invalid && this.datafileEditForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.datafileEditForm.get('description').invalid && this.datafileEditForm.get('description').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.datafileEditForm.invalid){\r\n      return Object.values(this.datafileEditForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.loading = true;\r\n    const values = this.datafileEditForm.getRawValue();\r\n\r\n    await this.datafileService.updateDatafile(this.datafileId, values.title, values.description);\r\n    this.datafileEditForm.reset();\r\n    this.editChange.emit(false);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n    }).catch( err => {});\r\n    this.loading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.datafileEditForm.reset();\r\n    this.editChange.emit(false);\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-2\" *ngIf=\"loading\">\r\n    <div class=\"row m-0 p-1\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<form class=\"container mt-4\" [formGroup]=\"datafileEditForm\" (ngSubmit)=\"onSave()\" *ngIf=\"!loading\">\r\n\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                Ingrese un título adecuado\r\n              </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n              Ingrese una descripción adecuada\r\n            </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\">Guardar</button>\r\n            <a class=\"btn btn-sm btn-secondary\" (click)=\"onCancel()\">Cancel</a>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Test } from '../models/test.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/tests/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TestsService {\r\n  private tests: any[] = [];\r\n  private testsUpdated = new Subject<{tests: any[]}>();\r\n  \r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getTestUpdateListener() {\r\n    return this.testsUpdated.asObservable();\r\n  }\r\n  \r\n  getTests(workspaceId: string) {\r\n    const queryParams = `?workspaceId=${workspaceId}`;\r\n    this.http.get<{message: string, tests: any}>(BACKEND_URL + queryParams)\r\n    .pipe(map( (testData) => {\r\n      return { tests: testData.tests.map(test => {\r\n        return {\r\n          id: test._id,\r\n          title: test.title,\r\n          reportPath: test.reportPath,\r\n          status: test.status,\r\n          esquema: test.esquema,\r\n          configurations: test.configurations,\r\n          creationMoment: test.creationMoment,\r\n          updateMoment: test.updateMoment,\r\n          executionMoment: test.executionMoment,\r\n          totalErrors: test.totalErrors,\r\n          executable: test.executable,\r\n          datafileId: test.datafile,\r\n          datafileTitle: test.datafileTitle\r\n        };\r\n      }),\r\n    };\r\n    }))\r\n    .subscribe((transformedTestData) => {\r\n      this.tests = transformedTestData.tests;\r\n      this.testsUpdated.next({\r\n        tests: [...this.tests], // para hacer una verdadera copia y no afectar al original\r\n      });\r\n  });\r\n  }\r\n\r\n  getTest(testId: string) {\r\n    return this.http.get<{message: string, test: any, esquema: any, configurationIDs: string[], reportContent: string}>(BACKEND_URL + testId);\r\n  }\r\n  \r\n  addTest(title: string, esquemaId: string, configurations: string[], datafileId: string){\r\n    let res;\r\n    const test: Test = {\r\n      'id': null,\r\n      'title': title,\r\n      'reportPath': null,\r\n      'status': null,\r\n      'esquema': esquemaId,\r\n      'configurations': configurations,\r\n      'creationMoment': null,\r\n      'updateMoment': null,\r\n      'executionMoment': null,\r\n      'totalErrors': null,\r\n      'executable': null,\r\n      'datafile': datafileId,\r\n    };\r\n    \r\n    this.http.post<{message: string, test: any}>(BACKEND_URL, test).subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n      \r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Creating a test failed!');\r\n        } else {\r\n          resolve('Test added successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n    \r\n  updateTest(test:Test) {\r\n    let res: any;\r\n    this.http.put<{message: string, test: any, content}>(BACKEND_URL + test.id, test).subscribe( responseData => {\r\n      res = responseData;\r\n      console.log(responseData)\r\n    });\r\n      return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Updating a test failed!');\r\n        } else {\r\n          resolve('Test updated successfully!');\r\n        }\r\n      }, 4000);\r\n    });\r\n  }\r\n    \r\n  deleteTest(testId: string){\r\n    let res: any;\r\n    this.http.delete(BACKEND_URL + testId).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n      return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject('Deleting a test failed!');\r\n        } else {\r\n          resolve('Test deleted successfully!');\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { WorkspacesService } from \"src/app/services/workspaces.service\";\r\nimport { mimeType } from \"./mime-type.validator\";\r\nimport { UploadsService } from \"src/app/services/uploads.service\";\r\nimport { HeaderComponent } from \"src/app/components/header/header.component\";\r\nimport { UsersService } from \"src/app/services/users.service\";\r\n\r\n@Component({\r\n    selector: 'app-profile-edit',\r\n    templateUrl: './profile-edit.component.html',\r\n    styleUrls: ['./profile-edit.component.css']\r\n})\r\nexport class ProfileEditComponent implements OnInit{\r\n  user: any;\r\n  isLoading: boolean = false;\r\n  userForm: FormGroup;\r\n  photoPreview: string;\r\n  @ViewChild(HeaderComponent) headerComponent: HeaderComponent;\r\n\r\n\r\n  constructor(public authService: AuthService, public usersService: UsersService, public route: ActivatedRoute, \r\n              public workspacesService: WorkspacesService, private uploadsService: UploadsService) {\r\n  }\r\n    \r\n  // createUserForm() {\r\n  //   this.userForm = this.formBuilder.group({\r\n  //     username : ['', [Validators.required, Validators.minLength(5)]],\r\n  //     name     : ['', [Validators.required, Validators.minLength(5)]],\r\n  //     photo    : [null, [Validators.required, mimeType]]\r\n  //   })\r\n  // }\r\n  ngOnInit() {\r\n    this.userForm = new FormGroup({ \r\n      'username': new FormControl(null, {validators: [Validators.minLength(4)]}), \r\n      'name': new FormControl(null, {validators: [Validators.minLength(4)]}), \r\n      'photo': new FormControl(null, {asyncValidators: [mimeType]}) \r\n    });\r\n    \r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      const userId = paramMap.get('userId');\r\n      this.isLoading = true;\r\n      this.usersService.getUser(userId).subscribe(userData => {\r\n      this.user = {\r\n        id: userData.user.id,\r\n        username: userData.user.username,\r\n        email: userData.user.email,\r\n        password: userData.user.password,\r\n        photo: userData.user.photo,\r\n        name: userData.user.name,\r\n        role: userData.user.role,\r\n        status: userData.user.status,\r\n        google: userData.user.google\r\n      };\r\n      this.userForm.reset({\r\n        name: this.user.name,\r\n        username: this.user.username,\r\n        photo: this.user.photo\r\n      });\r\n      this.isLoading = false;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  get pristineUser() {\r\n    return this.userForm.get('username').pristine && this.userForm.get('name').pristine && this.userForm.get('photo').pristine;\r\n  }\r\n\r\n  get invalidUsername() {\r\n    return this.userForm.get('username').invalid && this.userForm.get('username').touched;\r\n  }\r\n\r\n  get invalidName() {\r\n    return this.userForm.get('name').invalid && this.userForm.get('name').touched;\r\n  }\r\n  \r\n  onImagePicked(event: Event) { \r\n \r\n    const file = (event.target as HTMLInputElement).files[0]; \r\n    this.userForm.patchValue({photo: file});\r\n    this.userForm.get('photo').markAsDirty(); \r\n    this.userForm.get('photo').updateValueAndValidity(); \r\n    const reader = new FileReader(); \r\n    reader.onload = () => { \r\n      this.photoPreview = reader.result as string; \r\n    }; \r\n    reader.readAsDataURL(file); \r\n  }\r\n\r\n  onCancelUserForm() {\r\n    this.userForm.reset({\r\n      username: this.user.username,\r\n      name: this.user.name,\r\n      photo: this.user.photo\r\n    });\r\n    this.photoPreview = null;\r\n  }\r\n\r\n  async onSaveUser() {\r\n    if (this.userForm.invalid){\r\n      return Object.values(this.userForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.isLoading = true;\r\n    const values = this.userForm.getRawValue();\r\n    if (values.photo) {\r\n      await this.uploadsService.updatePhoto(this.user.userId,values.photo);\r\n    }\r\n    await this.usersService.updateUser(this.user.userId, values.name, values.username, null, this.user.role, null, null, null);\r\n    //this.router.navigate([`/profile/${this.user.userId}/edit`]);\r\n    window.location.reload();\r\n    //this.isLoading = false;\r\n  }\r\n}","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<div class=\"container mt-5\" *ngIf=\"!isLoading\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-9 col-auto \">\r\n            <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                  <div class=\"row d-grid gap-2\">\r\n                    <a type=\"button\" class=\"btn btn-outline-secondary active\" routerLink=\"/profile/{{user.userId}}/edit\">Editar Perfil</a>\r\n                    <a type=\"button\" class=\"btn btn-outline-secondary\" routerLink=\"/account/{{user.userId}}/edit\">Configuración de la cuenta</a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-8 ps-4\">\r\n                  <h1>Editar Perfil</h1>\r\n                  \r\n                  <form [formGroup]=\"userForm\" (ngSubmit)=\"onSaveUser()\">\r\n                    \r\n                    <div  *ngIf=\"photoPreview && photoPreview !== '' && userForm.get('photo').valid\">                         \r\n                      <img [src]=\"photoPreview\" class=\"border rounded-circle me-2\" style=\"width: 80px;\"> \r\n                    </div> \r\n                    <div  *ngIf=\"!photoPreview\">                         \r\n                      <img src=\"{{user.photo}}\" class=\"border rounded-circle me-2\" style=\"width: 80px;\" alt=\"\">\r\n                    </div>                     \r\n                    <div class=\"mt-2 mb-4\">\r\n                      <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"filePicker.click()\">\r\n                        Cambiar Foto\r\n                        <span style=\"color: white;\">\r\n                          <i class=\"fas fa-camera fa-lg ms-1\"></i>\t\r\n                        </span>\r\n                      </button>\r\n                      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" visbility=\"hidden\"> \r\n                    </div>\r\n                     \r\n                  \r\n                    <div class=\"mb-3\">\r\n                      <label for=\"FormName\" class=\"form-label\">Nombre</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"FormName\" formControlName=\"name\" [class.is-invalid]=\"invalidName\" placeholder=\"Name\" value=\"{{user.name}}\">\r\n                      <mat-error>\r\n                        <small *ngIf=\"invalidName\" class=\"text-danger\">\r\n                          Ingrese un nombre válido.\r\n                        </small>\r\n                      </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"FormUsername\" class=\"form-label\">Nombre de Usuario</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"FormUsername\" formControlName=\"username\" [class.is-invalid]=\"invalidUsername\"placeholder=\"Username\" value=\"{{user.username}}\">\r\n                      <mat-error>\r\n                        <small *ngIf=\"invalidUsername\" class=\"text-danger\">\r\n                          Ingrese un nombre de usuario válido.\r\n                        </small>\r\n                      </mat-error>\r\n                    </div>\r\n                    \r\n                    <button class=\"btn btn-primary me-1 mt-2\" type=\"submit\">Guardar Cambios</button>\r\n                    <button class=\"btn btn-secondary mt-2\" (click)=\"onCancelUserForm()\" [disabled]=\"pristineUser\">Cancelar</button>\r\n                  </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<div class=\"row ps-2 pe-2 complete-height\">\r\n    <div class=\"col-2 collections p-0\">\r\n        <div class=\"container p-0\">\r\n            <app-collection-list [workspaceId]=\"workspaceId\"></app-collection-list>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-7\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n        <app-workspace-edit *ngIf=\"edit\" [(edit)]=\"edit\" [workspace]=\"workspace\" [workspaceId]=\"workspaceId\"></app-workspace-edit>\r\n\r\n        <div class=\"container\" *ngIf=\"!isLoading && !edit\">\r\n\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col-10\">\r\n                    <h2>{{ workspace.title }}</h2>\r\n\r\n                </div>\r\n                <div class=\"col-2 d-flex justify-content-end\">\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEdit()\">\r\n                          <i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class=\"dropdown\" *ngIf=\"!workspace.mandatory\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                            <li><a class=\"dropdown-item\" (click)=\"onLeave()\">Abandonar Espacio</a></li>\r\n                            <li><a class=\"dropdown-item danger\" (click)=\"onDelete()\">Eliminar Espacio</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col\">\r\n                    <p>{{ workspace.description }}</p>\r\n                </div>\r\n            </div>\r\n            <app-activity-list></app-activity-list>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-3 members\">\r\n        <div class=\"container\">\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col\">\r\n                    <h2>Empieza!</h2>\r\n                    <button type=\"button\" class=\"btn add-file btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" *ngIf=\"!savefileChange\">\r\n                      Crear fichero de datos\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn add-file btn-sm\" disabled *ngIf=\"savefileChange\">\r\n                      Crear fichero de datos\r\n                      <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                    <app-datafile-create (savefileChange)=\"setSaveMode($event)\" [workspaceId]=\"workspaceId\" [collections]=\"collections\"></app-datafile-create>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col\">\r\n                    <h2>Members</h2>\r\n\r\n                    <ul class=\"list-group\">\r\n                        <div *ngFor=\"let user of users\">\r\n                            <li class=\"list-group-item pt-0 pb-0 d-flex justify-content-between align-items-center\">\r\n\r\n                                <div class=\"pt-1 pb-1 user-photo\">\r\n                                    <img src=\"{{user.photo}}\" class=\"border rounded-circle me-2\" alt=\"\"> {{user.username}}\r\n                                </div>\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                  \r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu dropdown-menu-end\">\r\n                                        <li><button class=\"dropdown-item btn-sm\" type=\"button\">Admin</button></li>\r\n                                        <li><button class=\"dropdown-item btn-sm \" type=\"button\">Owner</button></li>\r\n                                        <li><button class=\"dropdown-item btn-sm\" type=\"button\">Member</button></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </li>\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <app-invitation-create></app-invitation-create>\r\n        </div>\r\n    </div>\r\n</div>","import { OnInit, OnDestroy } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { WorkspacesService } from '../../../services/workspaces.service';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\nimport { User } from '../../auth/login/login.component';\r\nimport { CollectionsService } from 'src/app/services/collections.service';\r\nimport { Collection } from 'src/app/models/collection.model';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { UsersService } from '../../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-workspace-details',\r\n  templateUrl: './workspace-details.component.html',\r\n  styleUrls: ['./workspace-details.component.css']\r\n})\r\nexport class WorkspaceDetailsComponent implements OnInit, OnDestroy{\r\n  isLoading              : boolean = false;\r\n  userIsAuthenticated    : boolean = false;\r\n  userId                 : string;\r\n  edit                   : boolean = false;\r\n  editMode               : boolean = false;\r\n  savefileChange         : boolean = false;\r\n  enteredDescription     : string = '';\r\n  enteredTitle           : string = '';\r\n  workspaceId            : string;\r\n  workspace              : Workspace;\r\n  users                  : User[];\r\n  collections            : Collection[];\r\n  private usersSub       : Subscription;\r\n  private authStatusSub  : Subscription;\r\n  private collectionsSub : Subscription;\r\n\r\n  constructor(public workspacesService: WorkspacesService, public rolesService: RolesService, public route: ActivatedRoute,\r\n              public usersService: UsersService, public authService: AuthService, public collectionsService: CollectionsService,\r\n              public datafilesService: DatafileService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n    \r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      const workId = paramMap.get('workspaceId');\r\n      this.workspaceId = workId;\r\n      this.isLoading = true;\r\n      this.workspacesService.getWorkspace(workId).subscribe(workspaceData => {\r\n        this.isLoading = false;\r\n        this.workspace = {\r\n          id: workspaceData.workspace._id,\r\n          title: workspaceData.workspace.title,\r\n          description: workspaceData.workspace.description,\r\n          creationMoment: workspaceData.workspace.creationMoment,\r\n          mandatory: workspaceData.workspace.mandatory\r\n        };\r\n      });\r\n    });\r\n    \r\n    // Users\r\n    this.usersService.getUsersByWorkspace(this.workspaceId);\r\n    this.usersSub = this.usersService.getUserUpdateListener().subscribe( (userData: {users: User[]}) => {\r\n      this.isLoading = false;\r\n      this.users = userData.users;\r\n      console.log(this.users)\r\n    });\r\n\r\n    // Collections\r\n    this.collectionsService.getCollectionsByWorkspace(this.workspaceId);\r\n    this.collectionsSub = this.collectionsService.getCollectionUpdateListener()\r\n    .subscribe( (collectionData: {collections: Collection[]}) => {\r\n      this.collections = collectionData.collections;\r\n    });\r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n    this.usersSub.unsubscribe();\r\n    this.collectionsSub.unsubscribe();\r\n  }\r\n\r\n  onDelete(){\r\n    this.isLoading = true;\r\n    this.workspacesService.deleteWorkspace(this.workspaceId);\r\n    this.router.navigate(['/workspaces']);\r\n  }\r\n\r\n  onLeave(){\r\n    this.isLoading = true;\r\n    this.rolesService.deleteRole(this.workspaceId).then( response => {\r\n      this.router.navigate(['/workspaces']);\r\n    }, error => {\r\n      console.log(\"Error on onLeave method: \"+error);\r\n    });\r\n  }\r\n\r\n  onEdit() {\r\n    this.edit = true;\r\n  }\r\n\r\n  async onDeleteCollection(collectionId: string) {\r\n    this.isLoading = true;\r\n    await this.collectionsService.deleteCollection(collectionId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}`]);\r\n      }).catch( err => {\r\n        console.log(\"Error on onDeleteCollection method: \"+err);\r\n      });\r\n    this.isLoading = false;\r\n  }\r\n\r\n  setSaveMode(newvalue: boolean) {\r\n    this.savefileChange = newvalue;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { WorkspaceListComponent } from './pages/workspaces/workspace-list/workspace-list.component';\r\nimport { AuthGuard } from './pages/auth/auth.guard';\r\nimport { InvitationCreateComponent } from './components/invitation/invitation-create/invitation-create.component';\r\nimport { InvitationListComponent } from './pages/invitations/invitation-list/invitation-list.component';\r\nimport { WorkspaceCreateComponent } from './pages/workspaces/workspace-create/workspace-create.component';\r\nimport { WorkspaceDetailsComponent } from './pages/workspaces/workspace-details/workspace-details.component';\r\nimport { DatafileDetailsComponent } from './pages/datafiles/datafile-details/datafile-details.component';\r\nimport { TestDetailsComponent } from './pages/tests/test-details/test-details.component';\r\nimport { TestExecuteComponent } from './pages/tests/test-execute/test-execute.component';\r\nimport { ProfileDetailsComponent } from './pages/profile/profile-details/profile-details.component';\r\nimport { ProfileEditComponent } from './pages/profile/profile-edit/profile-edit.component';\r\nimport { ProfileAccountEditComponent } from './pages/profile/profile-account-edit/profile-account-edit.component';\r\nimport { ConfigurationComponent } from './pages/configuration/configuration.component';\r\n\r\nconst routes: Routes = [\r\n  // Authentication (login, signup)\r\n  { path: 'auth', loadChildren: () => import('./pages/auth/auth.module').then(m => m.AuthModule)},\r\n  // Global Configuration\r\n  { path: 'configuration', component: ConfigurationComponent, canActivate: [AuthGuard]},\r\n  // Datafiles (details)\r\n  { path: 'workspace/:workspaceId/datafile/:datafileId', component: DatafileDetailsComponent, canActivate: [AuthGuard]},\r\n  // Home\r\n  { path: '', component: HomeComponent},\r\n  // Invitations (list, create)\r\n  //{ path: 'invite', component: InvitationCreateComponent, canActivate: [AuthGuard]},//\r\n  { path: 'invitations', component: InvitationListComponent, canActivate: [AuthGuard]},\r\n  // Profile (account edit, details, edit)\r\n  { path: 'account/:userId/edit', component: ProfileAccountEditComponent, canActivate: [AuthGuard]},\r\n  { path: 'profile/:userId/edit', component: ProfileEditComponent, canActivate: [AuthGuard]},\r\n  { path: 'profile/:userId', component: ProfileDetailsComponent, canActivate: [AuthGuard]},\r\n  // Tests (details)\r\n  { path: 'workspace/:workspaceId/datafile/:datafileId/test/:testId', component: TestDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: 'workspace/:workspaceId/runner', component: TestExecuteComponent, canActivate: [AuthGuard]},\r\n  { path: 'workspace/:workspaceId/runner/:testId', component: TestExecuteComponent, canActivate: [AuthGuard]},\r\n  // Workspaces (create, details, list)\r\n  { path: 'workspace/create', component: WorkspaceCreateComponent, canActivate: [AuthGuard]},\r\n  { path: 'workspace/:workspaceId', component: WorkspaceDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: 'workspaces', component: WorkspaceListComponent, canActivate: [AuthGuard]},\r\n  \r\n  { path: '**', redirectTo: ''},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{ useHash: true })], //changes\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor( private authService: AuthService, private router: Router ) {\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/auth/login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Datafile } from '../../../models/datafile.model';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { UploadsService } from 'src/app/services/uploads.service';\r\nimport { WorkspacesService } from 'src/app/services/workspaces.service';\r\nimport { Workspace } from '../../../models/workspace.model';\r\nimport { Configuration } from '../../../models/configuration.model';\r\nimport { Esquema } from '../../../models/esquema.model';\r\nimport { Test } from '../../../models/test.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-datafile-details',\r\n  templateUrl: './datafile-details.component.html',\r\n  styleUrls: ['./datafile-details.component.css']\r\n})\r\nexport class DatafileDetailsComponent implements OnInit, OnDestroy{\r\n  userId                : string;\r\n  userIsAuthenticated   : boolean = false;\r\n  isLoading             : boolean = false;\r\n  isUploading           : boolean = false;\r\n  infer                 : boolean = false;\r\n  edit                  : boolean = false;\r\n  invalidExtension      : boolean = false;\r\n  \r\n  datafileId            : string;\r\n  datafile              : Datafile;\r\n  workspaceId           : string;\r\n  workspace             : Workspace;\r\n  esquemas              : Esquema[];\r\n  configurations        : Configuration[];\r\n  formattedConfigs      : any[] = [];\r\n  tests                 : Test[];\r\n  \r\n  fileForm              : FormGroup;\r\n  fileContentForm       : FormGroup;\r\n  filePreview           : string;\r\n  content               : any = null;\r\n  arrayBuffer           : any;\r\n  file                  : any = null;\r\n  fileName              : string = '';\r\n  extension             : string;\r\n  \r\n  private authStatusSub : Subscription;\r\n\r\n  constructor(public datafilesService: DatafileService, public workspacesService: WorkspacesService, public uploadsService: UploadsService, public route: ActivatedRoute, public usersService: AuthService,\r\n    private router: Router){\r\n      this.fileForm = new FormGroup({\r\n        'contentPath': new FormControl(null, {validators: [Validators.required]})\r\n      });\r\n      this.fileContentForm = new FormGroup({\r\n        'fileContent': new FormControl({value: '', disabled: true}),\r\n      });\r\n    }\r\n    \r\n  ngOnInit(){\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n    });\r\n    \r\n    this.userId = this.usersService.getUserId();\r\n\r\n    this.isLoading = true;\r\n    \r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.datafileId = paramMap.get('datafileId');\r\n      this.workspaceId = paramMap.get('workspaceId');\r\n\r\n      this.workspacesService.getWorkspace(this.workspaceId).subscribe(workspaceData => {\r\n        this.workspace = {\r\n          id: workspaceData.workspace.id,\r\n          title: workspaceData.workspace.title,\r\n          description: workspaceData.workspace.description,\r\n          creationMoment: workspaceData.workspace.creationMoment,\r\n          mandatory: workspaceData.workspace.mandatory\r\n        };\r\n        this.isLoading = false;\r\n      });\r\n    });\r\n    \r\n    \r\n    this.datafilesService.getDatafile(this.datafileId).subscribe(datafileData => {\r\n      this.datafile = {\r\n        id: datafileData.datafile.id,\r\n        title: datafileData.datafile.title,\r\n        description: datafileData.datafile.description,\r\n        contentPath: datafileData.datafile.contentPath,\r\n        errLimit: datafileData.datafile.errLimit,\r\n        delimiter: datafileData.datafile.delimiter,\r\n        coleccion: datafileData.datafile.coleccion,\r\n        workspace: datafileData.datafile.workspace,\r\n      };\r\n\r\n      this.content = datafileData.content;\r\n      this.esquemas = datafileData.esquemas;\r\n      this.configurations = datafileData.configurations;\r\n      this.tests = datafileData.tests;\r\n\r\n      this.configurations.forEach(config => {\r\n        const extraParamsJSON = JSON.stringify(config.extraParams).toString();\r\n        const extraParamsStr1 = extraParamsJSON.replace(/{/g, '');\r\n        const extraParamsStr2 = extraParamsStr1.replace(/}/g, '');\r\n        const extraParamsStr = extraParamsStr2.replace(/,/g, ',\\n');\r\n        this.formattedConfigs.push({...config, extraParamsStr});\r\n      });\r\n      if (this.content !== null) {\r\n        this.infer = true;\r\n      }\r\n      this.fileForm = new FormGroup({\r\n        'contentPath': new FormControl(null, {validators: [Validators.required]})\r\n      });\r\n      if (this.datafile.contentPath) {\r\n        // contentPath: {backend/files/capital-1234.csv\",\r\n        // contentPath: {backend/uploads/datafiles/capital-1234.csv\",\r\n\r\n        const nameWExtension = this.datafile.contentPath.split('/');\r\n        const splitNameWExtension = nameWExtension[3].split('.');\r\n        this.extension = splitNameWExtension[1]; // setted in order to use it on onDownload() method\r\n        const nameWDate = nameWExtension[3].split('-');\r\n        const name = nameWDate[0];\r\n        this.fileName = name + '.' + this.extension;\r\n      }\r\n      if (this.extension === 'xlsx') {\r\n        let res = this.content[0].join(',')+ '\\n';\r\n        for (let arr of this.content) {\r\n          res = res + arr.join(',') + '\\n';\r\n        }\r\n        this.fileContentForm.patchValue({fileContent: res});\r\n      } else if (this.extension === 'csv') {\r\n        this.fileContentForm.patchValue({fileContent: datafileData.content });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onDelete(){\r\n    this.isLoading = true;\r\n    await this.datafilesService.deleteDatafile(this.datafileId);\r\n    this.router.navigate([`/workspace/${this.datafile.workspace}`]);\r\n  }\r\n\r\n  onEdit() {\r\n    this.edit = true;\r\n  }\r\n\r\n  // File upload function\r\n  async onFilePicked(event: Event) {\r\n    const files = (event.target as HTMLInputElement).files;\r\n    if (files && files.length > 0) {\r\n      const uploadedFile = (event.target as HTMLInputElement).files[0];\r\n      const split = uploadedFile.name.split('.');\r\n      const extension = split[1].toLowerCase();\r\n      if (extension !== 'xlsx' && extension !== 'csv') {\r\n        this.invalidExtension = true;\r\n        return;\r\n      } else {\r\n        this.invalidExtension = false;\r\n      }\r\n\r\n      this.file = uploadedFile;\r\n      this.isUploading = true;\r\n      await this.uploadsService.updateFile(this.userId, this.datafileId, 'updateFile', this.file);\r\n      await this.datafilesService.updateDatafile( this.datafileId, this.datafile.title, this.datafile.description);\r\n\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {\r\n        console.log(\"Error on onFilePicked method: \"+err);\r\n      });\r\n      this.isUploading = false;\r\n    }}\r\n\r\n    async onSave() {\r\n      let file: any;\r\n      let content = this.fileContentForm.value.fileContent;\r\n      if (this.extension === 'csv') {\r\n        const blob = new Blob([content], {type: 'text/csv' });\r\n        file = new File([blob], this.fileName, {type: 'text/csv'});\r\n      } else if (this.extension === 'xlsx') {\r\n        let rows = content.split('\\n').map(row => {\r\n          return row.split(',');\r\n        });\r\n        const worksheetName = this.fileName;\r\n\r\n        const wsorksheetContent = XLSX.utils.aoa_to_sheet(rows);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n        const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n        const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n        file = new File([data], this.fileName, { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n      } else {\r\n        return;\r\n      }\r\n      this.isLoading = true;\r\n      await this.uploadsService.updateFile(this.userId, this.datafileId, 'updateContent', file);\r\n      await this.datafilesService.updateDatafile( this.datafileId, this.datafile.title, this.datafile.description);\r\n      this.fileContentForm.get('fileContent').disable();\r\n      this.isLoading = false;\r\n    }\r\n\r\n    async onDeleteFile() {\r\n      this.isUploading = true;\r\n      await this.uploadsService.updateFile(this.userId, this.datafileId,'deleteFile', null);\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n        .then(() => {\r\n          this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n        }).catch( err => {\r\n          console.log(\"Error on onDeleteFile method: \"+err);\r\n        });\r\n\r\n      this.isUploading = false;\r\n    }\r\n\r\n    onDownload() {\r\n      if (this.extension === 'xlsx') {\r\n        const worksheetName = this.fileName;\r\n        const wsorksheetContent = XLSX.utils.aoa_to_sheet(this.content);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n        XLSX.writeFile(workbook, this.fileName); // downloads it\r\n        const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n        const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n        const file: File = new File([data], 'out.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n      } else if (this.extension === 'csv') {\r\n        const blob = new Blob([this.content], {type: 'text/csv' })\r\n        saveAs(blob, this.fileName);\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    onEditContent() {\r\n      if (this.fileContentForm.get('fileContent').disabled) {\r\n        this.fileContentForm.get('fileContent').enable();\r\n      } else {\r\n        this.fileContentForm.get('fileContent').disable();\r\n      }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row ps-2 pe-2 complete-height\">\r\n    <div class=\"col-2 collections p-0\">\r\n        <div class=\"container p-0\">\r\n            <app-collection-list [workspaceId]=\"workspaceId\"></app-collection-list>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-7\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n        <app-datafile-edit *ngIf=\"edit\" [(edit)]=\"edit\" [datafile]=\"datafile\" [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\"></app-datafile-edit>\r\n\r\n        <div class=\"container\" *ngIf=\"!isLoading\">\r\n            <div class=\"row mt-4\" *ngIf=\"!edit\">\r\n\r\n                <div class=\"col-10\">\r\n                    <h2>{{ datafile.title }} (from <a routerLink=\"/workspace/{{workspaceId}}\">\r\n                      {{workspace.title}}\r\n                    </a>)</h2>\r\n                </div>\r\n                <div class=\"col-2 d-flex justify-content-end\">\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEdit()\">\r\n                          <i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"dropdown\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                            <li><a class=\"dropdown-item danger\" (click)=\"onDelete()\">Eliminar Fichero</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\" *ngIf=\"!edit\">\r\n                <div class=\"col\">\r\n                    <p>{{ datafile.description }}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col-2 pe-0\">\r\n                    <h2 class=\"mb-0\">Contenido</h2>\r\n                </div>\r\n                <div class=\"col-10 ps-0\" *ngIf=\"!content\">\r\n                    <div>\r\n                        <form [formGroup]=\"fileForm\" (ngSubmit)=\"onSave()\">\r\n                            <input type=\"file\" (change)=\"onFilePicked($event)\" formControlName=\"contentPath\" class=\"form-control form-control-sm\" name=\"uploaded_file\">\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-10 d-flex justify-content-end ps-0\" *ngIf=\"content\">\r\n                    <div class=\"me-1\">\r\n                        <form [formGroup]=\"fileForm\" (ngSubmit)=\"onSave()\">\r\n                            <input type=\"file\" (change)=\"onFilePicked($event)\" formControlName=\"contentPath\" class=\"form-control form-control-sm\" name=\"uploaded_file\">\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" *ngIf=\"content\" (click)=\"onDownload()\">\r\n                          <i class=\"fas fa-download\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEditContent()\" *ngIf=\"content\">\r\n                        <i class=\"fas fa-pen\"></i>\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onDeleteFile()\" *ngIf=\"content\">\r\n                        <i class=\"fas fa-trash-alt danger\"></i>\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-floating\">\r\n                    <form [formGroup]=\"fileContentForm\">\r\n                        <textarea formControlName=\"fileContent\" class=\"form-control mt-2 pt-1\" id=\"floatingTextarea2\" style=\"height: 400px\"></textarea>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <div *ngIf=\"fileName\">\r\n                        Nombre del archivo: {{fileName}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6 mt-2 d-flex justify-content-end\">\r\n                    <div>\r\n                        <button class=\"btn btn-outline-primary btn-sm\" type=\"submit\" *ngIf=\"content\" [disabled]=\"disabledContent\" (click)=\"onSave()\">Guardar cambios</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <mat-error>\r\n                    <small *ngIf=\"invalidExtension\" class=\"text-danger\">\r\n                              Ingrese un archivo con el formato adecuado (.json o .yaml).\r\n                            </small>\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <div class=\"container ps-0\">\r\n            <app-esquema-list [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [esquemas]=\"esquemas\" [infer]=\"infer\"></app-esquema-list>\r\n        </div>\r\n        <div class=\"container ps-0\">\r\n            <app-configuration-list [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [configurations]=\"configurations\"></app-configuration-list>\r\n        </div>\r\n        <div class=\"container ps-0\">\r\n            <app-test-list [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [tests]=\"tests\" [esquemas]=\"esquemas\" [configurations]=\"formattedConfigs\"></app-test-list>\r\n        </div>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from 'src/app/services/datafiles.service';\r\n\r\n@Component({\r\n  selector: 'app-datafile-create',\r\n  templateUrl: './datafile-create.component.html',\r\n  styleUrls: ['./datafile-create.component.css']\r\n})\r\nexport class DatafileCreateComponent implements OnInit, OnDestroy{\r\n  datafileForm: FormGroup;\r\n  private authStatusSub: Subscription;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  @Input() savefile;\r\n  @Output() savefileChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Input() workspaceId;\r\n  @Input() collections;\r\n\r\n  constructor(public datafileService: DatafileService, public route: ActivatedRoute,\r\n              private formBuilder: FormBuilder, private authService: AuthService) {\r\n                this.createForm();\r\n                this.datafileForm.reset({\r\n                  title: '',\r\n                  description: '',\r\n                  collection: 'Ninguna'\r\n                });\r\n              }\r\n\r\n  ngOnInit(){\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  createForm() {\r\n    this.datafileForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n      collection : ['', ],\r\n    });\r\n  }\r\n  get invalidTitle() {\r\n    return this.datafileForm.get('title').invalid && this.datafileForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.datafileForm.get('description').invalid && this.datafileForm.get('description').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.datafileForm.invalid){\r\n      return Object.values(this.datafileForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.savefileChange.emit(true);\r\n    const values = this.datafileForm.getRawValue();\r\n    if(values.collection==='Ninguna'){\r\n      values.collection = null;\r\n    }\r\n    await this.datafileService.addDatafile(values.title, values.description, values.collection, this.workspaceId);\r\n    this.datafileForm.reset({\r\n      title: '',\r\n      description: '',\r\n      collection: 'Ninguna'\r\n    });\r\n    this.savefileChange.emit(false);\r\n  }\r\n}\r\n","<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Crear fichero de datos</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"datafileForm\" (ngSubmit)=\"onSave()\">\r\n                    <div class=\"mb-3\">\r\n                        <!-- <label class=\"col-form-label\">Título:</label> -->\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                            Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <!-- <label for=\"message-text\" class=\"col-form-label\">Descripción:</label> -->\r\n                        <textarea class=\"form-control\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\"></textarea>\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n                            Ingrese una descripción adecuada\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"col-form-label\">Colección:</label>\r\n                        <div class=\"btn-group ms-2\">\r\n                            <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" formControlName=\"collection\">\r\n                              <option selected> Ninguna </option>\r\n                              <option *ngFor=\"let collection of collections\" value=\"{{collection.id}}\">{{collection.title}}</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!datafileForm.valid\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"datafileForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./src/app/services/roles.service.ts","fs (ignored)","./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","crypto (ignored)","./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","stream (ignored)","./src/app/pages/auth/auth-interceptor.ts","./src/app/services/workspaces.service.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/pages/workspaces/workspace-create/workspace-create.component.ts","./src/app/pages/workspaces/workspace-create/workspace-create.component.html","./src/app/services/configuration.service.ts","./src/app/services/errors.service.ts","./src/app/models/fricErrors.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/invitation/invitation-create/invitation-create.component.ts","./src/app/components/invitation/invitation-create/invitation-create.component.html","./src/app/components/configuration/configuration-create/configuration-create.component.ts","./src/app/components/configuration/configuration-create/configuration-create.component.html","./src/app/pages/posts/post-create/mime-type.validator.ts","./src/app/error-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/tests/test-details/test-details.component.ts","./src/app/pages/tests/test-details/test-details.component.html","./src/app/components/test/test-list/test-list.component.html","./src/app/components/test/test-list/test-list.component.ts","./src/app/pages/workspaces/workspace-list/workspace-list.component.ts","./src/app/pages/workspaces/workspace-list/workspace-list.component.html","./src/app/app.module.ts","./src/app/pages/tests/test-execute/test-execute.component.html","./src/app/pages/tests/test-execute/test-execute.component.ts","./src/app/services/esquemas.service.ts","./src/app/pages/pages.module.ts","./src/app/services/datafiles.service.ts","./src/app/components/collection/collection-create/collection-create.component.ts","./src/app/components/collection/collection-create/collection-create.component.html","./src/app/components/esquemas/esquema-create/esquema-create.component.ts","./src/app/components/esquemas/esquema-create/esquema-create.component.html","./src/app/pages/posts/post-list/post-list.component.html","./src/app/pages/posts/post-list/post-list.component.ts","./src/app/components/configuration/configuration-list/configuration-list.component.ts","./src/app/components/configuration/configuration-list/configuration-list.component.html","./src/app/components/components.module.ts","./src/app/services/posts.service.ts","./src/app/services/collections.service.ts","./src/app/pages/invitations/invitation-list/invitation-list.component.ts","./src/app/pages/invitations/invitation-list/invitation-list.component.html","./src/app/services/auth.service.ts","./src/app/components/test/test-create/test-create.component.ts","./src/app/components/test/test-create/test-create.component.html","./src/app/components/esquemas/esquema-list/esquema-list.component.ts","./src/app/components/esquemas/esquema-list/esquema-list.component.html","./src/app/pages/posts/post-create/post-create.component.ts","./src/app/pages/posts/post-create/post-create.component.html","./src/app/components/workspace/workspace-edit/workspace-edit.component.ts","./src/app/components/workspace/workspace-edit/workspace-edit.component.html","./src/app/services/invitations.service.ts","./src/app/angular-material.module.ts","./src/app/components/datafile/datafile-edit/datafile-edit.component.ts","./src/app/components/datafile/datafile-edit/datafile-edit.component.html","./src/app/services/tests.service.ts","./src/app/pages/workspaces/workspace-details/workspace-details.component.html","./src/app/pages/workspaces/workspace-details/workspace-details.component.ts","./src/app/app-routing.module.ts","./src/app/pages/auth/auth.guard.ts","./src/app/pages/datafiles/datafile-details/datafile-details.component.ts","./src/app/pages/datafiles/datafile-details/datafile-details.component.html","./src/main.ts","./src/app/components/datafile/datafile-create/datafile-create.component.ts","./src/app/components/datafile/datafile-create/datafile-create.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/roles/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class RolesService {\r\n  private workspaces: Workspace[] = [];\r\n  private workspacesUpdated = new Subject<{workspaces: Workspace[], workspaceCount: number}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n\r\n  }\r\n\r\n  deleteRole(id: string){\r\n    return this.http.delete(BACKEND_URL +  id);\r\n  }\r\n}\r\n","/* (ignored) */","<div class=\"m-5\">\n    <div *ngIf=\"!userIsAuthenticated\">\n        <div class=\"m-3\">\n            <h1>Prueba tus tablas!</h1>\n\n            <p class=\"text-align-left\">Ahorra tiempo validando tus tablas de forma rápida y sencilla mediante el uso de TabLab.</p>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  constructor( private authService: AuthService) {\n  }\n\n\n  ngOnInit(): void {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n\n}\n","/* (ignored) */","<nav class=\"navbar navbar-expand-lg navbar-light bg-light p-3\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">TabLab</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li *ngIf=\"userIsAuthenticated\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" routerLink=\"/create\">Nueva publicación</a>\r\n            </li>\r\n            <li *ngIf=\"userIsAuthenticated\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['posts']\">Publicaciones</a>\r\n            </li>\r\n            <li *ngIf=\"userIsAuthenticated\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['workspaces']\">Espacios de Trabajo</a>\r\n            </li>\r\n            <li *ngIf=\"userIsAuthenticated\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['invitations']\">Invitaciones</a>\r\n            </li>\r\n            <!-- <li *ngIf=\"!userIsAuthenticated\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['signup']\">Registro</a>\r\n            </li> -->\r\n\r\n        </ul>\r\n        <form class=\"form-inline\" *ngIf=\"!userIsAuthenticated\">\r\n            <a class=\"btn btn-outline-primary me-2\" routerLinkActive=\"active\" [routerLink]=\"['auth/login']\">Iniciar Sesión</a>\r\n            <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" [routerLink]=\"['auth/signup']\">Registro</a>\r\n        </form>\r\n        <form class=\"form-inline\" *ngIf=\"userIsAuthenticated\">\r\n            <a class=\"btn btn-outline-danger me-2\" routerLinkActive=\"active\" (click)=\"onLogout()\">Cerrar Sesión</a>\r\n        </form>\r\n    </div>\r\n</nav>\r\n","import { Component, OnInit} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit{\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  constructor( private authService: AuthService ) { }\n\n\n  ngOnInit(): void {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n    // localStorage.removeItem('username');\n    // localStorage.removeItem('email');\n  }\n\n}\n","/* (ignored) */","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/workspaces/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class WorkspaceService {\r\n  private workspaces: Workspace[] = [];\r\n  private workspacesUpdated = new Subject<{workspaces: Workspace[], workspaceCount: number}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n\r\n  }\r\n\r\n  getWorkspaces(workspacesPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${workspacesPerPage}&page=${currentPage}`;\r\n    this.http.get<{message: string, workspaces: any, maxWorkspaces: number }>(BACKEND_URL + queryParams)\r\n      .pipe(map( (workspaceData) => {\r\n        return { workspaces: workspaceData.workspaces.map(workspace => {\r\n          return {\r\n            title: workspace.title,\r\n            description: workspace.description,\r\n            id: workspace._id,\r\n            mandatory: workspace.mandatory,\r\n          };\r\n        }),\r\n        maxWorkspaces: workspaceData.maxWorkspaces\r\n      };\r\n      }))\r\n      .subscribe((transformedWorkspaceData) => {\r\n        this.workspaces = transformedWorkspaceData.workspaces;\r\n        this.workspacesUpdated.next({\r\n          workspaces: [...this.workspaces], // para hacer una verdadera copia y no afectar al original\r\n          workspaceCount: transformedWorkspaceData.maxWorkspaces});\r\n    });\r\n  }\r\n\r\n  getWorkspaceUpdateListener() {\r\n    return this.workspacesUpdated.asObservable();\r\n  }\r\n\r\n  getWorkspace(id: string) {\r\n    return this.http.get<{workspace: any, orphanedDatafiles: any[], datafiles: any[], tests: any[]}>(BACKEND_URL + id);\r\n  }\r\n\r\n  addWorkspace( title: string, description: string, invitations: string[]) {\r\n    const workspaceData = {'title': title, 'description': description, 'mandatory': false, 'invitations': invitations};\r\n    console.log(workspaceData);\r\n    this.http.post<{message: string, workspace: Workspace}>(\r\n        BACKEND_URL,\r\n        workspaceData\r\n      )\r\n      .subscribe( responseData => {\r\n        this.router.navigate(['/workspaces']);\r\n    });\r\n\r\n  }\r\n\r\n  updateWorkspace(id: string, title: string, description: string){\r\n    var res;\r\n    const workspace: Workspace = {'title': title, 'description': description, 'mandatory': null};\r\n    this.http.put(BACKEND_URL + id, workspace).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  deleteWorkspace(id: string) {\r\n    return this.http.delete(BACKEND_URL +  id);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { FricError } from 'src/app/models/fricErrors';\n\nconst average = [\n  'mean',\n  'median',\n  'mode'\n];\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api',\n  SOCKET_ENDPOINT: 'http://localhost:3000',\n  errors: [\n    new FricError('duplicate-row', null),\n    new FricError('deviated-value', new DeviatedValueParams('', average, 0))\n  ]\n};\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\nimport { DeviatedValueParams } from '../app/models/fricErrors';\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}){\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>An Error ocurred</h1>\r\n<div mat-dialog-content>\r\n    <p class=\"mat-body-1\">{{ data.message }}</p>\r\n</div>\r\n<div maat-dialog-actions>\r\n    <button mat-button mat-dialog-close>Okay</button>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { WorkspaceService } from 'src/app/services/workspaces.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-workspace-create',\r\n  templateUrl: './workspace-create.component.html',\r\n  styleUrls: ['./workspace-create.component.css']\r\n})\r\nexport class WorkspaceCreateComponent implements OnInit, OnDestroy{\r\n  workspaceForm: FormGroup;\r\n  isLoading = false;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  create = true;\r\n  invitations: string[] = [];\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor( public workspacesService: WorkspaceService, private formBuilder: FormBuilder, private authService: AuthService,\r\n               private router: Router ) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.workspaceForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n      invitations : ['', ],\r\n    });\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.workspaceForm.get('title').invalid && this.workspaceForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.workspaceForm.get('description').invalid && this.workspaceForm.get('description').touched;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.create = false;\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onSave() {\r\n    if (this.workspaceForm.invalid){\r\n      return Object.values(this.workspaceForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.isLoading = true;\r\n    const values = this.workspaceForm.getRawValue();\r\n    this.workspacesService.addWorkspace(values.title, values.description, this.invitations);\r\n    this.isLoading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.workspaceForm.reset();\r\n    this.router.navigate(['/workspaces']);\r\n  }\r\n}\r\n\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<div class=\"row justify-content-sm-center mt-5\" *ngIf=\"!isLoading\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card animate__animated animate__fadeIn animate__faster\">\r\n            <div class=\"card-body\">\r\n                <form class=\"card-body\" [formGroup]=\"workspaceForm\" (ngSubmit)=\"onSave()\">\r\n                    <h2 class=\"card-title\">Nuevo Espacio de Trabajo</h2>\r\n                    <mat-form-field>\r\n                        <input matInput type=\"text\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input matInput type=\"description\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n                              Ingrese una descripción adecuada\r\n                            </small>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <app-invitation-create [(invitations)]=\"invitations\" [create]=\"create\"></app-invitation-create>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col d-flex justify-content-end\">\r\n                            <a class=\"mt-3 me-1 btn btn-outline-secondary btn-block\" *ngIf=\"!isLoading\" (click)=\"onCancel()\">Cancelar</a>\r\n\r\n                            <button type=\"submit\" class=\"mt-3 btn btn-primary btn-block\" *ngIf=\"!isLoading\">Crear</button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Esquema } from '../models/esquema';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/configurations/';\r\nexport interface ConfigForm {\r\n  title: string;\r\n  errorCode: string;\r\n  extraParams: object;\r\n}\r\n@Injectable({providedIn: 'root'})\r\nexport class ConfigurationService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  addConfiguration(values: any, datafileId: string){\r\n    let res;\r\n    console.log(values);\r\n    const configuration = {...values};\r\n    const {title, errorCode, ...extraParams} = configuration;\r\n    const configurationData = {'title': title, 'errorCode': errorCode, 'extraParams': extraParams};\r\n    console.log(configurationData);\r\n\r\n    this.http.post<{message: string, configuration: any}>(\r\n        BACKEND_URL + datafileId,\r\n        configurationData\r\n      )\r\n      .subscribe(\r\n        responseData => {\r\n          // Handle result\r\n          console.log(responseData);\r\n          res = responseData;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n    );\r\n    return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            if (res === undefined) {\r\n              reject('Creating a configuration failed!');\r\n            } else {\r\n              resolve('Configuration added successfully!');\r\n            }\r\n          }, 1000);\r\n        });\r\n  }\r\n\r\n  deleteConfiguration(id: string){\r\n    let res;\r\n    this.http.delete(BACKEND_URL +  id).subscribe( responseData => {\r\n      console.log(responseData);\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  getConfiguration(configurationId: string) {\r\n    // tslint:disable-next-line: max-line-length\r\n    return this.http.get<{configuration: any}>(BACKEND_URL + configurationId);\r\n  }\r\n\r\n  updateConfiguration(configurationId: string, values: any) {\r\n    let res;\r\n    console.log(values);\r\n    const configuration = {...values};\r\n    const {title, errorCode, ...extraParams} = configuration;\r\n    const configurationData = {'title': title, 'errorCode': errorCode, 'extraParams': extraParams};\r\n    console.log(configurationData);\r\n\r\n    this.http.put(BACKEND_URL + configurationId, configurationData).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Esquema } from '../models/esquema';\r\nconst BACKEND_URL = environment.apiUrl + '/errors/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ErrorService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  runTest(workspaceId: string, testId: string){\r\n    const testParams = new HttpParams().set('testId', testId);\r\n    // return this.http.get<{_id: string, title: string, content: string, imagePath: string, creator: string}>\r\n    // let res;\r\n    return this.http.get<{message: any, buffer: any}>(BACKEND_URL + workspaceId, { params: testParams });\r\n    // .subscribe( responseData => {\r\n    //   console.log(responseData);\r\n    //   res = responseData;\r\n    // });\r\n    // return new Promise((resolve, reject) => {\r\n    //   setTimeout(() => {\r\n    //     if (res === undefined) {\r\n    //       reject();\r\n    //     } else {\r\n    //       resolve(res);\r\n    //     }\r\n    //   }, 10000);\r\n    // });\r\n  }\r\n\r\n\r\n}\r\n","// export interface FricError {\r\n//   errorCode: string;\r\n//   extraParams: Map<any, any>;\r\n// }\r\n\r\nexport class FricError {\r\n  errorCode: string;\r\n  extraParams: object;\r\n  constructor(errorCode: string, extraParams: object){\r\n    this.errorCode = errorCode;\r\n    this.extraParams = extraParams;\r\n  }\r\n}\r\n\r\nexport class DeviatedValueParams {\r\n  fieldName: string;\r\n  average: string[];\r\n  interval: number;\r\n  hints: object;\r\n  constructor(fieldName: string, average: string[], interval: number){\r\n    this.fieldName = fieldName;\r\n    this.average = average;\r\n    this.interval = interval;\r\n    this.hints = {'fieldName': 'Debe ingresar el nombre de uno de los campos del contenido del fichero.',\r\n                  'average': '',\r\n                  'interval': 'Este parámetro es numérico y superior o igual a 0.'};\r\n  }\r\n  invalid(paramName: any, value: any){\r\n    if (paramName === 'fieldName') {\r\n      return false;\r\n    }else if (paramName === 'average') {\r\n      return false;\r\n    }else if (paramName === 'interval' && value < 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getHint(paramName: string){\r\n    if (paramName === 'fieldName') {\r\n      return 'Debe ingresar el nombre de uno de los campos del contenido del fichero.';\r\n    }else if (paramName === 'average') {\r\n      return '';\r\n    }else if (paramName === 'interval') {\r\n      return 'Este parámetro es numérico y superior o igual a 0.';\r\n    }else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n  anio: number;\n\n  constructor() {\n    this.anio = new Date().getFullYear();\n  }\n\n}\n","<footer class=\"footer bg-dark text-center\">\n    <div class=\"row justify-content-sm-center\">\n        <p class=\"col-sm-1\">\n            &copy; TabLab {{anio}}\n        </p>\n        <p class=\"col-sm-1\">\n            Términos de Uso\n        </p>\n        <p class=\"col-sm-1\">\n            Privacidad\n        </p>\n\n    </div>\n</footer>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { InvitationService } from '../../../services/invitations.service';\r\n\r\n@Component({\r\n  selector: 'app-invitation-create',\r\n  templateUrl: './invitation-create.component.html',\r\n})\r\nexport class InvitationCreateComponent implements OnInit, OnDestroy{\r\n  invitationForm: FormGroup;\r\n  isLoading = false;\r\n  invalidEmail = false;\r\n  workspaceId;\r\n  @Input() create;\r\n  @Input()  invitations;\r\n  @Output() invitationsChange = new EventEmitter();\r\n  private authStatusSub: Subscription;\r\n\r\n\r\n  constructor(public invitationsService: InvitationService, public authService: AuthService, private formBuilder: FormBuilder,\r\n              private activatedRoute: ActivatedRoute) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.invitationForm = this.formBuilder.group({\r\n      email : ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9._]+\\.[a-z]{2,3}$')]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe( authStatus => {\r\n      // this.isLoading = false;\r\n    });\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.workspaceId = params.get('workspaceId');\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onInvite() {\r\n    if (this.invitationForm.invalid){\r\n    this.invalidEmail = true;\r\n    return Object.values(this.invitationForm.controls).forEach(control => {\r\n      if (control instanceof FormGroup) {\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        Object.values(control.controls).forEach( control => control.markAsTouched());\r\n      } else {\r\n        control.markAsTouched();\r\n      }\r\n    });\r\n    }\r\n    // this.isLoading = true;\r\n    const values = this.invitationForm.getRawValue();\r\n    if ( this.create ) {\r\n\r\n      this.invitations.push(values.email);\r\n      this.invitationsChange.emit(this.invitations);\r\n    }  else {\r\n      this.invitationsService.addInvitation(values.email, this.workspaceId);\r\n    }\r\n    this.invitationForm.reset();\r\n    // this.isLoading = false;\r\n  }\r\n\r\nonReset() {\r\n    this.invitationForm.reset();\r\n  }\r\n\r\n\r\n}\r\n","<form class=\"row mt-2\" [formGroup]=\"invitationForm\" (ngSubmit)=\"onInvite()\">\r\n    <div class=\"row m-0 p-0\" *ngIf=\"!create\">\r\n        <div class=\"col input-group input-group-sm\">\r\n            <input type=\"email\" class=\"form-control\" placeholder=\"Introduce un email...\" formControlName=\"email\" [class.is-invalid]=\"invalidEmail\">\r\n        </div>\r\n    </div>\r\n    <div class=\"input-group\" *ngIf=\"create\">\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Introduce un email...\" formControlName=\"email\" [class.is-invalid]=\"invalidEmail\">\r\n        <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\" type=\"submit\" id=\"button-addon2\">Añadir</button>\r\n    </div>\r\n    <div class=\"row ms-0 mb-2 p-0\">\r\n        <div class=\"col d-flex justify-content-start\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidEmail\" class=\"text-danger\">\r\n                  Ingrese un correo adecuado\r\n                </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 p-0\" *ngIf=\"create\">\r\n        <div class=\"col\">\r\n            <ul class=\"list-group\">\r\n                <div *ngFor=\"let item of invitations\">\r\n                    <li class=\"list-group-item container p-1\">\r\n                        <div class=\"row ps-2 pe-3\">\r\n                            <div class=\"col-10 mt-1\">\r\n                                {{item}}\r\n                            </div>\r\n                            <div class=\"col-2 m-0 p-0 d-flex justify-content-end\">\r\n                                <div>\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">\r\n                                      <i class=\"fas fa-times\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-1 m-0 p-0\" *ngIf=\"!create\">\r\n        <div class=\"col  d-flex justify-content-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\">Invitar</button>\r\n            <a class=\"btn btn-sm btn-secondary\" (click)=\"onReset()\">Cancelar</a>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { FricError } from 'src/app/models/fricErrors';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ConfigurationService } from 'src/app/services/configuration.service';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'app-configuration-create',\r\n  templateUrl: './configuration-create.component.html',\r\n  styleUrls: ['./configuration-create.component.css']\r\n})\r\nexport class ConfigurationCreateComponent implements OnInit, OnDestroy{\r\n  @Input() configurationForm: FormGroup;\r\n  private authStatusSub: Subscription;\r\n  // private fricErrorsSub: Subscription;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  @Input() datafileId;\r\n  @Input() workspaceId;\r\n  @Input() savefile;\r\n  @Input() extraControls: object[] = [];\r\n  @Output() configurationChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() configuration;\r\n  pickedError: any;\r\n  fricErrors: any;\r\n\r\n  constructor(public configurationService: ConfigurationService, public route: ActivatedRoute,\r\n              private usersService: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fricErrors = environment.errors;\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.configurationForm.get('title').invalid && this.configurationForm.get('title').touched;\r\n  }\r\n\r\n  get invalidErrorCode() {\r\n    return this.configurationForm.get('errorCode').invalid && this.configurationForm.get('errorCode').touched;\r\n  }\r\n\r\n  invalidParam(param: any, value: any) {\r\n    let invalid = false;\r\n    if (this.pickedError.extraParams && this.configurationForm.get(param)) {\r\n      invalid = this.pickedError.extraParams.invalid(param, this.configurationForm.get(param).value);\r\n      return (invalid || this.configurationForm.get(param).invalid) && this.configurationForm.get(param).touched;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onErrorPicked(event: Event) {\r\n    const errorCode = (event.target as HTMLInputElement).value;\r\n    const fricError: any = this.fricErrors.find(element => element.errorCode === errorCode);\r\n    this.pickedError = fricError;\r\n    console.log(this.pickedError);\r\n    if (fricError.extraParams) {\r\n      Object.keys(fricError.extraParams).forEach(extraParam => {\r\n        let tipo = '';\r\n        let extraControl = {};\r\n        if ( fricError.extraParams[extraParam].length > 0 ) {\r\n          tipo = 'enum';\r\n          extraControl = {\r\n                          'extraParam': extraParam,\r\n                          'tipo'      : tipo,\r\n                          'enum'      : fricError.extraParams[extraParam],\r\n                          'hint'      : fricError.extraParams.getHint(extraParam)\r\n                         };\r\n        } else if (extraParam !== 'hints') {\r\n          tipo = typeof fricError.extraParams[extraParam];\r\n          extraControl = {\r\n                          'extraParam': extraParam,\r\n                          'tipo'      : tipo,\r\n                          'hint'      : fricError.extraParams.getHint(extraParam)\r\n                         };\r\n        }\r\n\r\n        this.configurationForm.addControl(extraParam, new FormControl('', {validators: [Validators.required]}));\r\n        this.extraControls.push(extraControl);\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.configurationForm.reset();\r\n    this.extraControls.forEach(newControl => {\r\n      this.configurationForm.removeControl(newControl[0]);\r\n    });\r\n    this.configurationChange.emit([]);\r\n  }\r\n\r\n  async onSave() {\r\n    console.log(this.configurationForm.value);\r\n    // if (this.configuration) { // Modo edición\r\n    //   if (this.configurationForm.get('title').invalid) {\r\n    //     this.configurationForm.get('title').markAsTouched();\r\n    //     return;\r\n    //   }\r\n    // } else {\r\n    if (this.configurationForm.invalid){\r\n      return Object.values(this.configurationForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          // tslint:disable-next-line: no-shadowed-variable\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    // }\r\n    const values = this.configurationForm.getRawValue();\r\n    if (this.configuration) {\r\n    // tslint:disable-next-line: max-line-length\r\n      await this.configurationService.updateConfiguration(this.configuration._id, values);\r\n    } else {\r\n      await this.configurationService.addConfiguration(values, this.datafileId);\r\n      // (document.getElementById('esquemaContent') as HTMLInputElement).value = '';\r\n    }\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n    }).catch( err => {\r\n      console.log(err);\r\n    });\r\n\r\n    // Resets\r\n    this.configurationForm.reset();\r\n    this.extraControls.forEach(newControl => {\r\n        this.configurationForm.removeControl(newControl[0]);\r\n      });\r\n    this.configurationChange.emit([]);\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"modal fade\" id=\"configuratioModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title mb-0\" id=\"exampleModalLabel\">Añadir Configuración</h2>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"onCancel()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"configurationForm\" (ngSubmit)=\"onSave()\" novalidate>\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <select class=\"form-select form-select-sm\" formControlName=\"errorCode\" (change)=\"onErrorPicked($event)\" [class.is-invalid]=\"invalidErrorCode\">\r\n                          <option value=\"\" disabled> Código de Error </option>\r\n                          <option *ngFor=\"let fricError of fricErrors\" value=\"{{fricError.errorCode}}\">{{fricError.errorCode}}</option>\r\n                        </select>\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidErrorCode\" class=\"text-danger \">\r\n                            Seleccione un código de error.\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\" *ngFor=\"let extraControl of extraControls\">\r\n                        {{extraControl.extraParam}}\r\n                        <div *ngIf=\"extraControl.tipo === 'string'\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"{{extraControl.extraParam}}\" formControlName=\"{{extraControl.extraParam}}\" [class.is-invalid]=\"invalidParam(extraControl.extraParam)\">\r\n                        </div>\r\n                        <div *ngIf=\"extraControl.tipo === 'enum'\">\r\n                            <select class=\"form-select form-select-sm\" formControlName=\"{{extraControl.extraParam}}\" [class.is-invalid]=\"invalidParam(extraControl.extraParam)\">\r\n                              <option value=\"\" selected> {{extraControl.extraParam}} </option>\r\n                              <option *ngFor=\"let enumVal of extraControl.enum\" value=\"{{enumVal}}\">{{enumVal}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div *ngIf=\"extraControl.tipo === 'number'\">\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"{{extraControl.extraParam}}\" [class.is-invalid]=\"invalidParam(extraControl.extraParam)\">\r\n                        </div>\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidParam(extraControl.extraParam)\" class=\"text-danger\">\r\n                          {{extraControl.hint}}\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"onCancel()\">Cancelar</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"configuration\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Guardar cambios</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!configuration && configurationForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear configuración</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!configuration && !configurationForm.valid\" (click)=\"onSave()\">Crear configuración</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = ( control: AbstractControl ): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof(control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = new Observable( (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener('loadend', () => { // leer comentario de la línea 41\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = '';\r\n        let isValid = false;\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        // csv: 69642c6e\r\n\r\n        switch (header) {\r\n          case '89504e47':\r\n            isValid = true;\r\n            break;\r\n          case 'ffd8ffe0':\r\n          case 'ffd8ffe1':\r\n          case 'ffd8ffe2':\r\n          case 'ffd8ffe3':\r\n          case 'ffd8ffe8':\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file); // esto se llama primero y luego la línea 11\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'An unknown error ocurred!';\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './services/auth.service';\n// import { SocketioService } from './services/socketio.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n    //private socketService: SocketioService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n    //this.socketService.setupSocketConnection();\n\n  }\n\n\n}\n","<app-header></app-header>\n<main class=\"content\">\n    <router-outlet></router-outlet>\n</main>\n<app-footer></app-footer>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { Esquema } from 'src/app/models/esquema';\r\nimport { Test } from '../../../models/test.model';\r\nimport { Configuration } from 'src/app/models/configuration';\r\nimport { TestsService } from 'src/app/services/tests.service';\r\nimport { Datafile } from 'src/app/models/datafile';\r\n\r\n\r\n@Component({\r\n  selector: 'app-test-details',\r\n  templateUrl: './test-details.component.html',\r\n  styleUrls: ['./test-details.component.css']\r\n})\r\nexport class TestDetailsComponent implements OnInit {\r\n  test: Test;\r\n  datafile: Datafile;\r\n  datafileId: string;\r\n\r\n  extension: string = null;\r\n  fileName: string = null;\r\n\r\n  workspaceId: string;\r\n  testId: string;\r\n  isLoading = false;\r\n  isSavingTest = false;\r\n  esquemas: any[];\r\n  selectedEsquema: any;\r\n  configurations: Configuration[] = [];\r\n  selectedConfigurations: string[] = [];\r\n\r\n  fileContentForm: FormGroup;\r\n  testForm: FormGroup;\r\n  edit: boolean;\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(public testsService: TestsService, public datafilesService: DatafileService, public route: ActivatedRoute,\r\n              public usersService: AuthService, private router: Router){\r\n                this.testForm = new FormGroup({\r\n                  'title': new FormControl(null, {validators: [Validators.required]})\r\n                });\r\n                this.fileContentForm = new FormGroup({\r\n                  'fileContent': new FormControl({value: '', disabled: true}),\r\n                });\r\n\r\n  }\r\n  get invalidTitle() {\r\n    return this.testForm.get('title').invalid && this.testForm.get('title').touched;\r\n  }\r\n  ngOnInit(){\r\n    this.isLoading = true;\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.datafileId = paramMap.get('datafileId');\r\n      this.workspaceId = paramMap.get('workspaceId');\r\n      this.testId = paramMap.get('testId');\r\n      this.testsService.getTest(this.testId).subscribe( testData => {\r\n        this.test = testData.test;\r\n        console.log(this.test);\r\n        this.testForm.reset({title: this.test.title});\r\n        this.selectedEsquema = testData.esquema;\r\n        this.selectedConfigurations = testData.configurations;\r\n        console.log(this.selectedEsquema);\r\n        console.log(this.selectedConfigurations);\r\n      });\r\n      this.datafilesService.getDatafile(this.datafileId).subscribe( datafileData => {\r\n        this.fileContentForm.patchValue({fileContent: datafileData.content});\r\n\r\n        this.datafile = datafileData.datafile;\r\n        console.log(this.datafile);\r\n        this.esquemas = datafileData.esquemas;\r\n        console.log(this.esquemas);\r\n        const configsAux = datafileData.configurations;\r\n        console.log(datafileData.configurations);\r\n\r\n        if (this.datafile.contentPath) {\r\n          const nameWExtension = datafileData.datafile.contentPath.split('/');\r\n          const splitNameWExtension = nameWExtension[2].split('.');\r\n          this.extension = splitNameWExtension[1];\r\n\r\n          const extension = '.' + splitNameWExtension[1];\r\n          const nameWDate = nameWExtension[2].split('-');\r\n          const name = nameWDate[0];\r\n          this.fileName = name + extension;\r\n        }\r\n\r\n        configsAux.forEach(config => {\r\n          const extraParamsJSON = JSON.stringify(config.extraParams).toString();\r\n          const extraParamsStr1 = extraParamsJSON.replace(/{/g, '');\r\n          const extraParamsStr2 = extraParamsStr1.replace(/}/g, '');\r\n          const extraParamsStr = extraParamsStr2.replace(/,/g, ',\\n');\r\n          this.configurations.push({...config, extraParamsStr});\r\n        });\r\n        this.isLoading = false;\r\n        this.edit = false;\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  async onDelete(){\r\n    this.isLoading = true;\r\n    await this.testsService.deleteTest(this.testId);\r\n    // /workspace/{{workspaceId}}/datafile/{{datafileId}}/test/{{test._id}}\r\n    this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n  }\r\n\r\n  onEdit() {\r\n    this.edit = true;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.testForm.invalid){\r\n      return Object.values(this.testForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.isSavingTest = true;\r\n    const values = this.testForm.getRawValue();\r\n    // tslint:disable-next-line: max-line-length\r\n    await this.testsService.updateTest(this.testId, values.title, this.test.esquema, this.selectedConfigurations, '');\r\n    this.testForm.reset({});\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}/test/${this.testId}`]);\r\n    }).catch( err => {\r\n      console.log(err);\r\n    });\r\n    this.isSavingTest = false;\r\n  }\r\n\r\n  async onSaveContent() {\r\n    let file: any;\r\n    const content = this.fileContentForm.value.fileContent;\r\n    if (this.extension === 'csv') {\r\n      const blob = new Blob([content], {type: 'text/csv' });\r\n      file = new File([blob], this.fileName, {type: 'text/csv'});\r\n    } else if (this.extension === 'xlsx') {\r\n      const rows = content.split('\\n').map(row => {\r\n        return row.split(',');\r\n      });\r\n      const worksheetName = this.fileName;\r\n      const wsorksheetContent = XLSX.utils.aoa_to_sheet(rows);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n      const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n      // tslint:disable-next-line: max-line-length\r\n      const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n      console.log(data);\r\n      // tslint:disable-next-line: max-line-length\r\n      file = new File([data], this.fileName, { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n      console.log(file);\r\n    } else {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    await this.datafilesService.updateDatafile( this.datafileId, this.datafile.title, this.datafile.description, file, 'updateContent');\r\n    this.fileContentForm.get('fileContent').disable();\r\n    this.isLoading = false;\r\n  }\r\n\r\n  async onEsquemaPicked(event: Event) {\r\n    const esquemaId = (event.target as HTMLInputElement).value;\r\n    if (esquemaId){\r\n      // tslint:disable-next-line: max-line-length\r\n      await this.testsService.updateTest(this.testId, this.test.title, esquemaId, this.selectedConfigurations, '');\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}/test/${this.testId}`]);\r\n      }).catch( err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  checkConfig(configId: string){\r\n    return this.selectedConfigurations.includes(configId);\r\n  }\r\n\r\n  async onConfigurationPicked(event: Event) {\r\n    const configurationId = (event.target as HTMLInputElement).value;\r\n    const checked: boolean = (event.target as HTMLInputElement).checked;\r\n    const index: number = this.selectedConfigurations.indexOf(configurationId);\r\n    if (checked && index < 0) {\r\n      console.log(configurationId);\r\n      this.selectedConfigurations.push(configurationId);\r\n      // tslint:disable-next-line: max-line-length\r\n      await this.testsService.updateTest(this.testId, this.test.title, this.test.esquema, this.selectedConfigurations, '');\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}/test/${this.testId}`]);\r\n      }).catch( err => {\r\n        console.log(err);\r\n      });\r\n    } else if (!checked && index >= 0) {\r\n      console.log(configurationId);\r\n      this.selectedConfigurations.splice(index, 1);\r\n      // tslint:disable-next-line: max-line-length\r\n      await this.testsService.updateTest(this.testId, this.test.title, this.test.esquema, this.selectedConfigurations, '');\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}/test/${this.testId}`]);\r\n      }).catch( err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  onEditContent() {\r\n    if (this.fileContentForm.get('fileContent').disabled) {\r\n      this.fileContentForm.get('fileContent').enable();\r\n    } else {\r\n      this.fileContentForm.get('fileContent').disable();\r\n    }\r\n  }\r\n\r\n  onDownload() {\r\n    if (this.extension === 'xlsx') {\r\n      const worksheetName = this.fileName;\r\n      const wsorksheetContent = XLSX.utils.aoa_to_sheet(this.fileContentForm.value.fileContent);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n      XLSX.writeFile(workbook, this.fileName); // downloads it\r\n      const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n      // tslint:disable-next-line: max-line-length\r\n      const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n      console.log(data);\r\n      const file: File = new File([data], 'out.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n      console.log(file);\r\n    } else if (this.extension === 'csv') {\r\n      const blob = new Blob([this.fileContentForm.value.fileContent], {type: 'text/csv' })\r\n      saveAs(blob, this.fileName);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  onCancelTestForm(){\r\n    this.edit = false;\r\n    this.testForm.reset({title: this.test.title});\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row complete-height\">\r\n    <div class=\"col-2\">\r\n    </div>\r\n    <div class=\"col-7\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n        <!-- <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" *ngIf=\"!isSavingTest && infer\" (click)=\"onInfer()\">\r\n          Inferir Esquema\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" disabled *ngIf=\"isSavingTest\">\r\n          Inferir Esquema\r\n          <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        </button> -->\r\n        <div class=\"container mt-4\">\r\n            <div class=\"row ms-0 me-0 mb-1 p-0\" *ngIf=\"edit && !isLoading\">\r\n                <form [formGroup]=\"testForm\" class=\"p-0\" (ngSubmit)=\"onSave()\">\r\n                    <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"row ms-0 me-0 mt-1 mb-1 p-0\">\r\n                        <div class=\"col ps-0 pe-0 d-flex justify-content-end\">\r\n                            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\" *ngIf=\"!isSavingTest\">Guardar</button>\r\n                            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\" *ngIf=\"isSavingTest\" disabled>\r\n                              Guardar\r\n                              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                            </button>\r\n\r\n                            <a class=\"btn btn-sm btn-secondary\" (click)=\"onCancelTestForm()\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"row mt-4\" *ngIf=\"!isLoading && !edit\">\r\n                <div class=\"col-10\">\r\n                    <h2>{{ test.title }} (from <a routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafileId}}\">\r\n                      {{datafile.title}}</a>)</h2>\r\n                </div>\r\n                <div class=\"col-2 d-flex justify-content-end\">\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEdit()\">\r\n                          <i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"dropdown\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                            <li><a class=\"dropdown-item\" routerLink=\"/workspace/{{workspaceId}}/runner/{{test._id}}\">Ejecutar Prueba</a></li>\r\n                            <li><a class=\"dropdown-item danger\" (click)=\"onDelete()\">Eliminar Prueba</a></li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col-9\">\r\n                    <h2 class=\"mb-0\">Contenido del fichero</h2>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\" *ngIf=\"datafile.contentPath\">\r\n                    <div>\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onDownload()\">\r\n                          <i class=\"fas fa-download\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"ms-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEditContent()\">\r\n                        <i class=\"fas fa-pen\"></i>\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-floating\">\r\n                    <form [formGroup]=\"fileContentForm\">\r\n                        <textarea formControlName=\"fileContent\" class=\"form-control mt-2 pt-1\" id=\"floatingTextarea2\" style=\"height: 400px\"></textarea>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <div *ngIf=\"fileName\">\r\n                        Nombre del archivo: {{fileName}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6 mt-2 d-flex justify-content-end\">\r\n                    <div *ngIf=\"datafile.contentPath\">\r\n                        <button class=\"btn btn-outline-primary btn-sm me-1\" routerLink=\"/workspace/{{workspaceId}}/runner/{{test._id}}\">Ejecutar Prueba</button>\r\n                        <button class=\"btn btn-outline-primary btn-sm\" type=\"submit\" (click)=\"onSaveContent()\">Guardar cambios</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <div class=\"container mt-4 ps-0\">\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                    <h2>Stats</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col-4 pe-0\">\r\n                    <h2>Esquema</h2>\r\n                </div>\r\n                <div class=\"col-8\">\r\n                    <select class=\"form-select form-select-sm\" (change)=\"onEsquemaPicked($event)\">\r\n                      <option value=\"None\" selected *ngIf=\"!selectedEsquema\"> ----- </option> -->\r\n                      <option *ngFor=\"let esquema of esquemas\" [selected]=\"selectedEsquema && esquema._id == selectedEsquema._id\" value=\"{{esquema._id}}\">{{esquema.title}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col-4 pe-0\">\r\n                    <h2>Configuraciones</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1 pe-2\">\r\n                <div class=\"col p-0\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row p-2 border-header\">\r\n                            <div class=\"col-3 d-flex justify-content-start\">\r\n                                <div>Título</div>\r\n                            </div>\r\n                            <div class=\"col-4 d-flex justify-content-center\">\r\n                                <div>Código de Error</div>\r\n                            </div>\r\n                            <div class=\"col-4 d-flex justify-content-center\">\r\n                                <div>Parámetros</div>\r\n                            </div>\r\n                            <div class=\"col-1\">\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-0 p-2 border-content\">\r\n                            <div class=\"col\">\r\n                                <div class=\"row mt-1 mb-1\" *ngFor=\"let configuration of configurations\">\r\n                                    <div class=\"col-3 d-flex justify-content-start\">\r\n                                        <div>{{configuration.title}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-4 d-flex justify-content-center\">\r\n                                        <div>{{configuration.errorCode}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-4 d-flex justify-content-center\">\r\n                                        <div>\r\n                                            <button class=\"btn btn-outline-light btn-sm\" type=\"button\" matTooltip=\"{{configuration.extraParamsStr || '-'}}\">\r\n                                          <i class=\"far fa-eye\"></i>\r\n                                        </button></div>\r\n                                    </div>\r\n                                    <div class=\"col-1 d-flex justify-content-center\">\r\n                                        <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" value=\"{{configuration._id}}\" id=\"flexCheckDefault\" (change)=\"onConfigurationPicked($event)\" [checked]=\"checkConfig(configuration._id)\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<div class=\"row mt-4\">\r\n    <div class=\"col-5\">\r\n        <h2>Pruebas</h2>\r\n    </div>\r\n    <div class=\"col-7 d-flex justify-content-end\">\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#testCreateModal\" *ngIf=\"!savefileChange\">\r\n              Añadir prueba\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" disabled *ngIf=\"savefileChange\">\r\n              Añadir prueba\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n            <!-- [esquemaForm]=\"esquemaForm\" (savefileChange)=\"setSaveMode($event)\" (esquemaChange)=\"setEsquema($event)\"-->\r\n            <app-test-create [workspaceId]=\"workspaceId\" [datafileId]=\"datafileId\" [test]=\"test\" [esquemas]=\"esquemas\" [configurations]=\"configurations\"></app-test-create>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2 mb-4\">\r\n    <div class=\"col p-0\">\r\n        <div class=\"container\">\r\n            <div class=\"row border-header p-2\">\r\n                <div class=\"col-3 d-flex justify-content-start\">\r\n                    <div>Título</div>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-center\">\r\n                    <div>Última modificación</div>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\">\r\n                    <div>Opciones</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-0 p-2 border-content\">\r\n                <div class=\"col\">\r\n                    <div class=\"row mt-1 mb-1\" *ngFor=\"let test of tests\">\r\n                        <div class=\"col-3 d-flex justify-content-start pt-2 pe-0\">\r\n                            <div>{{test.title}}</div>\r\n                        </div>\r\n                        <div class=\"col-6 d-flex justify-content-center pt-2\">\r\n                            <div>{{test.updateMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-end pe-4\">\r\n                            <div class=\"dropdown\">\r\n                                <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                              <i class=\"fas fa-ellipsis-h\"></i>\r\n                                            </button>\r\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    <li><a class=\"dropdown-item\" data-bs-toggle=\"modal\" routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafileId}}/test/{{test._id}}\">Editar Prueba</a></li>\r\n                                    <li><a class=\"dropdown-item danger\" (click)=\"onDelete(test._id)\">Eliminar Prueba</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { TestsService } from '../../../services/tests.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-test-list',\r\n  templateUrl: './test-list.component.html',\r\n  styleUrls: ['./test-list.component.css']\r\n})\r\nexport class TestListComponent implements OnInit, OnDestroy{\r\n  isDeleting = false;\r\n  @Input() datafileId: string;\r\n  @Input() workspaceId: string;\r\n  @Input() tests: any[];\r\n  @Input() test;\r\n  @Input() esquemas: any[];\r\n  @Input() configurations: any[];\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n\r\n  // Para editar\r\n  testForm: FormGroup;\r\n  savefileChange = false;\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(public datafilesService: DatafileService, public route: ActivatedRoute, public usersService: AuthService,\r\n              private router: Router, public testsService: TestsService){\r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    // console.log(this.esquemasSub);\r\n    // this.testsSub.unsubscribe();\r\n    // this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onDelete( testId: string ){\r\n    await this.testsService.deleteTest(testId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {});\r\n  }\r\n\r\n\r\n  // setSaveMode(newvalue: boolean) {\r\n  //   this.savefileChange = newvalue;\r\n  // }\r\n\r\n  // onEdit(esquemaId: string) {\r\n\r\n  //   this.esquemasService.getEsquema(esquemaId).subscribe(esquemaData => {\r\n  //     this.esquema = esquemaData.esquema;\r\n  //     this.esquemaForm.get('esquemaContent').enable();\r\n  //     this.esquemaForm.patchValue({title: esquemaData.esquema.title, esquemaContent: esquemaData.content});\r\n  //     (document.getElementById('esquemaContent') as HTMLInputElement).value = this.esquemaForm.get('esquemaPath').value;\r\n  //     // document.getElementById('contentEsquema').innerHTML = esquemaData.content;\r\n  //     // let chain = '';\r\n  //     // for (const data of esquemaData.content){\r\n  //     //     chain = chain + data + '\\n';\r\n  //     // }\r\n  //     // chain;\r\n  //  });\r\n  // }\r\n\r\n  // setEsquema(newvalue: any) {\r\n  //   this.esquema = newvalue;\r\n  // }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Workspace } from 'src/app/models/workspace.model';\nimport { WorkspaceService } from '../../../services/workspaces.service';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n@Component({\n  selector: 'app-workspace-list',\n  templateUrl: './workspace-list.component.html',\n  styleUrls: ['./workspace-list.component.css']\n})\nexport class WorkspaceListComponent implements OnInit, OnDestroy{\n  displayedColumns: string[] = ['title', 'description', 'creationMoment', 'users'];\n  clickedRows = new Set<Workspace>();\n  // dataSource = [];\n  isLoading = false;\n  workspaces: Workspace[] = [];\n  totalWorkspaces = 0;\n  workspacesPerPage = 2;\n  currentPage = 1;\n  dataSource = null;\n  pageSizeOptions = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userId: string;\n  private workspacesSub: Subscription;\n  private authStatusSub: Subscription;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor( public workspacesService: WorkspaceService, private authService: AuthService) { }\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.workspacesService.getWorkspaces(this.workspacesPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    // this.workspaces = this.postsService.getPosts();\n    // tslint:disable-next-line: deprecation\n    this.workspacesSub = this.workspacesService.getWorkspaceUpdateListener()\n    .subscribe( (workspaceData: {workspaces: Workspace[], workspaceCount: number}) => {\n      this.isLoading = false;\n      this.totalWorkspaces = workspaceData.workspaceCount;\n      this.workspaces = workspaceData.workspaces;\n\n      // console.log('On Init');\n      // console.log(this.totalWorkspaces);\n      // console.log(this.workspaces);\n      const dataSource = new MatTableDataSource(this.workspaces);\n      dataSource.sort = this.sort;\n      // console.log('Ng After Init');\n      // console.log(dataSource.data);\n      // console.log(dataSource.sort);\n      });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  onChangedPage( pageData: PageEvent ) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.workspacesPerPage = pageData.pageSize;\n    this.workspacesService.getWorkspaces(this.workspacesPerPage, this.currentPage);\n    console.log('New call');\n    console.log(pageData);\n    console.log('Current page: '+ this.currentPage);\n    console.log('Workspace per page: '+ this.workspacesPerPage);\n\n  }\n\n  ngOnDestroy() {\n    this.workspacesSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-9 col-auto \">\n            <div class=\"row\">\n                <div class=\"col-8\">\n                    <h2>Espacios de trabajo</h2>\n                </div>\n                <div class=\"col-4 d-flex justify-content-end\">\n                    <div>\n                        <a class=\"btn btn-outline-primary btn-sm\" [routerLink]=\"['/workspace/create']\">\n                          Nuevo Espacio de Trabajo\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n            <table mat-table [dataSource]=\"workspaces\" matSort class=\"mat-elevation-z1 \">\n                <ng-container matColumnDef=\"title\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Título </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"description\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripción </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"creationMoment\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de creación </th>\n                    <td mat-cell *matCellDef=\"let element\"> Fecha de creación </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"users\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Miembros </th>\n                    <td mat-cell *matCellDef=\"let element\"> Lista de los iconos de los miembros </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row [routerLink]=\"['/workspace', row.id]\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <div class=\"row justify-content-center\">\n                <mat-paginator class=\"col-auto\" [length]=\"totalWorkspaces\" [pageSize]=\"workspacesPerPage\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"onChangedPage($event)\" *ngIf=\"workspaces.length > 0\"></mat-paginator>\n                <!-- <mat-paginator class=\"col-auto\" [pageSizeOptions]=\"[1,4,6]\" *ngIf=\"workspaces.length > 0\"></mat-paginator> -->\n            </div>\n        </div>\n    </div>\n</div>\n<p class=\" info-text mat-body-1 \" *ngIf=\"workspaces.length <=0 && !isLoading \">No se han añadido espacios de trabajo aún!</p>\n","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n// import { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './pages/home/home.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { AuthInterceptor } from './pages/auth/auth-interceptor';\nimport { PagesModule } from './pages/pages.module';\nimport { ComponentsModule } from './components/components.module';\n\nimport { registerLocaleData } from '@angular/common';\nimport localEs from '@angular/common/locales/es';\n// import { SocketioService } from './services/socketio.service';\nregisterLocaleData(localEs);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PagesModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    {\n      provide: LOCALE_ID,\n      useValue: 'es'\n    },\n    //SocketioService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","<div class=\"row complete-height\">\r\n    <div class=\"col-2\">\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n\r\n        <div class=\"container mt-4\">\r\n            <div class=\"row mt-4\" *ngIf=\"!isLoading\">\r\n                <div class=\"col-6\">\r\n                    <h2>Runner</h2>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-end\">\r\n                    <div>\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" *ngIf=\"!inExecution\" (click)=\"onExecute()\">\r\n                          <i class=\"fas fa-play\"></i>\r\n                        Ejecutar\r\n                        </button>\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" *ngIf=\"inExecution\">\r\n                          <!-- <i class=\"fas fa-play\"></i> -->\r\n                          Stop<i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col-6\">\r\n                    <h2 class=\"mb-0\">Orden de Ejecución</h2>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-end\">\r\n                    <div>\r\n                        <a>Deseleccionar todos</a>\r\n                    </div>\r\n                    <div class=\"ms-1\">\r\n                        <a>Seleccionar todos</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"container overflow-auto my-scrollbar\">\r\n                        <div class=\"row pt-2\" *ngFor=\"let datafile of datafilesWTests\">\r\n                            <div class=\"col-8 pt-2 pb-1\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"datafileCheck\" value=\"{{datafile.datafile._id}}\" [checked]=\"checkDatafile(datafile.datafile._id)\">\r\n                                    <label class=\"form-check-label\" for=\"datafileCheck\">\r\n                                      {{datafile.datafile.title}}\r\n                                    </label>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"col-4 pt-1 pb-1 justify-content-end\">\r\n                                <div>\r\n                                    <select class=\"form-select form-select-sm\" (change)=\"onTestPicked($event)\">\r\n                                      <!-- <option value=\"{{selectedTest._id}}\" selected *ngIf=\"selectedTest in datafile.tests\"> {{selectedTest.title}} </option> --> -->\r\n                                      <option *ngFor=\"let test of datafile.tests\" ng-selected=\"{{selectedTest == test}}\" value=\"{{test._id}}\">{{test.title}}</option>\r\n\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col d-flex justify-content-start\">\r\n                    <h2 class=\"mb-0\">Terminal</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"container overflow-auto my-scrollbar-terminal\">\r\n                        <div *ngFor=\"let line of terminal\">\r\n                            {{line}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"container mt-4 ps-0\">\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                    <h2>Stats</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col pe-0\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row mt-4 pe-2\">\r\n                <div class=\"col-4 pe-0\">\r\n                    <h2>Pruebas</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1 pe-2\">\r\n                <div class=\"col p-0\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row p-2 border-header\">\r\n                            <div class=\"col-3 d-flex justify-content-start\">\r\n                                <div>Título</div>\r\n                            </div>\r\n                            <div class=\"col-2 d-flex justify-content-center\">\r\n                                <div>Estado</div>\r\n                            </div>\r\n                            <div class=\"col-2 d-flex justify-content-center\">\r\n                                <div>Errores</div>\r\n                            </div>\r\n                            <div class=\"col-3 d-flex justify-content-center\">\r\n                                <div>Fecha</div>\r\n                            </div>\r\n                            <div class=\"col-2 d-flex justify-content-center\">\r\n                                <div>Acciones</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-0 p-2 border-content\">\r\n                            <div class=\"col\">\r\n                                <div class=\"row mt-1 mb-1\" *ngFor=\"let test of tests\">\r\n                                    <div class=\"col-3 d-flex justify-content-start\">\r\n                                        <div>{{test.title}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-2 d-flex justify-content-center\">\r\n                                        <div>{{test.status}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-2 d-flex justify-content-center\">\r\n                                        <div *ngIf=\"test.totalErrors\">{{test.totalErrors}}</div>\r\n                                        <div *ngIf=\"!test.totalErrors\">NA</div>\r\n                                    </div>\r\n                                    <div class=\"col-3 d-flex justify-content-center\">\r\n                                        <div>{{test.executionMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                                    </div>\r\n                                    <div class=\"col-2 d-flex justify-content-center\">\r\n                                        <div>\r\n                                            <button class=\"btn btn-outline-light btn-sm\" type=\"button\">\r\n                                              <i class=\"fas fa-download\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { TestsService } from 'src/app/services/tests.service';\r\nimport { Datafile } from 'src/app/models/datafile';\r\nimport { ErrorService } from '../../../services/errors.service';\r\nimport { CollectionsService } from '../../../services/collections.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { WorkspaceService } from '../../../services/workspaces.service';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\nimport { Collection } from 'src/app/models/collection';\r\nimport { Test } from 'src/app/models/test.model';\r\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\nimport { Injectable } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { map } from 'rxjs/operators';\r\n//import { SocketioService } from 'src/app/services/socketio.service';\r\n\r\n@Component({\r\n  selector: 'app-test-execute',\r\n  templateUrl: './test-execute.component.html',\r\n  styleUrls: ['./test-execute.component.css']\r\n})\r\nexport class TestExecuteComponent implements OnInit, OnDestroy {\r\n\r\n  // test: Test;\r\n  // datafile: Datafile;\r\n  // datafileId: string;\r\n  workspace: Workspace;\r\n  selectedTest: Test;\r\n  workspaceId: string;\r\n  testId: string;\r\n  isLoading = false;\r\n  collections: any[];\r\n  private collectionsSub: Subscription;\r\n  orphanedDatafiles: Datafile[];\r\n  datafilesWTests: any[];\r\n  tests: any[];\r\n  selectedTests: any[] = [];\r\n  selectedDatafile;\r\n  inExecution = false;\r\n  terminal: any[] = [];\r\n\r\n\r\n  // // tslint:disable-next-line: max-line-length\r\n  constructor(public testsService: TestsService, public collectionsService: CollectionsService, public route: ActivatedRoute,\r\n              public workspacesService: WorkspaceService, public errorsService: ErrorService,\r\n              //private socketService: SocketioService\r\n              ){\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.collectionsSub.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(){\r\n    //this.socketService.emitMessage();\r\n\r\n    this.isLoading = true;\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.workspaceId = paramMap.get('workspaceId');\r\n      if (paramMap.get('testId')) {\r\n        this.testId = paramMap.get('testId');\r\n        this.testsService.getTest(this.testId).subscribe( testData => {\r\n          this.selectedTest = testData.test;\r\n          this.selectedDatafile = testData.test.datafile;\r\n          this.selectedTests.push(this.selectedTest);\r\n        });\r\n      }\r\n      // Workspace and orphaned datafiles\r\n      this.workspacesService.getWorkspace(this.workspaceId).subscribe(workspaceData => {\r\n        this.isLoading = false;\r\n        this.workspace = {\r\n          title: workspaceData.workspace.title,\r\n          description: workspaceData.workspace.description,\r\n          mandatory: workspaceData.workspace.mandatory\r\n        };\r\n        this.orphanedDatafiles = workspaceData.orphanedDatafiles;\r\n        this.datafilesWTests = workspaceData.datafiles;\r\n        this.tests = workspaceData.tests;\r\n        console.log(this.tests);\r\n      });\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onTestPicked(event: Event) {\r\n\r\n  }\r\n\r\n  onDatafilePicked(event: Event) {\r\n\r\n  }\r\n\r\n  checkDatafile(datafileId: string){\r\n    return this.selectedDatafile === datafileId;\r\n  }\r\n\r\n  checkTest(datafileId: string){\r\n    return this.selectedDatafile === datafileId;\r\n  }\r\n\r\n  onExecute(){\r\n    this.inExecution = true;\r\n    this.selectedTests.forEach(async test => {\r\n      console.log(test);\r\n      this.errorsService.runTest(this.workspaceId, test._id).subscribe( response => {\r\n        console.log(response);\r\n        const lines = response.buffer.split('\\r\\n');\r\n        console.log(lines);\r\n        for (const line of lines) {\r\n          this.terminal.push(line);\r\n        }\r\n        console.log(this.terminal);\r\n        // this.terminal = response.buffer;\r\n        this.testsService.updateTest(test._id, test.title, test.esquema, test.configurations, 'execute');\r\n\r\n        this.inExecution = false;\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Esquema } from '../models/esquema';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/esquemas/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EsquemaService {\r\n  private esquemas: Esquema[] = [];\r\n  private esquemasUpdated = new Subject<{esquemas: Esquema[]}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getEsquemaUpdateListener() {\r\n    return this.esquemasUpdated.asObservable();\r\n  }\r\n\r\n  getEsquemas(datafileId: string) {\r\n    console.log(datafileId);\r\n    const datafileParams = new HttpParams().set('datafileId', datafileId);\r\n\r\n    this.http.get<{message: string, esquemas: any}>(BACKEND_URL, { params: datafileParams })\r\n      .pipe(map( (esquemaData) => {\r\n        return { esquemas: esquemaData.esquemas.map(esquema => {\r\n          return {\r\n            id: esquema._id,\r\n            title: esquema.title,\r\n            contentPath: esquema.contentPath,\r\n            creationMoment: esquema.creationMoment,\r\n            datafile: esquema.datafile,\r\n          };\r\n        }),\r\n      };\r\n      }))\r\n      .subscribe((transformedEsquemaData) => {\r\n        this.esquemas = transformedEsquemaData.esquemas;\r\n        this.esquemasUpdated.next({\r\n          esquemas: [...this.esquemas], // para hacer una verdadera copia y no afectar al original\r\n      });\r\n    });\r\n  }\r\n\r\n  addEsquema(title: string, esquemaContent: string, fileName: string, datafileId: string, workspaceId:string){\r\n    let res;\r\n    const esquemaData = {'title': title, 'esquemaContent': esquemaContent, 'fileName': fileName};\r\n    this.http.post<{message: string, esquema: Esquema}>(\r\n        BACKEND_URL + datafileId,\r\n        esquemaData\r\n      )\r\n      .subscribe(\r\n        responseData => {\r\n          // Handle result\r\n          console.log(responseData);\r\n          res = responseData;\r\n          this.router.navigateByUrl('/', {skipLocationChange: true})\r\n            .then(() => {\r\n              this.router.navigate([`/workspace/${workspaceId}/datafile/${datafileId}`]);\r\n            }).catch( err => {});\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n    );\r\n    // return new Promise((resolve, reject) => {\r\n    //       setTimeout(() => {\r\n    //         if (res === undefined) {\r\n    //           reject('Creating a esquema failed!');\r\n    //         } else {\r\n    //           resolve('Esquema added successfully!');\r\n    //         }\r\n    //       }, 2000);\r\n    //     });\r\n  }\r\n\r\n  deleteEsquema(id: string){\r\n    let res;\r\n    this.http.delete(BACKEND_URL +  id).subscribe( responseData => {\r\n      console.log(responseData);\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  getEsquema(esquemaId: string) {\r\n    // tslint:disable-next-line: max-line-length\r\n    console.log(esquemaId);\r\n    return this.http.get<{esquema: any, content: any}>(BACKEND_URL + esquemaId);\r\n  }\r\n\r\n  updateEsquema(esquemaId: string, title: string, contentPath: string, esquemaContent: string) {\r\n    let res;\r\n    const esquemaData = {'title': title, 'contentPath': contentPath, 'esquemaContent': esquemaContent};\r\n    console.log(esquemaContent);\r\n    this.http.put(BACKEND_URL + esquemaId, esquemaData).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { WorkspaceListComponent } from './workspaces/workspace-list/workspace-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { InvitationListComponent } from './invitations/invitation-list/invitation-list.component';\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { WorkspaceCreateComponent } from './workspaces/workspace-create/workspace-create.component';\r\nimport { WorkspaceDetailsComponent } from './workspaces/workspace-details/workspace-details.component';\r\nimport { DatafileDetailsComponent } from './datafiles/datafile-details/datafile-details.component';\r\nimport { TestDetailsComponent } from './tests/test-details/test-details.component';\r\nimport { TestExecuteComponent } from './tests/test-execute/test-execute.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    WorkspaceDetailsComponent,\r\n    WorkspaceListComponent,\r\n    WorkspaceCreateComponent,\r\n    InvitationListComponent,\r\n    PostCreateComponent,\r\n    PostListComponent,\r\n    DatafileDetailsComponent,\r\n    TestDetailsComponent,\r\n    TestExecuteComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule,\r\n    ComponentsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Datafile } from '../models/datafile';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/datafiles/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DatafileService {\r\n\r\n  private datafiles: Datafile[] = [];\r\n  private datafilesUpdated = new Subject<{datafiles: Datafile[]}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n\r\n  }\r\n\r\n  getDatafileUpdateListener() {\r\n    return this.datafilesUpdated.asObservable();\r\n  }\r\n\r\n  addDatafile( title: string, description: string, collectionId: string, workspaceId: string) {\r\n    let res;\r\n    let collectionIdUpdated = collectionId;\r\n    if (collectionId === 'Ninguna') {\r\n      collectionIdUpdated = null;\r\n    }\r\n    const datafileData = {'title': title, 'description': description, collection: collectionIdUpdated, workspace: workspaceId};\r\n    console.log(datafileData);\r\n    this.http.post<{message: string, datafile: Datafile}>(\r\n        BACKEND_URL,\r\n        datafileData\r\n      )\r\n      .subscribe( responseData => {\r\n        console.log(responseData);\r\n        res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            if (res === undefined) {\r\n              reject();\r\n            } else {\r\n              resolve(true);\r\n            }\r\n          }, 1000);\r\n        });\r\n  }\r\n\r\n  getOrphanedDatafiles(workspaceId: string) {\r\n    this.http.get<{message: string, datafiles: any}>(BACKEND_URL)\r\n      .pipe(map( (datafileData) => {\r\n        return { datafiles: datafileData.datafiles.map(datafile => {\r\n          return {\r\n            id: datafile._id,\r\n            title: datafile.title,\r\n            description: datafile.description,\r\n            content: datafile.content,\r\n            errorLimit: datafile.errorLimit,\r\n            delimiter: datafile.delimiter,\r\n            collection: datafile.collection,\r\n            workspace: datafile.workspace,\r\n          };\r\n        }),\r\n      };\r\n      }))\r\n      .subscribe((transformedDatafileData) => {\r\n        this.datafiles = transformedDatafileData.datafiles;\r\n        this.datafilesUpdated.next({\r\n          datafiles: [...this.datafiles], // para hacer una verdadera copia y no afectar al original\r\n    });\r\n  });\r\n}\r\n\r\n  getDatafile(datafileId: string) {\r\n    // tslint:disable-next-line: max-line-length\r\n    return this.http.get<{datafile: any, content: any, esquemas: any, configurations: any, tests: any}>(BACKEND_URL + datafileId);\r\n  }\r\n\r\n\r\n  deleteDatafile(datafileId: string) {\r\n    let res;\r\n    this.http.delete(BACKEND_URL +  datafileId).subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n\r\n  updateDatafile(datafileId: string, title: string, description: string, file: File | string, operation: string) {\r\n    let res;\r\n    console.log('File Raw');\r\n    console.log(file);\r\n\r\n    const datafileData = new FormData();\r\n    datafileData.append('title', title);\r\n    datafileData.append('description', description);\r\n    datafileData.append('file', file);\r\n    datafileData.append('operation', operation);\r\n\r\n    console.log('Datafile Data');\r\n    console.log(datafileData);\r\n    this.http.put(BACKEND_URL + datafileId, datafileData).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CollectionsService } from 'src/app/services/collections.service';\r\n\r\n@Component({\r\n  selector: 'app-collection-create',\r\n  templateUrl: './collection-create.component.html',\r\n})\r\nexport class CollectionCreateComponent implements OnInit, OnDestroy{\r\n  collectionForm: FormGroup;\r\n  isLoading = false;\r\n  invalidTitle = false;\r\n  workspaceId;\r\n  @Input() editMode;\r\n  @Output() editModeChange = new EventEmitter();\r\n  @Input()  close;\r\n  @Output() closeChange = new EventEmitter();\r\n  @Input()  collectionIndex;\r\n  @Output() collectionIndexChange = new EventEmitter();\r\n\r\n  @Input()  editCollection;\r\n\r\n\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public collectionsService: CollectionsService, public authService: AuthService, private formBuilder: FormBuilder,\r\n              private router: Router, private activatedRoute: ActivatedRoute) {\r\n      this.createForm();\r\n}\r\n\r\n  createForm() {\r\n    this.collectionForm = this.formBuilder.group({\r\n    title : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe( authStatus => {\r\n    // this.isLoading = false;\r\n    });\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n    this.workspaceId = params.get('workspaceId');\r\n\r\n    });\r\n    console.log(this.editCollection);\r\n    if (this.editCollection) {\r\n      this.editMode = true;\r\n      this.collectionForm.reset({\r\n        title: this.editCollection.title\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.collectionForm.invalid){\r\n      this.invalidTitle = true;\r\n      return Object.values(this.collectionForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          // tslint:disable-next-line: no-shadowed-variable\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n  }\r\n    this.isLoading = true;\r\n    const values = this.collectionForm.getRawValue();\r\n\r\n    if (this.editMode) {\r\n      await this.collectionsService.updateCollection(this.editCollection.id, values.title);\r\n    } else {\r\n      await this.collectionsService.createCollection(values.title, this.workspaceId);\r\n    }\r\n    this.collectionForm.reset();\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}`]);\r\n      }).catch( err => {});\r\n    this.isLoading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    console.log(this.editMode);\r\n    this.collectionForm.reset();\r\n    if (this.editMode) {\r\n      this.editModeChange.emit(false);\r\n      this.collectionIndexChange.emit(undefined);\r\n    } else {\r\n        this.closeChange.emit(true);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"collectionForm\" (ngSubmit)=\"onSave()\" class=\"col mb-2\">\r\n    <div class=\"row\">\r\n        <mat-error>\r\n            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n              Ingrese un título adecuado\r\n            </small>\r\n        </mat-error>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"input-group input-group-sm\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Introduce un título...\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n            <a class=\"btn btn-outline-secondary btn-sm\" (click)=\"onCancel()\" *ngIf=\"!isLoading\">\r\n                <i class=\"fas fa-times\"></i>\r\n            </a>\r\n            <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\" disabled *ngIf=\"isLoading\">\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n</form>\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { EsquemaService } from 'src/app/services/esquemas.service';\r\n\r\n@Component({\r\n  selector: 'app-esquema-create',\r\n  templateUrl: './esquema-create.component.html',\r\n  styleUrls: ['./esquema-create.component.css']\r\n})\r\nexport class EsquemaCreateComponent implements OnInit, OnDestroy{\r\n  @Input() esquemaForm: FormGroup;\r\n  private authStatusSub: Subscription;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  @Input() workspaceId;\r\n  @Input() datafileId;\r\n  @Input() savefile;\r\n  @Output() savefileChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  invalidFile = false;\r\n  invalidExtension = false;\r\n  @Output() esquemaChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() esquema;\r\n  file = null;\r\n  chain = '';\r\n\r\n  constructor(public esquemaService: EsquemaService, public route: ActivatedRoute, private papa: Papa,\r\n              private usersService: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.esquemaForm.get('title').invalid && this.esquemaForm.get('title').touched;\r\n  }\r\n\r\n  get invalidEsquemaPath() {\r\n    // tslint:disable-next-line: max-line-length\r\n    return this.esquemaForm.get('esquemaPath').invalid && this.esquemaForm.get('esquemaPath').dirty;\r\n  }\r\n\r\n\r\n// File upload function\r\nasync onFilePicked(event: Event) {\r\n  const files = (event.target as HTMLInputElement).files;\r\n  if (files && files.length > 0) {\r\n    const uploadedFile = (event.target as HTMLInputElement).files[0];\r\n    const split = uploadedFile.name.split('.');\r\n    const extension = split[1].toLowerCase();\r\n    if (extension !== 'json' && extension !== 'yaml') {\r\n      this.invalidExtension = true;\r\n      return;\r\n    } else {\r\n      this.esquemaForm.get('esquemaContent').enable();\r\n      this.invalidExtension = false;\r\n    }\r\n    this.file = uploadedFile;\r\n\r\n    this.papa.parse(uploadedFile, {\r\n      complete(results) {\r\n        let chain = '';\r\n        for (const data of results.data){\r\n            chain = chain + data + '\\n';\r\n        }\r\n        (document.getElementById('esquemaContent') as HTMLInputElement).value = chain;\r\n        // this.esquemaForm.updateValueAndValidity();\r\n      }\r\n    });\r\n  }}\r\n\r\n  async onSave() {\r\n    if (this.esquema) {\r\n      if (this.esquemaForm.get('title').invalid) {\r\n        this.esquemaForm.get('title').markAsTouched();\r\n        return;\r\n      }\r\n    } else {\r\n      const content = (document.getElementById('esquemaContent') as HTMLInputElement).value;\r\n      this.esquemaForm.patchValue({esquemaContent: content});\r\n      if (this.esquemaForm.invalid){\r\n        if (this.esquemaForm.get('esquemaPath').invalid) {\r\n          this.invalidFile = true;\r\n          this.esquemaForm.get('esquemaPath').markAsDirty();\r\n        }\r\n        return Object.values(this.esquemaForm.controls).forEach(control => {\r\n          if (control instanceof FormGroup) {\r\n            // tslint:disable-next-line: no-shadowed-variable\r\n            Object.values(control.controls).forEach( control => control.markAsTouched());\r\n          } else {\r\n            control.markAsTouched();\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.savefileChange.emit(true);\r\n    const values = this.esquemaForm.getRawValue();\r\n    if (this.esquema) {\r\n      await this.esquemaService.updateEsquema(this.esquema._id, values.title, this.esquema.contentPath, values.esquemaContent);\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n        .then(() => {\r\n          this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n        }).catch( err => {});\r\n    } else {\r\n      this.esquemaService.addEsquema(values.title, values.esquemaContent, this.file.name, this.datafileId, this.workspaceId);\r\n    }\r\n    (document.getElementById('esquemaContent') as HTMLInputElement).value = '';\r\n    this.esquemaForm.reset();\r\n    this.esquemaChange.emit(null);\r\n    this.savefileChange.emit(false);\r\n\r\n  }\r\n\r\n  onCancel() {\r\n    this.esquemaForm.reset();\r\n    this.esquemaChange.emit(null);\r\n    if (!this.esquema) {\r\n      (document.getElementById('esquemaContent') as HTMLInputElement).value = '';\r\n    }\r\n    this.esquemaForm.patchValue({esquemaPath: null});\r\n    this.invalidFile = false;\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title mb-0\" id=\"exampleModalLabel\">Añadir Esquema</h2>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"onCancel()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"esquemaForm\" (ngSubmit)=\"onSave()\">\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <input type=\"file\" class=\"form-control form-control-sm mb-2\" formControlName=\"esquemaPath\" [class.is-invalid]=\"invalidEsquemaPath\" (change)=\"onFilePicked($event)\" *ngIf=\"!esquema\">\r\n                        <div class=\"form-floating\">\r\n                            <textarea *ngIf=\"!esquema\" id=\"esquemaContent\" class=\"form-control pt-0\" style=\"height: 400px\" [class.is-invalid]=\"invalidEsquemaPath\"></textarea>\r\n\r\n                            <textarea *ngIf=\"esquema\" formControlName=\"esquemaContent\" class=\"form-control pt-0\" style=\"height: 400px\" [class.is-invalid]=\"invalidEsquemaPath\"></textarea>\r\n\r\n                            <label class=\"pt-1\" for=\"floatingTextarea2\"></label>\r\n                            <mat-error>\r\n                                <small *ngIf=\"invalidFile\" class=\"text-danger\">\r\n                                  Ingrese un esquema.\r\n                                </small>\r\n                                <small *ngIf=\"invalidExtension\" class=\"text-danger\">\r\n                                  Ingrese un esquema con el formato adecuado (.json o .yaml).\r\n                                </small>\r\n                            </mat-error>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"onCancel()\">Cancelar</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"(!esquemaForm.valid || invalidExtension) && !esquema\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"esquema\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Guardar cambios</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"esquemaForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<mat-spinner *ngIf=\"isLoading\">Loading ...</mat-spinner>\n<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0 && !isLoading\">\n    <mat-expansion-panel *ngFor=\"let post of posts\">\n        <mat-expansion-panel-header>\n            {{ post.title }}\n        </mat-expansion-panel-header>\n        <div class=\"post-image\">\n            <img [src]=\"post.imagePath\" [alt]=\"post.title\">\n        </div>\n        <p>{{ post.content }}</p>\n        <mat-action-row *ngIf=\"userIsAuthenticated && userId == post.creator\">\n            <a mat-button color=\"primary\" [routerLink]=\"['/edit', post.id]\">EDIT</a>\n            <button mat-button color=\"warn\" (click)=\"onDelete(post.id)\">DELETE</button>\n        </mat-action-row>\n    </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"onChangedPage($event)\" *ngIf=\"posts.length > 0\"></mat-paginator>\n<p class=\" info-text mat-body-1 \" *ngIf=\"posts.length <=0 && !isLoading \">No posts added yet!</p>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Subscription } from 'rxjs';\nimport { Post } from 'src/app/models/post.model';\nimport { PostsService } from 'src/app/services/posts.service';\n\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy{\n  isLoading = false;\n  posts: Post[] = [];\n  totalPosts = 0;\n  postsPerPage = 2;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  userIsAuthenticated = false;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n\n  constructor( public postsService: PostsService, private authService: AuthService ) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    // this.posts = this.postsService.getPosts();\n    // tslint:disable-next-line: deprecation\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe( (postData: {posts: Post[], postCount: number}) => {\n      this.isLoading = false;\n      this.totalPosts = postData.postCount;\n      this.posts = postData.posts;\n    });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  onChangedPage( pageData: PageEvent ) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n  onDelete(postId: string){\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { ConfigurationService } from 'src/app/services/configuration.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-configuration-list',\r\n  templateUrl: './configuration-list.component.html',\r\n  styleUrls: ['./configuration-list.component.css']\r\n})\r\nexport class ConfigurationListComponent implements OnInit, OnDestroy{\r\n  isDeleting = false;\r\n  @Input() datafileId: string;\r\n  @Input() workspaceId: string;\r\n  @Input() configurations: any[];\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private authStatusSub: Subscription;\r\n\r\n  // Para editar\r\n  configurationForm: FormGroup;\r\n  saveconfigChange = false;\r\n  configuration = null;\r\n  inferring = false;\r\n  extraControls: string[] = [];\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(public datafilesService: DatafileService, public route: ActivatedRoute, public usersService: AuthService,\r\n              private router: Router, private configurationsService: ConfigurationService){\r\n    this.configurationForm = new FormGroup({\r\n      'title': new FormControl('', {validators: [Validators.required, Validators.minLength(1), Validators.maxLength(100)]}),\r\n      'errorCode': new FormControl('', {validators: [Validators.required]}),\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    // console.log(this.esquemasSub);\r\n    // this.configurationsSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onDelete( configurationId: string ){\r\n    await this.configurationsService.deleteConfiguration(configurationId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {});\r\n  }\r\n\r\n\r\n  setExtraParams(newvalue: any) {\r\n    this.extraControls = newvalue;\r\n  }\r\n\r\n\r\n\r\n  onEdit(configurationId: string) {\r\n\r\n    this.configurationsService.getConfiguration(configurationId).subscribe(configurationData => {\r\n      this.configuration = configurationData.configuration;\r\n      // this.configurationForm.get('esquemaContent').enable();\r\n      console.log(this.configuration);\r\n      this.configurationForm.patchValue({title: configurationData.configuration.title,\r\n                                         errorCode: configurationData.configuration.errorCode});\r\n      const extraParamsObj = configurationData.configuration.extraParams;\r\n      Object.keys(extraParamsObj).forEach(extraParam => {\r\n        this.configurationForm.addControl(extraParam, new FormControl('', {validators: [Validators.required]}));\r\n        this.extraControls.push(extraParam);\r\n        this.configurationForm.patchValue(extraParamsObj);\r\n      });\r\n      console.log(this.extraControls);\r\n      console.log(this.configurationForm);\r\n\r\n    });\r\n  }\r\n\r\n  // setEsquema(newvalue: any) {\r\n  //   this.esquema = newvalue;\r\n  // }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row mt-4\">\r\n    <div class=\"col-5\">\r\n        <h2>Configuraciones</h2>\r\n    </div>\r\n    <div class=\"col-7 d-flex justify-content-end\">\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#configuratioModal\" *ngIf=\"!saveconfigChange\">\r\n              Añadir configuración\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" disabled *ngIf=\"saveconfigChange\">\r\n              Añadir configuración\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n            <app-configuration-create [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [configuration]=\"configuration\" [extraControls]=\"extraControls\" [configurationForm]=\"configurationForm\" (configurationChange)=\"setExtraParams($event)\"></app-configuration-create>\r\n        </div>\r\n        <!-- (savefileChange)=\"setSaveMode($event)\" (esquemaChange)=\"setEsquema($event)\"-->\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2 mb-4\">\r\n    <div class=\"col p-0\">\r\n        <div class=\"container\">\r\n            <div class=\"row border-header p-2\">\r\n                <div class=\"col-3 d-flex justify-content-start\">\r\n                    <div>Título</div>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-center\">\r\n                    <div>Fecha de Creación</div>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\">\r\n                    <div>Opciones</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-0 p-2 border-content\">\r\n                <div class=\"col\">\r\n                    <div class=\"row mt-1 mb-1\" *ngFor=\"let configuration of configurations\">\r\n                        <div class=\"col-3 d-flex justify-content-start pt-2 pe-0\">\r\n                            <div>{{configuration.title}}</div>\r\n                        </div>\r\n                        <div class=\"col-6 d-flex justify-content-center pt-2\">\r\n                            <div>{{configuration.creationMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-end pe-4\">\r\n                            <div class=\"dropdown\">\r\n                                <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                              <i class=\"fas fa-ellipsis-h\"></i>\r\n                                            </button>\r\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    <li><a class=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#configuratioModal\" (click)=onEdit(configuration._id)>Editar Configuración</a></li>\r\n                                    <!--  -->\r\n                                    <li><a class=\"dropdown-item danger\" (click)=onDelete(configuration._id)>Eliminar Configuración</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AngularMaterialModule } from 'src/app/angular-material.module';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { InvitationCreateComponent } from './invitation/invitation-create/invitation-create.component';\r\nimport { InvitationListComponent } from '../pages/invitations/invitation-list/invitation-list.component';\r\nimport { WorkspaceEditComponent } from './workspace/workspace-edit/workspace-edit.component';\r\nimport { CollectionCreateComponent } from './collection/collection-create/collection-create.component';\r\nimport { DatafileCreateComponent } from './datafile/datafile-create/datafile-create.component';\r\nimport { DatafileEditComponent } from './datafile/datafile-edit/datafile-edit.component';\r\nimport { EsquemaListComponent } from './esquemas/esquema-list/esquema-list.component';\r\nimport { EsquemaCreateComponent } from './esquemas/esquema-create/esquema-create.component';\r\nimport { ConfigurationListComponent } from './configuration/configuration-list/configuration-list.component';\r\nimport { TestListComponent } from './test/test-list/test-list.component';\r\nimport { ConfigurationCreateComponent } from './configuration/configuration-create/configuration-create.component';\r\nimport { TestCreateComponent } from './test/test-create/test-create.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    InvitationCreateComponent,\r\n    WorkspaceEditComponent,\r\n    CollectionCreateComponent,\r\n    DatafileCreateComponent,\r\n    DatafileEditComponent,\r\n    EsquemaListComponent,\r\n    EsquemaCreateComponent,\r\n    ConfigurationListComponent,\r\n    TestListComponent,\r\n    ConfigurationCreateComponent,\r\n    TestCreateComponent\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    InvitationCreateComponent,\r\n    WorkspaceEditComponent,\r\n    CollectionCreateComponent,\r\n    DatafileCreateComponent,\r\n    DatafileEditComponent,\r\n    EsquemaListComponent,\r\n    EsquemaCreateComponent,\r\n    ConfigurationListComponent,\r\n    TestListComponent,\r\n    ConfigurationCreateComponent,\r\n    TestCreateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Post } from '../models/post.model';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/posts/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<{posts: Post[], postCount: number}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n\r\n  }\r\n\r\n  getPosts(postsPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\r\n    this.http.get<{message: string, posts: any, maxPosts: number }>(BACKEND_URL + queryParams)\r\n      .pipe(map( (postData) => {\r\n        return { posts: postData.posts.map(post => {\r\n          return {\r\n            title: post.title,\r\n            content: post.content,\r\n            id: post._id,\r\n            imagePath: post.imagePath,\r\n            creator: post.creator\r\n          };\r\n        }),\r\n        maxPosts: postData.maxPosts\r\n      };\r\n      }))\r\n      .subscribe((transformedPostData) => {\r\n        this.posts = transformedPostData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformedPostData.maxPosts});\r\n    });\r\n  }\r\n\r\n  getPostUpdateListener() {\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n\r\n  getPost(id: string) {\r\n    return this.http.get<{_id: string, title: string, content: string, imagePath: string, creator: string}>(BACKEND_URL + id);\r\n  }\r\n\r\n  addPost( title: string, content: string, image: File ) {\r\n    const postData = new FormData();\r\n    console.log('Servicio');\r\n    console.log(image);\r\n    postData.append('title', title);\r\n    postData.append('content', content);\r\n    postData.append('image', image, title);\r\n    console.log(postData.get('image'));\r\n    // const post: Post = {id: null, title: title, content: content};\r\n    this.http\r\n      .post<{message: string, post: Post}>(\r\n        BACKEND_URL,\r\n        postData\r\n      )\r\n      .subscribe( responseData => {\r\n        this.router.navigate(['/']);\r\n    });\r\n\r\n  }\r\n\r\n  updatePost(id: string, title: string, content: string, image: File | string){\r\n    let postData: Post | FormData;console.log();\r\n    if (typeof(image) === 'object') {\r\n\r\n      postData = new FormData();\r\n      postData .append('id', id);\r\n      postData.append('title', title);\r\n      postData.append('content', content);\r\n      postData.append('image', image, title);\r\n    } else {\r\n      postData = { id: id, title: title, content: content, imagePath: image, creator: null };\r\n    }\r\n    // const post: Post = { id: id, title: title, content: content, imagePath: null };\r\n    this.http\r\n      .put(BACKEND_URL + id, postData)\r\n      .subscribe( response => {\r\n        this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  deletePost(postId: string){\r\n    return this.http.delete(BACKEND_URL +  postId);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Collection } from '../models/collection';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/collections/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CollectionsService {\r\n  private collections: Collection[] = [];\r\n  private collectionsUpdated = new Subject<{collections: Collection[]}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  getCollectionUpdateListener() {\r\n    return this.collectionsUpdated.asObservable();\r\n  }\r\n\r\n  getCollectionsByWorkspace(workspaceId: string) {\r\n    return this.http.get<{message: string, collections: any}>(BACKEND_URL + workspaceId)\r\n    .pipe(map( (collectionData) => {\r\n      return { collections: collectionData.collections.map(collection => {\r\n        return {\r\n          title: collection.title,\r\n          id: collection._id,\r\n          datafiles: collection.datafiles\r\n        };\r\n      }),\r\n    };\r\n    }))\r\n    .subscribe((transformedCollectionData) => {\r\n      this.collections = transformedCollectionData.collections;\r\n      this.collectionsUpdated.next({\r\n        collections: [...this.collections]\r\n      });\r\n  });\r\n  }\r\n\r\n  createCollection(title: string, workspaceId: string) {\r\n    var res;\r\n    const collectionData: Collection = { title: title, workspace: workspaceId };\r\n    this.http.post<{collection: Collection}>(BACKEND_URL, collectionData).subscribe( responseData => {\r\n      res = responseData;\r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  deleteCollection(collectionId: string) {\r\n    let res;\r\n    this.http.delete(BACKEND_URL +  collectionId).subscribe( responseData => {\r\n        res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  updateCollection(collectionId: string, title: string){\r\n    var res;\r\n    const collection: Collection = {'title': title, 'workspace': null };\r\n    this.http.put(BACKEND_URL + collectionId, collection).subscribe( response => {\r\n      res = response;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Invitation } from 'src/app/models/invitation.model';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { InvitationService } from '../../../services/invitations.service';\r\n\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-invitation-list',\r\n  templateUrl: './invitation-list.component.html',\r\n  styleUrls: ['./invitation-list.component.css']\r\n})\r\nexport class InvitationListComponent implements OnInit, OnDestroy{\r\n  invitationForm: FormGroup;\r\n  isLoading = false;\r\n  invalidEmail = false;\r\n  workspaceId;\r\n\r\n  displayedColumns: string[] = ['title', 'description', 'creationMoment', 'users'];\r\n  clickedRows = new Set<Invitation>();\r\n  // dataSource = [];\r\n  invitations: Invitation[] = [];\r\n  totalInvitations = 0;\r\n  invitationsPerPage = 2;\r\n  currentPage = 1;\r\n  dataSource = null;\r\n  pageSizeOptions = [1, 2, 5, 10];\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private invitationsSub: Subscription;\r\n  private authStatusSub: Subscription;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public invitationsService: InvitationService, public authService: AuthService, private formBuilder: FormBuilder,\r\n              private activatedRoute: ActivatedRoute) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.invitationForm = this.formBuilder.group({\r\n      email : ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9._]+\\.[a-z]{2,3}$')]],\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.invitationsService.getInvitations(this.invitationsPerPage, this.currentPage);\r\n    this.userId = this.authService.getUserId();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe( authStatus => {\r\n      // this.isLoading = false;\r\n    });\r\n\r\n    this.invitationsSub = this.invitationsService.getInvitationUpdateListener()\r\n    .subscribe( (invitationData: {invitations: Invitation[], invitationCount: number}) => {\r\n      this.isLoading = false;\r\n      this.totalInvitations = invitationData.invitationCount;\r\n      this.invitations = invitationData.invitations;\r\n      const dataSource = new MatTableDataSource(this.invitations);\r\n      dataSource.sort = this.sort;\r\n\r\n      });\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.workspaceId = params.workspaceId;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onInvite() {\r\n    if (this.invitationForm.invalid){\r\n      this.invalidEmail = true;\r\n      return Object.values(this.invitationForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          // tslint:disable-next-line: no-shadowed-variable\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n\r\n    // this.isLoading = true;\r\n    const values = this.invitationForm.getRawValue();\r\n    this.invitationsService.addInvitation(values.email, this.workspaceId);\r\n    this.invitationForm.reset();\r\n    // this.isLoading = false;\r\n  }\r\n\r\n  onEditStatus(object, newStatus) {\r\n    this.invitationsService.updateInvitation(object.id, newStatus);\r\n\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"row d-flex justify-content-center\">\r\n        <div class=\"col-8\">\r\n            <h2>Invitaciones</h2>\r\n        </div>\r\n    </div>\r\n    <div class=\" row d-flex justify-content-center\" *ngIf=\"invitations.length <=0 && !isLoading \">\r\n        <div class=\"col-8 d-flex justify-content-center \">\r\n            <p class=\" info-text mat-body-1 \">No se han añadido invitaciones aún!</p>\r\n        </div>\r\n    </div>\r\n    <div class=\" row d-flex justify-content-center\" *ngIf=\"invitations.length >0 && !isLoading \">\r\n        <div class=\"col-8 d-flex justify-content-center \">\r\n            <table mat-table [dataSource]=\"invitations \" matSort class=\"mat-elevation-z1 \">\r\n                <!--- Note that these columns can be defined in any order.\r\n      The actual rendered columns are set as a property on the row definition\" -->\r\n                <ng-container matColumnDef=\"title\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Autor </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.sender}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Espacio de Trabajo </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.workspace}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"creationMoment\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de creación </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> Fecha de creación </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"users\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div *ngIf=\"element.status === 'pending' || element.status === 'seen'\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-success me-1\" (click)=\"onEditStatus(element,'accepted')\">Aceptar</button>\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-danger me-1\" (click)=\"onEditStatus(element,'rejected')\">Rechazar</button>\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" *ngIf=\"element.status === 'pending'\" (click)=\"onEditStatus(element,'seen')\">\r\n                              <i class=\"fas fa-eye\"></i>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-light\" *ngIf=\"element.status === 'seen'\" (click)=\"onEditStatus(element,'pending')\">\r\n                              <i class=\"fas fa-eye\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div *ngIf=\"element.status === 'accepted'\">\r\n                            Aceptada\r\n                        </div>\r\n                        <div *ngIf=\"element.status === 'rejected'\">\r\n                            Rechazada\r\n                        </div>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                <!-- [routerLink]=\"['/workspace', row.id]\" -->\r\n            </table>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"row \">\r\n        <mat-paginator class=\"col d-flex justify-content-center\" [length]=\"totalInvitations\" [pageSize]=\"invitationsPerPage\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"onChangedPage($event)\" *ngIf=\"invitations.length > 0\"></mat-paginator>\r\n\r\n        <!-- <mat-paginator class=\"col-auto\" [pageSizeOptions]=\"[1,4,6]\" *ngIf=\"workspaces.length > 0\"></mat-paginator> -->\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../models/user.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/users/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private users: User[] = [];\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  private usersUpdated = new Subject<{users: User[]}>();\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(username: string, email: string, password: string) {\r\n    const authData: User = { username: username, email: email, password: password, photo: null };\r\n    return this.http\r\n      .post( BACKEND_URL + '/signup', authData)\r\n      .subscribe(() => {\r\n        // tslint:disable-next-line: no-unused-expression\r\n        this.router.navigate(['/']);\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n  }\r\n\r\n  login(username: string, password: string) {\r\n    const authData = { username:username, password: password };\r\n    this.http\r\n      .post<{ token: string; expiresIn: number, userId: string }>(\r\n        BACKEND_URL + '/login',\r\n        authData\r\n      )\r\n      .subscribe(response => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        if (token) {\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.isAuthenticated = true;\r\n          this.userId = response.userId;\r\n          this.authStatusListener.next(true);\r\n          const now = new Date();\r\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\r\n          this.saveAuthData(token, expirationDate, this.userId);\r\n          this.router.navigate(['/']);\r\n        }\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authInformation.userId;\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.userId = null;\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  getUserUpdateListener() {\r\n    return this.usersUpdated.asObservable();\r\n  }\r\n\r\n  getUsersByWorkspace(workspaceId: string) {\r\n    return this.http.get<{message: string, users: any}>(BACKEND_URL + workspaceId)\r\n    .pipe(map( (userData) => {\r\n      return { users: userData.users.map(user => {\r\n        return {\r\n          username: user.username,\r\n          photo: user.photo,\r\n        };\r\n      }),\r\n    };\r\n    }))\r\n    .subscribe((transformedUserData) => {\r\n      this.users = transformedUserData.users;\r\n      this.usersUpdated.next({\r\n        users: [...this.users]\r\n      });\r\n  });\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expirationDate.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('userId');\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId: userId\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TestsService } from 'src/app/services/tests.service';\r\nimport { EsquemaService } from '../../../services/esquemas.service';\r\n\r\n@Component({\r\n  selector: 'app-test-create',\r\n  templateUrl: './test-create.component.html',\r\n  styleUrls: ['./test-create.component.css']\r\n})\r\nexport class TestCreateComponent implements OnInit, OnDestroy{\r\n  @Input() testForm: FormGroup;\r\n  private authStatusSub: Subscription;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  @Input() workspaceId;\r\n  @Input() datafileId;\r\n\r\n  @Input() testSave;\r\n  @Output() testSaveChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() esquemas;\r\n  @Input() configurations;\r\n  @Input() test;\r\n  selectedConfigurations: string[];\r\n\r\n  constructor(public testService: TestsService, public route: ActivatedRoute, private papa: Papa,\r\n              private formBuilder: FormBuilder, private router: Router) {\r\n                this.createForm();\r\n                this.testForm.reset({\r\n                  title: '',\r\n                  esquema: '',\r\n                  consfigurations: []\r\n                });\r\n                this.selectedConfigurations = [];\r\n  }\r\n\r\n  createForm() {\r\n    this.testForm = this.formBuilder.group({\r\n      title          : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      esquema        : [''],\r\n      configurations : [[]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    // this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n    //   this.userIsAuthenticated = isAuthenticated;\r\n    //   this.userId = this.usersService.getUserId();\r\n    // });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.testForm.get('title').invalid && this.testForm.get('title').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.testForm.invalid){\r\n      return Object.values(this.testForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          // tslint:disable-next-line: no-shadowed-variable\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n     }\r\n    const values = this.testForm.getRawValue();\r\n    await this.testService.addTest(values.title, values.esquema, values.configurations, this.datafileId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {\r\n        console.log(err);\r\n      });\r\n    this.testForm.reset({});\r\n    this.selectedConfigurations = [];\r\n  }\r\n\r\n  onConfigurationPicked(event: Event) {\r\n    const configurationId = (event.target as HTMLInputElement).value;\r\n    console.log(configurationId);\r\n    const checked: boolean = (event.target as HTMLInputElement).checked;\r\n    const index: number = this.selectedConfigurations.indexOf(configurationId);\r\n    if (checked && index < 0) {\r\n      this.selectedConfigurations.push(configurationId);\r\n    } else if (!checked && index >= 0) {\r\n      this.selectedConfigurations.pop();\r\n    }\r\n    this.testForm.patchValue({configurations: this.selectedConfigurations});\r\n  }\r\n\r\n  onEsquemaPicked(event: Event) {\r\n    const esquemaId = (event.target as HTMLInputElement).value;\r\n    if (esquemaId){\r\n      console.log(esquemaId);\r\n      this.testForm.patchValue({esquema: esquemaId});\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.testForm.reset({});\r\n    console.log(this.testForm);\r\n    this.selectedConfigurations = [];\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"modal fade\" id=\"testCreateModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\" modal-content \" style=\"width:auto;display: inline-block; \">\r\n            <div class=\"modal-header \">\r\n                <h2 class=\"modal-title mb-0 \" id=\"exampleModalLabel \">Añadir Esquema</h2>\r\n                <button type=\"button \" class=\"btn-close \" data-bs-dismiss=\"modal\" aria-label=\"Close \" (click)=\"onCancel()\"></button>\r\n            </div>\r\n            <div class=\"modal-body \" style=\"display: inline-block \">\r\n                <form [formGroup]=\"testForm \" (ngSubmit)=\"onSave() \" style=\"display: inline-block \">\r\n                    <div class=\"mb-3 \">\r\n                        <input type=\"text \" class=\"form-control \" placeholder=\"Título \" formControlName=\"title\" [class.is-invalid]=\"invalidTitle \">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle \" class=\"text-danger \">\r\n                              Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                            </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3 \">\r\n                        <label class=\"col-form-label\">Esquema:</label>\r\n                        <select class=\"form-select form-select-sm\" (change)=\"onEsquemaPicked($event)\">\r\n                              <option selected >Ninguna</option>\r\n                              <option *ngFor=\"let esquema of esquemas\" value=\"{{esquema._id}}\">{{esquema.title}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"mb-3 \" style=\"display: inline-block \">\r\n                        <div class=\"container\">\r\n                            <div class=\"row border-header p-2\">\r\n                                <div class=\"col-3 d-flex justify-content-start\">\r\n                                    <div>Título</div>\r\n                                </div>\r\n                                <div class=\"col-4 d-flex justify-content-center\">\r\n                                    <div>Código de Error</div>\r\n                                </div>\r\n                                <div class=\"col-4 d-flex justify-content-center\">\r\n                                    <div>Parámetros</div>\r\n                                </div>\r\n                                <div class=\"col-1\">\r\n                                    <div></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt-0 p-2 border-content\">\r\n                                <div class=\"col\">\r\n                                    <div class=\"row mt-1 mb-1\" *ngFor=\"let configuration of configurations\">\r\n                                        <td class=\"col-3 d-flex justify-content-start\">\r\n                                            <div>{{configuration.title}}</div>\r\n                                        </td>\r\n                                        <td class=\"col-4 d-flex justify-content-center\">\r\n                                            <div>{{configuration.errorCode}}</div>\r\n                                        </td>\r\n                                        <td class=\"col-4 d-flex justify-content-center\">\r\n                                            <div>{{configuration.extraParamsStr}}</div>\r\n                                        </td>\r\n                                        <td class=\"col-1 d-flex justify-content-center\">\r\n                                            <div class=\"form-check\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"{{configuration._id}}\" id=\"flexCheckDefault\" (change)=\"onConfigurationPicked($event)\">\r\n                                            </div>\r\n                                        </td>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer \">\r\n                <button type=\"button \" class=\"btn btn-secondary \" data-bs-dismiss=\"modal\" (click)=\"onCancel()\">Cancelar</button>\r\n                <button type=\"submit \" class=\"btn btn-primary \" *ngIf=\"!testForm.valid\" (click)=\"onSave()\">Crear prueba</button>\r\n                <button type=\"submit \" class=\"btn btn-primary \" *ngIf=\"testForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear prueba</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Datafile } from '../../../models/datafile';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport * as XLSX from 'xlsx';\r\nimport { Collection } from 'src/app/models/collection';\r\nimport { Esquema } from 'src/app/models/esquema';\r\nimport { EsquemaService } from 'src/app/services/esquemas.service';\r\n\r\n@Component({\r\n  selector: 'app-esquema-list',\r\n  templateUrl: './esquema-list.component.html',\r\n  styleUrls: ['./esquema-list.component.css']\r\n})\r\nexport class EsquemaListComponent implements OnInit, OnDestroy{\r\n  isDeleting = false;\r\n  @Input() datafileId: string;\r\n  @Input() workspaceId: string;\r\n  @Input() esquemas: Esquema[];\r\n  @Input() infer: boolean;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n\r\n  // Para editar\r\n  esquemaForm: FormGroup;\r\n  savefileChange = false;\r\n  esquema = null;\r\n  inferring = false;\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(public datafilesService: DatafileService, public route: ActivatedRoute, public usersService: AuthService,\r\n              private router: Router, private esquemasService: EsquemaService){\r\n                this.esquemaForm = new FormGroup({\r\n                  'title': new FormControl('', {validators: [Validators.required,Validators.minLength(1), Validators.maxLength(100)]}),\r\n                  'esquemaContent': new FormControl({value: '', disabled: true}),\r\n                  'esquemaPath': new FormControl(null, {validators: [Validators.required]})\r\n                });\r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n\r\n  }\r\n\r\n  async onDelete( esquemaId: string ){\r\n    await this.esquemasService.deleteEsquema(esquemaId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {});\r\n  }\r\n\r\n  setSaveMode(newvalue: boolean) {\r\n    this.savefileChange = newvalue;\r\n  }\r\n\r\n  onEdit(esquemaId: string) {\r\n    console.log(this.esquemas);\r\n    console.log(esquemaId);\r\n    this.esquemasService.getEsquema(esquemaId).subscribe(esquemaData => {\r\n      this.esquema = esquemaData.esquema;\r\n      this.esquemaForm.get('esquemaContent').enable();\r\n      this.esquemaForm.patchValue({title: esquemaData.esquema.title, esquemaContent: esquemaData.content});\r\n      (document.getElementById('esquemaContent') as HTMLInputElement).value = this.esquemaForm.get('esquemaPath').value;\r\n   });\r\n  }\r\n\r\n\r\n  setEsquema(newvalue: any) {\r\n    this.esquema = newvalue;\r\n  }\r\n\r\n  onInfer() {\r\n    this.inferring = true;\r\n    this.esquemasService.addEsquema(null, null, null, this.datafileId, this.workspaceId)\r\n    // .then(response => {\r\n    //   console.log(response);\r\n    //   this.inferring = false;\r\n    //   this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    //   .then(() => {\r\n    //     this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n    //   }).catch( err => {});\r\n    // }).catch(error => {\r\n    //   console.log(error);\r\n\r\n    // });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row mt-4\">\r\n    <div class=\"col-5\">\r\n        <h2>Esquemas</h2>\r\n    </div>\r\n    <div class=\"col-7 d-flex justify-content-end\">\r\n        <div class=\"me-1\">\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" *ngIf=\"!inferring && infer\" (click)=\"onInfer()\">\r\n              Inferir Esquema\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" type=\"button\" disabled *ngIf=\"inferring\">\r\n              Inferir Esquema\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal2\" *ngIf=\"!savefileChange\">\r\n              Añadir esquema\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" disabled *ngIf=\"savefileChange\">\r\n              Añadir esquema\r\n              <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            </button>\r\n            <app-esquema-create (savefileChange)=\"setSaveMode($event)\" [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [esquema]=\"esquema\" [esquemaForm]=\"esquemaForm\" (esquemaChange)=\"setEsquema($event)\"></app-esquema-create>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-2 mb-4\">\r\n    <div class=\"col p-0\">\r\n        <div class=\"container\">\r\n            <div class=\"row border-header p-2\">\r\n                <div class=\"col-3 d-flex justify-content-start\">\r\n                    <div>Título</div>\r\n                </div>\r\n                <div class=\"col-6 d-flex justify-content-center\">\r\n                    <div>Fecha de Creación</div>\r\n                </div>\r\n                <div class=\"col-3 d-flex justify-content-end\">\r\n                    <div>Opciones</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-0 p-2 border-content\">\r\n                <div class=\"col\">\r\n                    <div class=\"row mt-1 mb-1\" *ngFor=\"let esquema of esquemas\">\r\n                        <div class=\"col-3 d-flex justify-content-start pt-2 pe-0\">\r\n                            <div>{{esquema.title}}</div>\r\n                        </div>\r\n                        <div class=\"col-6 d-flex justify-content-center pt-2\">\r\n                            <div>{{esquema.creationMoment | date:'EEEE d MMMM y, h:mm:ss'}}</div>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-end pe-4\">\r\n                            <div class=\"dropdown\">\r\n                                <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                              <i class=\"fas fa-ellipsis-h\"></i>\r\n                                            </button>\r\n                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    <li><a class=\"dropdown-item\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal2\" (click)=onEdit(esquema._id)>Editar Esquema</a></li>\r\n                                    <li><a class=\"dropdown-item danger\" (click)=onDelete(esquema._id)>Eliminar Esquema</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { OnInit, OnDestroy } from '@angular/core';\r\nimport { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n// import { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { mimeType } from './mime-type.validator';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { PostsService } from 'src/app/services/posts.service';\r\nimport { Post } from 'src/app/models/post.model';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\nexport class PostCreateComponent implements OnInit, OnDestroy{\r\n  enteredContent = '';\r\n  enteredTitle = '';\r\n  post: Post;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  isLoading = false;\r\n  private mode = 'create';\r\n  private postId: string;\r\n  private authStatusSub: Subscription;\r\n  // @Output() postCreated = new EventEmitter<Post>();\r\n  // onAddPost() {\r\n  //   const post: Post = {title: this.enteredTitle, content: this.enteredContent};\r\n  //   this.postCreated.emit(post);\r\n  // }\r\n  // tslint:disable-next-line: typedef\r\n  constructor(public postsService: PostsService, public route: ActivatedRoute, private authService: AuthService) {}\r\n\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\r\n      this.isLoading = false;\r\n    });\r\n    this.form = new FormGroup({\r\n      'title': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n      'content': new FormControl(null, {validators: [Validators.required]}),\r\n      'image': new FormControl(null, {validators: [Validators.required], asyncValidators: [mimeType]})\r\n    });\r\n    // tslint:disable-next-line: deprecation\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 'edit';\r\n        this.postId = paramMap.get('postId');\r\n        this.isLoading = true;\r\n        // tslint:disable-next-line: deprecation\r\n        this.postsService.getPost(this.postId).subscribe(postData => {\r\n          this.isLoading = false;\r\n          this.post = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            imagePath: postData.imagePath,\r\n            creator: postData.creator\r\n          };\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            content: this.post.content,\r\n            image: this.post.imagePath});\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    console.log(file);\r\n    this.form.patchValue({image: file});\r\n    this.form.get('image').updateValueAndValidity();\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSavePost() {\r\n    if ( this.form.invalid ) {\r\n      return;\r\n    }\r\n    // const post: Post = {title: form.value.enteredTitle, content: form.value.enteredContent};\r\n    // this.postCreated.emit(post);\r\n    this.isLoading = true;\r\n    if (this.mode === 'create') {\r\n      console.log('On Save');\r\n      console.log(this.form.value.image);\r\n      this.postsService.addPost(this.form.value.title, this.form.value.content, this.form.value.image);\r\n    } else {\r\n      this.postsService.updatePost(this.postId, this.form.value.title, this.form.value.content, this.form.value.image);\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<mat-card *ngIf=\"!isLoading\">\r\n    <form [formGroup]=\"form\" (submit)=\"onSavePost()\">\r\n        <mat-form-field>\r\n            <input matInput type=\"text\" formControlName=\"title\" placeholder=\"Post Title\">\r\n            <mat-error *ngIf=\"form.get('title').invalid\">Please enter a post title.</mat-error>\r\n        </mat-form-field>\r\n        <div>\r\n            <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\r\n            <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" visbility=\"hidden\">\r\n        </div>\r\n        <div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\r\n            <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\r\n        </div>\r\n        <mat-form-field>\r\n            <textarea matInput rows=\"3\" formControlName=\"content\" placeholder=\"Post Content\"></textarea>\r\n            <mat-error *ngIf=\"form.get('content').invalid\">Please enter a post title.</mat-error>\r\n        </mat-form-field>\r\n        <button mat-raised-button color=\"accent\" type=\"submit\">Save Post</button>\r\n    </form>\r\n</mat-card>\r\n\r\n<!-- <mat-card>\r\n  <mat-form-field>\r\n      <textarea matInput type=\"text\" [(ngModel)]=\"enteredTitle\"></textarea>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <textarea rows=\"6\" matInput [(ngModel)]=\"enteredContent\"></textarea>\r\n        </mat-form-field>\r\n        <button mat-raised-button color=\"accent\" (click)=\"onAddPost()\">Save Post</button>\r\n</mat-card> -->\r\n","import { Component, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { WorkspaceService } from 'src/app/services/workspaces.service';\r\n\r\n@Component({\r\n  selector: 'app-workspace-edit',\r\n  templateUrl: './workspace-edit.component.html',\r\n})\r\nexport class WorkspaceEditComponent implements OnInit, OnDestroy{\r\n  @Input() edit;\r\n  @Input() workspace;\r\n  @Input() workspaceId;\r\n  @Output() editChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  workspaceEditForm: FormGroup;\r\n  loading = false;\r\n\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public workspaceService: WorkspaceService, public authService: AuthService,  private router: Router,\r\n              private formBuilder: FormBuilder) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.workspaceEditForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n    this.workspaceEditForm.reset({\r\n      title: this.workspace.title,\r\n      description: this.workspace.description,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.workspaceEditForm.get('title').invalid && this.workspaceEditForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.workspaceEditForm.get('description').invalid && this.workspaceEditForm.get('description').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.workspaceEditForm.invalid){\r\n      return Object.values(this.workspaceEditForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.loading = true;\r\n    const values = this.workspaceEditForm.getRawValue();\r\n\r\n    await this.workspaceService.updateWorkspace(this.workspaceId, values.title, values.description);\r\n    this.workspaceEditForm.reset();\r\n    this.editChange.emit(false);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/workspace/${this.workspaceId}`]);\r\n    }).catch( err => {});\r\n    this.loading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.workspaceEditForm.reset();\r\n    this.editChange.emit(false);\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-2\" *ngIf=\"loading\">\r\n    <div class=\"row m-0 p-1\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<form class=\"container mt-4\" [formGroup]=\"workspaceEditForm\" (ngSubmit)=\"onSave()\" *ngIf=\"!loading\">\r\n\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                Ingrese un título adecuado\r\n              </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n              Ingrese una descripción adecuada\r\n            </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\">Guardar</button>\r\n            <a class=\"btn btn-sm btn-secondary\" (click)=\"onCancel()\">Cancel</a>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Invitation } from 'src/app/models/invitation.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/invitations/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class InvitationService {\r\n  private invitations: Invitation[] = [];\r\n  private invitationsUpdated = new Subject<{invitations: Invitation[], invitationCount: number}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n\r\n  }\r\n\r\n  getInvitations(invitationsPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${invitationsPerPage}&page=${currentPage}`;\r\n    this.http.get<{message: string, invitations: any, maxInvitations: number }>(BACKEND_URL + queryParams)\r\n      .pipe(map( (invitationData) => {\r\n        return { invitations: invitationData.invitations.map(invitation => {\r\n          return {\r\n            id: invitation._id,\r\n            sender: invitation.sender,\r\n            receiver: invitation.receiver,\r\n            status: invitation.status,\r\n            workspace: invitation.workspace,\r\n          };\r\n        }),\r\n        maxInvitations: invitationData.maxInvitations\r\n      };\r\n      }))\r\n      .subscribe((transformedInvitationData) => {\r\n        this.invitations = transformedInvitationData.invitations;\r\n        this.invitationsUpdated.next({\r\n          invitations: [...this.invitations], // para hacer una verdadera copia y no afectar al original\r\n          invitationCount: transformedInvitationData.maxInvitations});\r\n    });\r\n  }\r\n\r\n  getInvitationUpdateListener() {\r\n    return this.invitationsUpdated.asObservable();\r\n  }\r\n\r\n  getInvitation(id: string) {\r\n    return this.http.get<{_id: string, sender: string, receiver: string, status: string}>(BACKEND_URL + id);\r\n  }\r\n\r\n  addInvitation( receiverEmail: string, workspaceId: string) {\r\n    const invitationData: Invitation = { receiver: receiverEmail, workspace: workspaceId };\r\n\r\n    this.http.post<{invitation: Invitation}>(\r\n        BACKEND_URL,\r\n        invitationData\r\n      )\r\n      .subscribe( responseData => {\r\n        this.router.navigate(['/']);\r\n    });\r\n\r\n  }\r\n\r\n  updateInvitation(id: string, status: string){\r\n\r\n    const invitationData = { id: id, status: status};\r\n\r\n    this.http\r\n      .put(BACKEND_URL + id, invitationData)\r\n      .subscribe( response => {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\r\n        this.router.navigate(['/invitations']));\r\n    });\r\n  }\r\n\r\n  deleteInvitation(id: string){\r\n    return this.http.delete(BACKEND_URL +  id);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n\r\n@NgModule({\r\n  imports: [ // se pueden obviar los imports, si existen exports\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule { }\r\n","import { Component, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from 'src/app/services/datafiles.service';\r\n\r\n@Component({\r\n  selector: 'app-datafile-edit',\r\n  templateUrl: './datafile-edit.component.html',\r\n})\r\nexport class DatafileEditComponent implements OnInit, OnDestroy{\r\n  @Input() edit;\r\n  @Input() datafile;\r\n  @Input() datafileId;\r\n  @Output() editChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  datafileEditForm: FormGroup;\r\n  loading = false;\r\n\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public datafileService: DatafileService, public authService: AuthService,  private router: Router,\r\n              private formBuilder: FormBuilder) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.datafileEditForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.authService.getUserId();\r\n    });\r\n    this.datafileEditForm.reset({\r\n      title: this.datafile.title,\r\n      description: this.datafile.description,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  get invalidTitle() {\r\n    return this.datafileEditForm.get('title').invalid && this.datafileEditForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.datafileEditForm.get('description').invalid && this.datafileEditForm.get('description').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.datafileEditForm.invalid){\r\n      return Object.values(this.datafileEditForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.loading = true;\r\n    const values = this.datafileEditForm.getRawValue();\r\n\r\n    await this.datafileService.updateDatafile(this.datafileId, values.title, values.description, null, '');\r\n    this.datafileEditForm.reset();\r\n    this.editChange.emit(false);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n    .then(() => {\r\n      this.router.navigate([`/datafile/${this.datafileId}`]);\r\n    }).catch( err => {});\r\n    this.loading = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.datafileEditForm.reset();\r\n    this.editChange.emit(false);\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-2\" *ngIf=\"loading\">\r\n    <div class=\"row m-0 p-1\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<form class=\"container mt-4\" [formGroup]=\"datafileEditForm\" (ngSubmit)=\"onSave()\" *ngIf=\"!loading\">\r\n\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                Ingrese un título adecuado\r\n              </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-start\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\">\r\n            <mat-error>\r\n                <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n              Ingrese una descripción adecuada\r\n            </small>\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ms-0 me-0 mb-1 p-0\">\r\n        <div class=\"col ps-0 pe-0 d-flex justify-content-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-primary me-1\">Guardar</button>\r\n            <a class=\"btn btn-sm btn-secondary\" (click)=\"onCancel()\">Cancel</a>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Test } from '../models/test.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/tests/';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TestsService {\r\n  private tests: Test[] = [];\r\n  private testsUpdated = new Subject<{tests: Test[], workspaceCount: number}>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  addTest(title: string, esquema: string, configurations: string[], datafileId: string){\r\n    let res;\r\n    const testData = {'title': title, 'esquema': esquema, 'configurations': configurations};\r\n    this.http.post<{message: string, test: Test}>(\r\n        BACKEND_URL + datafileId,\r\n        testData\r\n      )\r\n      .subscribe(\r\n        responseData => {\r\n          console.log(responseData);\r\n          res = responseData;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n    );\r\n    return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            if (res === undefined) {\r\n              reject('Creating a test failed!');\r\n            } else {\r\n              resolve('Test added successfully!');\r\n            }\r\n          }, 1000);\r\n        });\r\n  }\r\n\r\n  deleteTest(id: string){\r\n    let res;\r\n    this.http.delete(BACKEND_URL +  id).subscribe( responseData => {\r\n      console.log(responseData);\r\n      res = responseData;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  getTest(testId: string) {\r\n    return this.http.get<{test: any, esquema: any, configurations: string[]}>(BACKEND_URL + testId);\r\n  }\r\n\r\n  updateTest(testId: string, title: string, esquemaId: string, configurations: string[], action: string) {\r\n    let res;\r\n    const testData = {'title': title, 'esquema': esquemaId, 'configurations': configurations, 'action': action};\r\n    this.http.put(BACKEND_URL + testId, testData).subscribe( response => {\r\n      res = response;\r\n      console.log(res);\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (res === undefined) {\r\n          reject();\r\n        } else {\r\n\r\n          resolve(true);\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","<div class=\"row ps-2 pe-2 complete-height\">\r\n    <div class=\"col-2 collections p-0\">\r\n        <div class=\"container p-0\">\r\n            <div class=\"row mt-4 ps-4 pe-3\">\r\n                <div class=\"col-8\">\r\n                    <h2 class=\"mb-2\">Collections</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-0\">\r\n                <div class=\"accordion accordion-flush pb-5\" id=\"accordionFlushExample\">\r\n                    <div *ngFor=\"let collection of collections; let i=index;\">\r\n                        <div class=\"row mt-2 ps-3 pe-2\" *ngIf=\"editMode && collectionIndex===i\">\r\n                            <app-collection-create [(collectionIndex)]=\"collectionIndex\" [(editMode)]=\"editMode\" [editCollection]=\"collection\"></app-collection-create>\r\n                        </div>\r\n                        <div class=\"accordion-item\" *ngIf=\"collectionIndex!==i\">\r\n                            <h4 class=\"row accordion-header m-0 pt-1 pb-1\" id=\"flush-headingOne\">\r\n                                <div class=\"col-10 ps-4 pe-2 pt-1 collapsed\" data-bs-toggle=\"collapse\" [attr.data-bs-target]=\"'#collapse'+i\" aria-expanded=\"false\" [aria-controls]=\"collection.name\">\r\n                                    {{collection.title}}\r\n                                </div>\r\n                                <div class=\"col-2 d-flex justify-content-end\">\r\n                                    <div class=\"dropdown\">\r\n                                        <button class=\"btn btn-outline-secondary btn-sm expand-files\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                          <i class=\"fas fa-ellipsis-h \"></i>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                            <li><a class=\"dropdown-item\" (click)=\"onUpdateCollection(i)\">Editar</a></li>\r\n                                            <li><a class=\"dropdown-item danger\" (click)=\"onDeleteCollection(collection.id)\">Eliminar</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </h4>\r\n                            <div [attr.id]=\"'collapse'+i\" class=\"accordion-collapse collapse \" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\" *ngFor=\"let datafile of collection.datafiles\">\r\n                                <div class=\"accordion-body pt-2 pb-2 ps-5 pe-2\" routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafile._id}}\">{{datafile.title}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"accordion-collapse collapse show linebreak pt-2 mt-2\" *ngFor=\"let datafile of orphanedDatafiles\">\r\n                        <div class=\"accordion-body pt-2 pb-2 ps-5 pe-2\" routerLink=\"/workspace/{{workspaceId}}/datafile/{{datafile._id}}\">{{datafile.title}}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-2 ps-4 pe-3\">\r\n                <app-collection-create [(close)]=\"close\" *ngIf=\"!close\"></app-collection-create>\r\n            </div>\r\n            <div class=\"row mt-2 ps-4 pe-3\">\r\n                <div class=\"col\">\r\n                    <div class=\"d-grid gap-2\">\r\n                        <button class=\"btn btn-outline-primary btn-sm\" type=\"button\" [disabled]=\"\" (click)=\"onAddCollection()\">\r\n                          <i class=\"fas fa-plus\"></i> Añadir Colección\r\n                          </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"col-7\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n        <app-workspace-edit *ngIf=\"edit\" [(edit)]=\"edit\" [workspace]=\"workspace\" [workspaceId]=\"workspaceId\"></app-workspace-edit>\r\n\r\n        <div class=\"container\" *ngIf=\"!isLoading && !edit\">\r\n\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col-10\">\r\n                    <h2>{{ workspace.title }}</h2>\r\n\r\n                </div>\r\n                <div class=\"col-2 d-flex justify-content-end\">\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEdit()\">\r\n                          <i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class=\"dropdown\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                            <li><a class=\"dropdown-item\" (click)=\"onLeave()\">Abandonar Espacio</a></li>\r\n                            <li><a class=\"dropdown-item danger\" (click)=\"onDelete()\">Eliminar Espacio</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col\">\r\n                    <p>{{ workspace.description }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col\">\r\n                <h2>Actividad</h2>\r\n                <div class=\"my-custom-scrollbar\">\r\n                    <div class=\"list-group\">\r\n                        <a href=\"#\" class=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                            <div class=\"d-flex w-100 justify-content-between\">\r\n                                <h5 class=\"mb-1\">List group item heading</h5>\r\n                                <small>3 days ago</small>\r\n                            </div>\r\n                            <p class=\"mb-1\">Some placeholder content in a paragraph.</p>\r\n                            <small>And some small print.</small>\r\n                        </a>\r\n                        <a href=\"#\" class=\"list-group-item list-group-item-action\">\r\n                            <div class=\"d-flex w-100 justify-content-between\">\r\n                                <h5 class=\"mb-1\">List group item heading</h5>\r\n                                <small class=\"text-muted\">3 days ago</small>\r\n                            </div>\r\n                            <p class=\"mb-1\">Some placeholder content in a paragraph.</p>\r\n                            <small class=\"text-muted\">And some muted small print.</small>\r\n                        </a>\r\n                        <a href=\"#\" class=\"list-group-item list-group-item-action\">\r\n                            <div class=\"d-flex w-100 justify-content-between\">\r\n                                <h5 class=\"mb-1\">List group item heading</h5>\r\n                                <small class=\"text-muted\">3 days ago</small>\r\n                            </div>\r\n                            <p class=\"mb-1\">Some placeholder content in a paragraph.</p>\r\n                            <small class=\"text-muted\">And some muted small print.</small>\r\n                        </a>\r\n                        <a href=\"#\" class=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                            <div class=\"d-flex w-100 justify-content-between\">\r\n                                <h5 class=\"mb-1\">List group item heading</h5>\r\n                                <small>3 days ago</small>\r\n                            </div>\r\n                            <p class=\"mb-1\">Some placeholder content in a paragraph.</p>\r\n                            <small>And some small print.</small>\r\n                        </a>\r\n                        <a href=\"#\" class=\"list-group-item list-group-item-action\">\r\n                            <div class=\"d-flex w-100 justify-content-between\">\r\n                                <h5 class=\"mb-1\">List group item heading</h5>\r\n                                <small class=\"text-muted\">3 days ago</small>\r\n                            </div>\r\n                            <p class=\"mb-1\">Some placeholder content in a paragraph.</p>\r\n                            <small class=\"text-muted\">And some muted small print.</small>\r\n                        </a>\r\n                        <a href=\"#\" class=\"list-group-item list-group-item-action\">\r\n                            <div class=\"d-flex w-100 justify-content-between\">\r\n                                <h5 class=\"mb-1\">List group item heading</h5>\r\n                                <small class=\"text-muted\">3 days ago</small>\r\n                            </div>\r\n                            <p class=\"mb-1\">Some placeholder content in a paragraph.</p>\r\n                            <small class=\"text-muted\">And some muted small print.</small>\r\n                        </a>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"col-3 members\">\r\n        <div class=\"container\">\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col\">\r\n                    <h2>Empieza!</h2>\r\n                    <button type=\"button\" class=\"btn add-file btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" *ngIf=\"!savefileChange\">\r\n                      Crear fichero de datos\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn add-file btn-sm\" disabled *ngIf=\"savefileChange\">\r\n                      Crear fichero de datos\r\n                      <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    </button>\r\n                    <app-datafile-create (savefileChange)=\"setSaveMode($event)\" [workspaceId]=\"workspaceId\" [collections]=\"collections\"></app-datafile-create>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col\">\r\n                    <h2>Members</h2>\r\n\r\n                    <ul class=\"list-group\">\r\n                        <div *ngFor=\"let user of users\">\r\n                            <li class=\"list-group-item pt-0 pb-0 d-flex justify-content-between align-items-center\">\r\n\r\n                                <div class=\"pt-1 pb-1 post-image\">\r\n                                    <img src=\"{{user.photo}}\" class=\"border rounded-circle me-2\" alt=\"\"> {{user.username}}\r\n                                </div>\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                  Admin\r\n                                </button>\r\n                                    <ul class=\"dropdown-menu dropdown-menu-end\">\r\n                                        <li><button class=\"dropdown-item btn-sm\" type=\"button\">Admin</button></li>\r\n                                        <li><button class=\"dropdown-item btn-sm \" type=\"button\">Owner</button></li>\r\n                                        <li><button class=\"dropdown-item btn-sm\" type=\"button\">Member</button></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </li>\r\n                        </div>\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <app-invitation-create></app-invitation-create>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <div class=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"contact\" role=\"tabpanel\" aria-labelledby=\"contact-tab\">...</div> -->\r\n<!-- </div>\r\n</div> -->\r\n","import { OnInit, OnDestroy } from '@angular/core';\r\nimport { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n// import { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { WorkspaceService } from '../../../services/workspaces.service';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Workspace } from 'src/app/models/workspace.model';\r\nimport { User } from '../../auth/login/login.component';\r\nimport { CollectionsService } from 'src/app/services/collections.service';\r\nimport { Collection } from 'src/app/models/collection';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport { Datafile } from 'src/app/models/datafile';\r\n\r\n@Component({\r\n  selector: 'app-workspace-details',\r\n  templateUrl: './workspace-details.component.html',\r\n  styleUrls: ['./workspace-details.component.css']\r\n})\r\nexport class WorkspaceDetailsComponent implements OnInit, OnDestroy{\r\n  edit = false;\r\n  enteredDescription = '';\r\n  enteredTitle = '';\r\n  workspace: Workspace;\r\n  workspaceId: string;\r\n  isLoading = false;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  users: User[];\r\n  collections: Collection[];\r\n  close: boolean = true;\r\n  editMode: boolean = false;\r\n  collectionIndex: number;\r\n  editCollection: Collection;\r\n  private usersSub: Subscription;\r\n  private authStatusSub: Subscription;\r\n  private collectionsSub: Subscription;\r\n  private datafilesSub: Subscription;\r\n\r\n  savefileChange = false;\r\n  orphanedDatafiles: Datafile[];\r\n\r\n  constructor(public workspacesService: WorkspaceService, public rolesService: RolesService, public route: ActivatedRoute,\r\n              public usersService: AuthService, public collectionsService: CollectionsService,\r\n              public datafilesService: DatafileService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      const workId = paramMap.get('workspaceId');\r\n      this.workspaceId = workId;\r\n\r\n      this.isLoading = true;\r\n      this.workspacesService.getWorkspace(workId).subscribe(workspaceData => {\r\n        this.isLoading = false;\r\n        this.workspace = {\r\n          title: workspaceData.workspace.title,\r\n          description: workspaceData.workspace.description,\r\n          mandatory: workspaceData.workspace.mandatory\r\n        };\r\n        this.orphanedDatafiles = workspaceData.orphanedDatafiles;\r\n      });\r\n    });\r\n    // Users\r\n    this.usersService.getUsersByWorkspace(this.workspaceId);\r\n    this.usersSub = this.usersService.getUserUpdateListener()\r\n      .subscribe( (userData: {users: User[]}) => {\r\n        this.isLoading = false;\r\n        this.users = userData.users;\r\n      });\r\n\r\n    // Collections\r\n    this.collectionsService.getCollectionsByWorkspace(this.workspaceId);\r\n    this.collectionsSub = this.collectionsService.getCollectionUpdateListener()\r\n      .subscribe( (collectionData: {collections: Collection[]}) => {\r\n        this.collections = collectionData.collections;\r\n        console.log(this.collections);\r\n      });\r\n\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n    this.usersSub.unsubscribe();\r\n    this.collectionsSub.unsubscribe();\r\n  }\r\n\r\n  onDelete(){\r\n    this.isLoading = true;\r\n    this.workspacesService.deleteWorkspace(this.workspaceId);\r\n    this.router.navigate(['/workspaces']);\r\n  }\r\n\r\n  onLeave(){\r\n    this.isLoading = true;\r\n    this.rolesService.deleteRole(this.workspaceId).subscribe(response => {\r\n      this.router.navigate(['/workspaces']);\r\n    }, error => {\r\n\r\n    });\r\n  }\r\n\r\n  onEdit() {\r\n    this.edit = true;\r\n  }\r\n\r\n  onAddCollection() {\r\n    this.close = false;\r\n  }\r\n\r\n  async onDeleteCollection(collectionId: string) {\r\n    this.isLoading = true;\r\n    await this.collectionsService.deleteCollection(collectionId);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}`]);\r\n      }).catch( err => {});\r\n    this.isLoading = false;\r\n  }\r\n\r\n  async onUpdateCollection(index: number) {\r\n    this.isLoading = true;\r\n    this.editMode = true;\r\n    this.collectionIndex = index;\r\n    this.isLoading = false;\r\n  }\r\n\r\n  setSaveMode(newvalue: boolean) {\r\n    this.savefileChange = newvalue;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PostListComponent } from './pages/posts/post-list/post-list.component';\r\nimport { PostCreateComponent } from './pages/posts/post-create/post-create.component';\r\n\r\nimport { SignupComponent } from './pages/auth/signup/signup.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { WorkspaceListComponent } from './pages/workspaces/workspace-list/workspace-list.component';\r\nimport { LoginComponent } from './pages/auth/login/login.component';\r\nimport { AuthGuard } from './pages/auth/auth.guard';\r\nimport { InvitationCreateComponent } from './components/invitation/invitation-create/invitation-create.component';\r\nimport { InvitationListComponent } from './pages/invitations/invitation-list/invitation-list.component';\r\nimport { WorkspaceCreateComponent } from './pages/workspaces/workspace-create/workspace-create.component';\r\nimport { WorkspaceDetailsComponent } from './pages/workspaces/workspace-details/workspace-details.component';\r\nimport { DatafileDetailsComponent } from './pages/datafiles/datafile-details/datafile-details.component';\r\nimport { TestDetailsComponent } from './pages/tests/test-details/test-details.component';\r\nimport { TestExecuteComponent } from './pages/tests/test-execute/test-execute.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent},\r\n  { path: 'workspaces', component: WorkspaceListComponent, canActivate: [AuthGuard] },\r\n  { path: 'workspace/create', component: WorkspaceCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'invitations', component: InvitationListComponent, canActivate: [AuthGuard] },\r\n  { path: 'invite', component: InvitationCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'posts', component: PostListComponent, canActivate: [AuthGuard]},\r\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'workspace/:workspaceId', component: WorkspaceDetailsComponent, canActivate: [AuthGuard] },\r\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'workspace/:workspaceId/datafile/:datafileId/test/:testId', component: TestDetailsComponent, canActivate: [AuthGuard] },\r\n  { path: 'workspace/:workspaceId/datafile/:datafileId', component: DatafileDetailsComponent, canActivate: [AuthGuard] },\r\n  {path: 'workspace/:workspaceId/runner', component: TestExecuteComponent, canActivate: [AuthGuard]},\r\n  {path: 'workspace/:workspaceId/runner/:testId', component: TestExecuteComponent, canActivate: [AuthGuard]},\r\n  { path: 'auth', loadChildren: () => import('./pages/auth/auth.module').then(m => m.AuthModule) }, // './auth/auth.module#AuthModule'\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor( private authService: AuthService, private router: Router ) {\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/auth/login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Datafile } from '../../../models/datafile';\r\nimport { DatafileService } from '../../../services/datafiles.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { map } from 'rxjs/operators';\r\nimport { Esquema } from 'src/app/models/esquema';\r\n\r\n\r\n@Component({\r\n  selector: 'app-datafile-details',\r\n  templateUrl: './datafile-details.component.html',\r\n  styleUrls: ['./datafile-details.component.css']\r\n})\r\nexport class DatafileDetailsComponent implements OnInit, OnDestroy{\r\n  datafile: Datafile;\r\n  datafileId: string;\r\n  isLoading = false;\r\n  isUploading = false;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  esquemas: Esquema[];\r\n  configurations: any[];\r\n  formattedConfigs: any[];\r\n  tests: any[];\r\n  private authStatusSub: Subscription;\r\n  infer = false;\r\n  edit = false;\r\n  fileForm: FormGroup;\r\n  fileContentForm: FormGroup;\r\n  filePreview: string;\r\n  content: any = null;\r\n  arrayBuffer: any;\r\n  file: any = null;\r\n  fileName: string = '';\r\n  invalidExtension = false;\r\n  extension;\r\n  workspaceId;\r\n\r\n  constructor(public datafilesService: DatafileService, public route: ActivatedRoute, public usersService: AuthService,\r\n              private router: Router){\r\n                this.fileForm = new FormGroup({\r\n                  'contentPath': new FormControl(null, {validators: [Validators.required]})\r\n                });\r\n                this.fileContentForm = new FormGroup({\r\n                  'fileContent': new FormControl({value: '', disabled: true}),\r\n                });\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      const datafileId = paramMap.get('datafileId');\r\n      this.workspaceId = paramMap.get('workspaceId');\r\n      this.datafileId = datafileId;\r\n      this.isLoading = true;\r\n      this.datafilesService.getDatafile(datafileId).subscribe(datafileData => {\r\n        this.isLoading = false;\r\n        this.datafile = {\r\n          title: datafileData.datafile.title,\r\n          description: datafileData.datafile.description,\r\n          contentPath: datafileData.datafile.contentPath,\r\n          errorLimit: datafileData.datafile.errorLimit,\r\n          delimiter: datafileData.datafile.delimiter,\r\n          coleccion: datafileData.datafile.coleccion,\r\n          workspace: datafileData.datafile.workspace,\r\n        };\r\n        this.content = datafileData.content;\r\n        this.esquemas = datafileData.esquemas;\r\n        this.configurations = datafileData.configurations;\r\n        this.tests = datafileData.tests;\r\n\r\n        this.formattedConfigs = [];\r\n        this.configurations.forEach(config => {\r\n          const extraParamsJSON = JSON.stringify(config.extraParams).toString();\r\n          const extraParamsStr1 = extraParamsJSON.replace(/{/g, '');\r\n          const extraParamsStr2 = extraParamsStr1.replace(/}/g, '');\r\n          const extraParamsStr = extraParamsStr2.replace(/,/g, ',\\n');\r\n          console.log(extraParamsStr);\r\n          this.formattedConfigs.push({...config, extraParamsStr});\r\n        });\r\n\r\n        if (this.content !== null) {\r\n          this.infer = true;\r\n        }\r\n        this.fileForm = new FormGroup({\r\n          'contentPath': new FormControl(null, {validators: [Validators.required]})\r\n        });\r\n        if (this.datafile.contentPath) {\r\n          // contentPath: {backend/files/fulls_dmf_full_v1_20200504_short_10-1622910312416.csv\",\r\n          const nameWExtension = this.datafile.contentPath.split('/');\r\n          const splitNameWExtension = nameWExtension[2].split('.');\r\n          this.extension = splitNameWExtension[1]; // setted in order to use it on onDownload() method\r\n          const extension = '.' + splitNameWExtension[1];\r\n          const nameWDate = nameWExtension[2].split('-');\r\n          const name = nameWDate[0];\r\n          this.fileName = name + extension;\r\n        }\r\n        if (this.extension === 'xlsx') {\r\n          let res = this.content[0].join(',')+ '\\n';\r\n          for (let arr of this.content) {\r\n            res = res + arr.join(',') + '\\n';\r\n          }\r\n          this.fileContentForm.patchValue({fileContent: res});\r\n        } else if (this.extension === 'csv') {\r\n          this.fileContentForm.patchValue({fileContent: datafileData.content });\r\n\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  async onDelete(){\r\n    this.isLoading = true;\r\n    await this.datafilesService.deleteDatafile(this.datafileId);\r\n    this.router.navigate([`/workspace/${this.datafile.workspace}`]);\r\n  }\r\n\r\n  onEdit() {\r\n    this.edit = true;\r\n  }\r\n\r\n  // File upload function\r\n  async onFilePicked(event: Event) {\r\n    const files = (event.target as HTMLInputElement).files;\r\n    if (files && files.length > 0) {\r\n      const uploadedFile = (event.target as HTMLInputElement).files[0];\r\n      const split = uploadedFile.name.split('.');\r\n      const extension = split[1].toLowerCase();\r\n      if (extension !== 'xlsx' && extension !== 'csv') {\r\n        this.invalidExtension = true;\r\n        return;\r\n      } else {\r\n        this.invalidExtension = false;\r\n      }\r\n\r\n      this.file = uploadedFile;\r\n      this.isUploading = true;\r\n      // tslint:disable-next-line: max-line-length\r\n      await this.datafilesService.updateDatafile( this.datafileId, this.datafile.title, this.datafile.description, this.file, 'updateFile');\r\n\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n      .then(() => {\r\n        this.router.navigate([`/workspace/${this.workspaceId}/datafile/${this.datafileId}`]);\r\n      }).catch( err => {console.log(err);});\r\n      this.isUploading = false;\r\n    }}\r\n\r\n    async onSave() {\r\n      let file: any;\r\n      let content = this.fileContentForm.value.fileContent;\r\n      console.log(content);\r\n      if (this.extension === 'csv') {\r\n        const blob = new Blob([content], {type: 'text/csv' });\r\n        file = new File([blob], this.fileName, {type: 'text/csv'});\r\n      } else if (this.extension === 'xlsx') {\r\n        console.log(typeof content);\r\n        let rows = content.split('\\n').map(row => {\r\n          return row.split(',');\r\n        });\r\n        console.log(rows);\r\n        const worksheetName = this.fileName;\r\n\r\n        const wsorksheetContent = XLSX.utils.aoa_to_sheet(rows);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n        const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n        // tslint:disable-next-line: max-line-length\r\n        const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n        console.log(data);\r\n        // tslint:disable-next-line: max-line-length\r\n        file = new File([data], this.fileName, { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n        console.log(file);\r\n      } else {\r\n        return;\r\n      }\r\n      this.isLoading = true;\r\n      await this.datafilesService.updateDatafile( this.datafileId, this.datafile.title, this.datafile.description, file, 'updateContent');\r\n      this.fileContentForm.get('fileContent').disable();\r\n      this.isLoading = false;\r\n    }\r\n\r\n    async onDeleteFile() {\r\n      this.isUploading = true;\r\n      await this.datafilesService.updateDatafile(this.datafileId, this.datafile.title, this.datafile.description, null, 'deleteFile');\r\n      this.router.navigateByUrl('/', {skipLocationChange: true})\r\n        .then(() => {\r\n          this.router.navigate([`/workspace/${this.datafileId}/datafile/${this.datafileId}`]);\r\n        }).catch( err => {\r\n          console.log(err);\r\n        });\r\n\r\n      this.isUploading = false;\r\n    }\r\n\r\n    onDownload() {\r\n      if (this.extension === 'xlsx') {\r\n        console.log(this.content);\r\n        const worksheetName = this.fileName;\r\n        const wsorksheetContent = XLSX.utils.aoa_to_sheet(this.content);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, wsorksheetContent, worksheetName);\r\n        XLSX.writeFile(workbook, this.fileName); // downloads it\r\n        const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array'});\r\n        // tslint:disable-next-line: max-line-length\r\n        const data: Blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n        console.log(data);\r\n        const file: File = new File([data], 'out.xlsx', { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'});\r\n        console.log(file);\r\n      } else if (this.extension === 'csv') {\r\n        const blob = new Blob([this.content], {type: 'text/csv' })\r\n        saveAs(blob, this.fileName);\r\n      } else {\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    onEditContent() {\r\n      if (this.fileContentForm.get('fileContent').disabled) {\r\n        this.fileContentForm.get('fileContent').enable();\r\n      } else {\r\n        this.fileContentForm.get('fileContent').disable();\r\n      }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"row complete-height\">\r\n    <div class=\"col-2\">\r\n\r\n    </div>\r\n    <div class=\"col-7\">\r\n        <div class=\"mt-2\" *ngIf=\"isLoading\">\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n        <app-datafile-edit *ngIf=\"edit\" [(edit)]=\"edit\" [datafile]=\"datafile\" [datafileId]=\"datafileId\"></app-datafile-edit>\r\n\r\n        <div class=\"container\" *ngIf=\"!isLoading && !edit\">\r\n            <div class=\"row mt-4\">\r\n\r\n                <div class=\"col-10\">\r\n                    <h2>{{ datafile.title }} (from <a routerLink=\"/workspace/{{workspaceId}}\">\r\n                      {{workspaceId}}\r\n                    </a>)</h2>\r\n                </div>\r\n                <div class=\"col-2 d-flex justify-content-end\">\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEdit()\">\r\n                          <i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"dropdown\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                            <li><a class=\"dropdown-item danger\" (click)=\"onDelete()\">Eliminar Fichero</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col\">\r\n                    <p>{{ datafile.description }}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-1\">\r\n                <div class=\"col-2 pe-0\">\r\n                    <h2 class=\"mb-0\">Contenido</h2>\r\n                </div>\r\n                <div class=\"col-10 ps-0\" *ngIf=\"!content\">\r\n                    <div>\r\n                        <form [formGroup]=\"fileForm\" (ngSubmit)=\"onSave()\">\r\n                            <input type=\"file\" (change)=\"onFilePicked($event)\" formControlName=\"contentPath\" class=\"form-control form-control-sm\" name=\"uploaded_file\">\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-10 d-flex justify-content-end ps-0\" *ngIf=\"content\">\r\n                    <div class=\"me-1\">\r\n                        <form [formGroup]=\"fileForm\" (ngSubmit)=\"onSave()\">\r\n                            <input type=\"file\" (change)=\"onFilePicked($event)\" formControlName=\"contentPath\" class=\"form-control form-control-sm\" name=\"uploaded_file\">\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" *ngIf=\"content\" (click)=\"onDownload()\">\r\n                          <i class=\"fas fa-download\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"me-1\">\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onEditContent()\" *ngIf=\"content\">\r\n                        <i class=\"fas fa-pen\"></i>\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"onDeleteFile()\" *ngIf=\"content\">\r\n                        <i class=\"fas fa-trash-alt danger\"></i>\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-floating\">\r\n                    <form [formGroup]=\"fileContentForm\">\r\n                        <textarea formControlName=\"fileContent\" class=\"form-control mt-2 pt-1\" id=\"floatingTextarea2\" style=\"height: 400px\"></textarea>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <div *ngIf=\"fileName\">\r\n                        Nombre del archivo: {{fileName}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6 mt-2 d-flex justify-content-end\">\r\n                    <div>\r\n                        <button class=\"btn btn-outline-primary btn-sm\" type=\"submit\" *ngIf=\"content\" [disabled]=\"disabledContent\" (click)=\"onSave()\">Guardar cambios</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <mat-error>\r\n                    <small *ngIf=\"invalidExtension\" class=\"text-danger\">\r\n                              Ingrese un archivo con el formato adecuado (.json o .yaml).\r\n                            </small>\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <div class=\"container ps-0\">\r\n            <app-esquema-list [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [esquemas]=\"esquemas\" [infer]=\"infer\"></app-esquema-list>\r\n        </div>\r\n        <div class=\"container ps-0\">\r\n            <app-configuration-list [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [configurations]=\"configurations\"></app-configuration-list>\r\n        </div>\r\n        <div class=\"container ps-0\">\r\n            <app-test-list [datafileId]=\"datafileId\" [workspaceId]=\"workspaceId\" [tests]=\"tests\" [esquemas]=\"esquemas\" [configurations]=\"formattedConfigs\"></app-test-list>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { DatafileService } from 'src/app/services/datafiles.service';\r\n\r\n@Component({\r\n  selector: 'app-datafile-create',\r\n  templateUrl: './datafile-create.component.html',\r\n  styleUrls: ['./datafile-create.component.css']\r\n})\r\nexport class DatafileCreateComponent implements OnInit, OnDestroy{\r\n  datafileForm: FormGroup;\r\n  private authStatusSub: Subscription;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  @Input() savefile;\r\n  @Output() savefileChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Input() workspaceId;\r\n  @Input() collections;\r\n\r\n  constructor(public datafileService: DatafileService, public route: ActivatedRoute,\r\n              private formBuilder: FormBuilder, private usersService: AuthService) {\r\n                this.createForm();\r\n                this.datafileForm.reset({\r\n                  title: '',\r\n                  description: '',\r\n                  collection: 'Ninguna'\r\n                });\r\n              }\r\n\r\n  ngOnInit(){\r\n    this.userIsAuthenticated = this.usersService.getIsAuth();\r\n    this.authStatusSub = this.usersService.getAuthStatusListener().subscribe(isAuthenticated => {\r\n      this.userIsAuthenticated = isAuthenticated;\r\n      this.userId = this.usersService.getUserId();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  createForm() {\r\n    this.datafileForm = this.formBuilder.group({\r\n      title       : ['', [Validators.required, Validators.minLength(1), Validators.maxLength(100)]],\r\n      description : ['', [Validators.maxLength(200)]],\r\n      collection : ['', ],\r\n    });\r\n  }\r\n  get invalidTitle() {\r\n    return this.datafileForm.get('title').invalid && this.datafileForm.get('title').touched;\r\n  }\r\n\r\n  get invalidDescription() {\r\n    return this.datafileForm.get('description').invalid && this.datafileForm.get('description').touched;\r\n  }\r\n\r\n  async onSave() {\r\n    if (this.datafileForm.invalid){\r\n      return Object.values(this.datafileForm.controls).forEach(control => {\r\n        if (control instanceof FormGroup) {\r\n          Object.values(control.controls).forEach( control => control.markAsTouched());\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n    }\r\n    this.savefileChange.emit(true);\r\n    const values = this.datafileForm.getRawValue();\r\n    await this.datafileService.addDatafile(values.title, values.description, values.collection, this.workspaceId);\r\n    this.datafileForm.reset({\r\n      title: '',\r\n      description: '',\r\n      collection: 'Ninguna'\r\n    });\r\n    this.savefileChange.emit(false);\r\n  }\r\n}\r\n","<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Crear fichero de datos</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"datafileForm\" (ngSubmit)=\"onSave()\">\r\n                    <div class=\"mb-3\">\r\n                        <!-- <label class=\"col-form-label\">Título:</label> -->\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Título\" formControlName=\"title\" [class.is-invalid]=\"invalidTitle\">\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidTitle\" class=\"text-danger\">\r\n                            Ingrese un título adecuado (entre 1 y 100 caracteres).\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <!-- <label for=\"message-text\" class=\"col-form-label\">Descripción:</label> -->\r\n                        <textarea class=\"form-control\" placeholder=\"Descripción\" formControlName=\"description\" [class.is-invalid]=\"invalidDescription\"></textarea>\r\n                        <mat-error>\r\n                            <small *ngIf=\"invalidDescription\" class=\"text-danger\">\r\n                            Ingrese una descripción adecuada\r\n                          </small>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"col-form-label\">Colección:</label>\r\n                        <div class=\"btn-group ms-2\">\r\n                            <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\" formControlName=\"collection\">\r\n                              <option selected> Ninguna </option>\r\n                              <option *ngFor=\"let collection of collections\" value=\"{{collection.id}}\">{{collection.title}}</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!datafileForm.valid\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"datafileForm.valid\" data-bs-dismiss=\"modal\" (click)=\"onSave()\">Crear fichero de datos</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}